
MESSAGE(STATUS "Processing ToolKit: ${TOOLKIT} (${TOOLKIT_MODULES})")
SET(TOOLKIT_SOURCE_FILES)
SET(TOOLKIT_HEADER_FILES)
SET(POSSIBLE_INSTALL_HEADERS)
IF(DEFINED TOOLKIT_INCLUDE_DIRECTORIES)
	INCLUDE_DIRECTORIES(${TOOLKIT_INCLUDE_DIRECTORIES})
ENDIF(DEFINED TOOLKIT_INCLUDE_DIRECTORIES)
FOREACH(MODULE ${TOOLKIT_MODULES})
	# add all .cxx/*.c files or each module
	FILE(GLOB source_files
		${OpenCASCADE_SOURCE_DIR}/src/${MODULE}/*.cxx
		${OpenCASCADE_SOURCE_DIR}/src/${MODULE}/*.c
		${OpenCASCADE_SOURCE_DIR}/drv/${MODULE}/*.cxx
		${OpenCASCADE_SOURCE_DIR}/drv/${MODULE}/*.c)
	FILE(GLOB header_files
		${OpenCASCADE_SOURCE_DIR}/inc/Handle_${MODULE}*.hxx
		${OpenCASCADE_SOURCE_DIR}/inc/${MODULE}*.hxx
		${OpenCASCADE_SOURCE_DIR}/inc/Handle_${MODULE}*.h
		${OpenCASCADE_SOURCE_DIR}/inc/${MODULE}*.h
		${OpenCASCADE_SOURCE_DIR}/src/${MODULE}/*.hxx
		${OpenCASCADE_SOURCE_DIR}/src/${MODULE}/*.lxx
		${OpenCASCADE_SOURCE_DIR}/src/${MODULE}/*.gxx
		${OpenCASCADE_SOURCE_DIR}/src/${MODULE}/*.h
		${OpenCASCADE_SOURCE_DIR}/drv/${MODULE}/*.hxx
		${OpenCASCADE_SOURCE_DIR}/drv/${MODULE}/*.ixx
		${OpenCASCADE_SOURCE_DIR}/drv/${MODULE}/*.jxx
		${OpenCASCADE_SOURCE_DIR}/drv/${MODULE}/*.h)
	#MESSAGE(STATUS "${source_files}")
	# Build a list of all header files, with the ultimate aim of
	# forming the public or install headers
	LIST(REMOVE_DUPLICATES header_files)
	FOREACH(module_header_file ${header_files})
		STRING(REGEX MATCH
			"/([a-zA-Z0-9_\\.]+.[hlgij][x]*)$" DUMMY_OUTPUT ${module_header_file} )
		LIST(APPEND POSSIBLE_INSTALL_HEADERS ${CMAKE_MATCH_1})
	ENDFOREACH(module_header_file ${header_files})

	FOREACH(module_source_file ${source_files})
		STRING(REGEX MATCH "${MODULE}/([a-zA-Z0-9_\\.]+.c[x]*)$" DUMMY_OUTPUT ${module_source_file} )
		STRING(REGEX REPLACE "([a-zA-Z0-9_\\.]+)c([x]*)$"
			"\\1h\\2" POSSIBLE_INSTALL_HEADER ${CMAKE_MATCH_1})
		LIST(APPEND POSSIBLE_INSTALL_HEADERS
			${POSSIBLE_INSTALL_HEADER})
	ENDFOREACH(module_source_file ${source_files})

	IF (WIN32)
		# For compilers under Windows a define must be set per file to correctly set the export macro
		SET_SOURCE_FILES_PROPERTIES(${source_files} PROPERTIES COMPILE_FLAGS "-D__${MODULE}_DLL")
	ENDIF(WIN32)

	# append these source files to the list of source files of the toolkit
	SET(TOOLKIT_SOURCE_FILES ${TOOLKIT_SOURCE_FILES} ${source_files}) 
	SET(TOOLKIT_HEADER_FILES ${TOOLKIT_HEADER_FILES} ${header_files}) 
	# required include paths
	INCLUDE_DIRECTORIES(${OpenCASCADE_SOURCE_DIR}/src/${MODULE} ${OpenCASCADE_SOURCE_DIR}/drv/${MODULE})
ENDFOREACH(MODULE ${TOOLKIT_MODULES})
ADD_LIBRARY(${TOOLKIT} ${OPENCASCADE_LIBRARY_TYPE} ${TOOLKIT_SOURCE_FILES})
# TODO Add current toolkit header files into a source group?
# Add target specific locations of *.lxx and *.ixx files
SET_TARGET_PROPERTIES(${TOOLKIT} PROPERTIES
	SOVERSION ${OpenCASCADE_ABI_SOVERSION}
	VERSION ${OpenCASCADE_ABI_VERSION}
)

# Set dependencies for thit ToolKit
IF ( NOT "${TOOLKIT}" STREQUAL "TKernel" )
	LIST(REMOVE_DUPLICATES TOOLKIT_DEPENDS)
ENDIF ( NOT "${TOOLKIT}" STREQUAL "TKernel" )
TARGET_LINK_LIBRARIES(${TOOLKIT} ${TOOLKIT_DEPENDS} ${TOOLKIT_LIBS} ${WIN32_LIBS})

IF(TOOLKIT_DEPENDS)
	ADD_DEPENDENCIES(${TOOLKIT} ${TOOLKIT_DEPENDS})
ENDIF(TOOLKIT_DEPENDS)

###########
# INSTALL #
###########
LIST(REMOVE_DUPLICATES POSSIBLE_INSTALL_HEADERS)
FOREACH(POSSIBLE_INSTALL_HEADER ${POSSIBLE_INSTALL_HEADERS})
	# Test for existence in inc/
	IF(EXISTS ${OpenCASCADE_SOURCE_DIR}/inc/${POSSIBLE_INSTALL_HEADER})
		LIST(APPEND INSTALL_HEADERS ${OpenCASCADE_SOURCE_DIR}/inc/${POSSIBLE_INSTALL_HEADER})
	ENDIF(EXISTS ${OpenCASCADE_SOURCE_DIR}/inc/${POSSIBLE_INSTALL_HEADER})
ENDFOREACH(POSSIBLE_INSTALL_HEADER ${POSSIBLE_INSTALL_HEADERS})
LIST(APPEND INSTALL_HEADERS ${OpenCASCADE_BINARY_DIR}/inc/oce-config.h)
 
INSTALL(FILES ${INSTALL_HEADERS}
	DESTINATION ${OpenCASCADE_INSTALL_INCLUDE_DIR} COMPONENT Development
)

IF(TOOLKIT_IS_PRIVATE)
	SET(TOOLKIT_INSTALL_LIB_DIR ${OpenCASCADE_INSTALL_PACKAGE_LIB_DIR})
ELSE(TOOLKIT_IS_PRIVATE)
	SET(TOOLKIT_INSTALL_LIB_DIR ${OpenCASCADE_INSTALL_LIB_DIR})
	SET_TARGET_PROPERTIES(${TOOLKIT} PROPERTIES INSTALL_RPATH "${OpenCASCADE_INSTALL_LIB_DIR}")
ENDIF(TOOLKIT_IS_PRIVATE)

INSTALL(TARGETS ${TOOLKIT}
	RUNTIME DESTINATION ${TOOLKIT_INSTALL_LIB_DIR} COMPONENT RuntimeLibraries
	LIBRARY DESTINATION ${TOOLKIT_INSTALL_LIB_DIR} COMPONENT RuntimeLibraries
	ARCHIVE DESTINATION ${TOOLKIT_INSTALL_LIB_DIR} COMPONENT Development
)

