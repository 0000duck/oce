From 7ae8d8089fe828a0e10419be79ffa56bbbee2eaf Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Tue, 26 Jul 2011 21:53:42 +0200
Subject: [PATCH] Removed all __finally __leave code, changed to a more
 portable control flow.

Just three functions in WNT_*.cxx were too complex to change, so goto's were used there.

The code needs re-formatting, didn't do it to not mess the resulting diff
---
 src/OSD/OSD_File.cxx           |  171 +++++++++++++++++++++-------------------
 src/OSD/OSD_FileNode.cxx       |   34 +++------
 src/OSD/OSD_WNT.cxx            |  114 ++++++++-------------------
 src/OSD/OSD_WNT_1.cxx          |   56 +++++--------
 src/OSD/OSD_signal_WNT.cxx     |   39 ++++------
 src/OpenGl/OpenGl_txgl.cxx     |   29 ++-----
 src/WNT/WNT_ImageProcessor.cxx |  157 +++++++++++++++----------------------
 7 files changed, 242 insertions(+), 358 deletions(-)

Index: oce/src/OSD/OSD_File.cxx
===================================================================
--- oce.orig/src/OSD/OSD_File.cxx
+++ oce/src/OSD/OSD_File.cxx
@@ -1564,11 +1564,6 @@ OSD_File OSD_File :: BuildTemporary () {
 
 //-------------------------------------------------finpri???980424
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return
-#endif
 
 void OSD_File :: SetLock ( const OSD_LockType Lock ) {
 
@@ -1579,12 +1574,13 @@ void OSD_File :: SetLock ( const OSD_Loc
  
  ZeroMemory (  &ovlp, sizeof ( OVERLAPPED )  );
 
- __try {
+ bool Ret = true;
+ if (Ret){
 
   if (  ( myLock = Lock ) == OSD_NoLock  ) {
 
    UnLock ();
-   __leave;
+   Ret = false;
 
   } else if ( myLock == OSD_ReadLock || myLock == OSD_ExclusiveLock ) {
 
@@ -1593,32 +1589,26 @@ void OSD_File :: SetLock ( const OSD_Loc
   } else
 
    dwFlags = 0;
+ }
 
+ if (Ret)
+ {
   LARGE_INTEGER aSize;
   aSize.QuadPart = Size();
   if (!LockFileEx (myFileHandle, dwFlags, 0, aSize.LowPart, aSize.HighPart, &ovlp)) {
 
    _osd_wnt_set_error ( myError, OSD_WFile );
-   __leave;
+   Ret = false;
 
   }  // end if
-
+ }
+ if (Ret)
+ {
   ImperativeFlag = Standard_True;
+ }
 
- }  // end __try
-
- __finally {}
-
-#ifdef VAC
-leave: ;         // added for VisualAge
-#endif
 }  // end OSD_File :: SetLock
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 void OSD_File :: UnLock () {
 
@@ -1706,11 +1696,6 @@ Standard_Boolean OSD_File :: IsOpen () c
 
 }  // end OSD_File :: IsOpen
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
 
 PSECURITY_DESCRIPTOR __fastcall _osd_wnt_protection_to_sd (
                                  const OSD_Protection& prot, BOOL fDir, char* fName
@@ -1741,34 +1726,46 @@ PSECURITY_DESCRIPTOR __fastcall _osd_wnt
  PSECURITY_DESCRIPTOR pfSD = NULL;
  BOOL                 fDummy;
  PFILE_ACE            pFileACE;
+ bool                 Ret = true;
 
- __try {
+ if (Ret) {
 
   j = fDir ? 1 : 0;
 
   if (  !OpenProcessToken (
           GetCurrentProcess (), TOKEN_QUERY, &hProcess
          )
-  ) __leave;
+  ) Ret = false;
+ }
 
+  if (Ret) {
   if (   (  pTkGroups = ( PTOKEN_GROUPS )GetTokenInformationEx (
                                           hProcess, TokenGroups
                                          )
          ) == NULL
-  ) __leave; 
+  ) Ret = false;
+  }
   
+  if (Ret)
+  {
   if (   (  pTkOwner = ( PTOKEN_OWNER )GetTokenInformationEx (
                                         hProcess, TokenOwner
                                        )
          ) == NULL
-  ) __leave;
+  ) Ret = false;
+  }
 
+  if (Ret)
+  {
   if (   (  pTkPrimaryGroup = ( PTOKEN_PRIMARY_GROUP )GetTokenInformationEx (
                                                        hProcess, TokenPrimaryGroup
                                                       )
          ) == NULL
-  ) __leave;
+  ) Ret = false;
+  }
 
+  if (Ret)
+  {
 
 retry:
   if ( fName == NULL )
@@ -1824,7 +1821,11 @@ retry:
                   ( ( GetLengthSid ( pSIDworld ) + ACE_HEADER_SIZE ) << j )
                );
 
-  if (   (  pACL = CreateAcl ( dwACLsize )  ) == NULL   ) __leave;
+  if (   (  pACL = CreateAcl ( dwACLsize )  ) == NULL   ) Ret = false;
+  }
+
+  if (Ret)
+  {
 
   if ( dwAccessAdmin != 0 )
 
@@ -1930,17 +1931,17 @@ retry:
    }  // end for
 
   }  // end if
+  } // if (Ret)
 
-  if (   (  retVal = AllocSD ()  ) == NULL   ) __leave;
+  if (Ret)
+  if (   (  retVal = AllocSD ()  ) == NULL   ) Ret = false;
 
-  if (  !SetSecurityDescriptorDacl ( retVal, TRUE, pACL, TRUE )  ) __leave;
+  if (Ret)
+  if (  !SetSecurityDescriptorDacl ( retVal, TRUE, pACL, TRUE )  ) Ret = false;
 
+  if (Ret)
   fOK = TRUE;
 
- }  // end __try
-
- __finally {
- 
   if ( !fOK ) {
 
    if ( retVal != NULL )
@@ -1961,21 +1962,10 @@ retry:
   if ( pTkPrimaryGroup != NULL ) FreeTokenInformation ( pTkPrimaryGroup );
   if ( pfSD            != NULL ) FreeFileSecurity     ( pfSD            );
  
- }  // end __finally
-
-#ifdef VAC
-leave: ;     // added for VisualAge
-#endif
-
  return retVal;
  
 }  // end _osd_wnt_protection_to_sd */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 static void __fastcall _test_raise ( HANDLE hFile, Standard_CString str ) {
 
@@ -2450,11 +2440,6 @@ Standard_Integer __fastcall _get_file_ty
 
 }  // end _get_file_type
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
 
 BOOL __fastcall _osd_wnt_sd_to_protection (
                  PSECURITY_DESCRIPTOR pSD, OSD_Protection& prot, BOOL fDir
@@ -2475,21 +2460,29 @@ BOOL __fastcall _osd_wnt_sd_to_protectio
  BOOL          retVal = FALSE;
  GET_PROT_FUNC _get_prot_func = fDir ? &_get_protection_dir : &_get_protection;
 
- __try {
+ BOOL          Ret = true;
+ if (Ret) {
 
-  if (  !GetSecurityDescriptorOwner ( pSD, &pSIDowner, &fDefaulted )  ) __leave;
+  if (  !GetSecurityDescriptorOwner ( pSD, &pSIDowner, &fDefaulted )  ) Ret = false;
+ }
 
+ if (Ret)
+ {
   if (  !GetSecurityDescriptorDacl ( pSD, &fPresent, &pACL, &fDefaulted ) ||
         !fPresent
-  ) __leave;
+  ) Ret = false;
+ }
 
+ if (Ret)
+ {
   if ( pSIDowner == NULL || pACL == NULL ) {
   
    SetLastError ( ERROR_NO_SECURITY_ON_OBJECT );
-   __leave;
-  
+   Ret = false;
   }  // end if
- 
+ }
+ if (Ret)
+ {
   pSIDadmin = AdminSid ();
   pSIDworld = WorldSid ();
 
@@ -2530,23 +2523,12 @@ BOOL __fastcall _osd_wnt_sd_to_protectio
 
   retVal = TRUE;
   
- }  // end __try
-
- __finally {}
+ }   
        
-#ifdef VAC
-leave: ;      // added for VisualAge
-#endif
-
  return retVal;
 
 }  // end _osd_wnt_sd_to_protection
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 static OSD_SingleProtection __fastcall _get_protection ( DWORD mask ) {
 
@@ -2764,11 +2746,6 @@ static OSD_SingleProtection __fastcall _
 
 }  // end _get_protection_dir
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return fOK
-#endif
 
 BOOL __fastcall _osd_print (const Standard_PCharacter pName, Standard_CString fName ) {
 
@@ -2776,41 +2753,49 @@ BOOL __fastcall _osd_print (const Standa
  HANDLE hPrinter = NULL;
  BYTE   jobInfo[ MAX_PATH + sizeof ( DWORD ) ];
  DWORD  dwNeeded, dwCode = 0;
+ bool Ret = true;
 
  fOK = fJob = FALSE;
 
- __try {
+ if (Ret) {
  
   if (  !OpenPrinter ( Standard_PCharacter(pName), &hPrinter, NULL )  ) {
   
    hPrinter = NULL;
-   __leave;
+   Ret = false;
   
   }  // end if
+ }
 
+ if (Ret)
+ {
   if (   !AddJob (
            hPrinter, 1, jobInfo, MAX_PATH + sizeof ( DWORD ), &dwNeeded
           )
-  ) __leave;
+  ) Ret = false;
+ }
 
+ if (Ret)
+ { 
   fJob = TRUE;
 
   if (  !CopyFile (
           fName, (  ( ADDJOB_INFO_1* )jobInfo  ) -> Path, FALSE
          )
-  ) __leave;
+  )  Ret = false;
+ }
 
+ if (Ret)
+ {
   if (  !ScheduleJob (
           hPrinter, (  ( ADDJOB_INFO_1* )jobInfo  ) -> JobId
          )
-  ) __leave;
+  ) Ret = false;
+ }
   
+ if (Ret)
   fOK = TRUE;
- 
- }  // end __try
 
- __finally {
- 
   if ( !fOK ) {
   
    BYTE  info[ 1024 ];
@@ -2836,12 +2821,6 @@ BOOL __fastcall _osd_print (const Standa
   }  // end if
 
   if ( hPrinter != NULL ) ClosePrinter ( hPrinter );
- 
- }  // end __finally
-
-#ifdef VAC
-leave: ;       // added for VisualAge
-#endif
 
  if ( !fOK ) SetLastError ( dwCode );
 
@@ -2849,11 +2828,6 @@ leave: ;       // added for VisualAge
                 
 }  // end _osd_print
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 Standard_Boolean OSD_File::IsReadable()
 {
Index: oce/src/OSD/OSD_FileNode.cxx
===================================================================
--- oce.orig/src/OSD/OSD_FileNode.cxx
+++ oce/src/OSD/OSD_FileNode.cxx
@@ -964,11 +964,6 @@ void _osd_wnt_set_error ( OSD_Error& err
 
 }  // end _set_error
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
 
 static BOOL __fastcall _get_file_time (
                         Standard_CString fName, LPSYSTEMTIME lpSysTime, BOOL fAccess
@@ -979,46 +974,34 @@ static BOOL __fastcall _get_file_time (
  FILETIME   ftLastWriteTime;
  LPFILETIME lpftPtr;
  HANDLE     hFile = INVALID_HANDLE_VALUE;
-
- __try {
-
+ bool       Ret = true;
+ 
   if (   (  hFile = CreateFile (
                      fName, 0, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL
                     )
          ) == INVALID_HANDLE_VALUE
-  ) __leave;
+  ) Ret = false;
 
-  if (  !GetFileTime ( hFile, &ftCreationTime, NULL, &ftLastWriteTime )  ) __leave;
+  if (Ret)
+  if (  !GetFileTime ( hFile, &ftCreationTime, NULL, &ftLastWriteTime )  ) Ret = false;
 
+  if (Ret)
+  {
   lpftPtr = fAccess ? &ftLastWriteTime : &ftCreationTime;
 
-  if (  !FileTimeToSystemTime ( lpftPtr, lpSysTime )  ) __leave;
+  if (  !FileTimeToSystemTime ( lpftPtr, lpSysTime )  ) Ret = false;
+  }
 
+  if(Ret)
   retVal = TRUE;
 
- }  // end __try
-
- __finally {
- 
   if ( hFile != INVALID_HANDLE_VALUE )
-
    CloseHandle ( hFile );
- 
- }  // end __finally
-
-#ifdef VAC
-leave: ;      // added for VisualAge
-#endif
 
  return retVal;
 
 }  // end _get_file_time
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 static void __fastcall _test_raise ( TCollection_AsciiString fName, Standard_CString str ) {
 
Index: oce/src/OSD/OSD_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_WNT.cxx
+++ oce/src/OSD/OSD_WNT.cxx
@@ -119,12 +119,6 @@ void FreeSD ( PSECURITY_DESCRIPTOR pSD )
 /******************************************************************************/
 /***/
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return buffer
-#endif
-
 LPVOID GetTokenInformationEx ( HANDLE hToken, TOKEN_INFORMATION_CLASS tic ) {
 
  DWORD  errVal;
@@ -132,8 +126,7 @@ LPVOID GetTokenInformationEx ( HANDLE hT
  DWORD  dwSizeNeeded = 0;
  LPVOID buffer       = NULL;
  BOOL   fOK          = FALSE;
-
- __try {
+ bool   Ret = true;
 
   do {
 
@@ -143,46 +136,35 @@ LPVOID GetTokenInformationEx ( HANDLE hT
    if (  !GetTokenInformation ( hToken, tic, buffer, dwSize, &dwSizeNeeded )  ) {
 
     if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   )
-        
-     __leave;
+    {    
+      Ret = false;
+      break;
+    }
 
     if (  ( buffer = HeapAlloc (  hHeap, 0, dwSizeNeeded  ) ) == NULL  )
-
-     __leave;
+    {    
+      Ret = false;
+      break;
+    }
 
    }  /* end if */
  
   } while ( errVal != ERROR_SUCCESS );
 
+  if (Ret)
   fOK = TRUE;
 
- }  /* end __try */
-
- __finally {
- 
   if ( !fOK && buffer != NULL ) {
   
    HeapFree ( hHeap, 0, buffer );
    buffer = NULL;
   
   }  /* end if */
- 
- }  /* end __finally */
-
-#ifdef VAC
-leave: ;     // added for VisualAge
-#endif
 
  return buffer;
 
 }  /* end GetTokenInformationEx */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 /***/
 /******************************************************************************/
 /* Function : FreeTokenInformation                                          */
@@ -441,13 +423,6 @@ PSID NullSid ( void ) {
 /******************************************************************************/
 /***/
 
-
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
-
 PSECURITY_DESCRIPTOR GetFileSecurityEx ( LPCTSTR fileName, SECURITY_INFORMATION si ) {
 
  DWORD                errVal;
@@ -455,8 +430,8 @@ PSECURITY_DESCRIPTOR GetFileSecurityEx (
  DWORD                dwSizeNeeded = 0;
  PSECURITY_DESCRIPTOR retVal = NULL;
  BOOL                 fOK    = FALSE;
-
- __try {
+ bool                 Ret = true;
+ 
 
   do {
 
@@ -469,21 +444,24 @@ PSECURITY_DESCRIPTOR GetFileSecurityEx (
           )
    ) {
  
-    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) __leave;
+    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) {    
+      Ret = false;
+      break;
+    }
 
     if (   (  retVal = ( PSECURITY_DESCRIPTOR )HeapAlloc ( hHeap, 0, dwSizeNeeded )
            ) == NULL
-    ) __leave;
+    ) {    
+      Ret = false;
+      break;
+    }
 
    }  /* end if */
  
   } while ( errVal != ERROR_SUCCESS );
 
+  if (Ret)
   fOK = TRUE;
-
- }  /* end __try */
-
- __finally {
  
   if ( !fOK && retVal != NULL ) {
   
@@ -492,22 +470,10 @@ PSECURITY_DESCRIPTOR GetFileSecurityEx (
   
   }  /* end if */
  
- }  /* end __finally */
-
-#ifdef VAC
-leave: ;        // added for VisualAge
-#endif
-
  return retVal;
 
 }  /* end GetFileSecurityEx */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 /***/
 /******************************************************************************/
 /* Function : FreeFileSecurity                                              */
@@ -534,12 +500,6 @@ void FreeFileSecurity ( PSECURITY_DESCRI
 /******************************************************************************/
 /***/
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
-
 BOOL LookupAccountSidEx ( PSID pSID, LPTSTR* name, LPTSTR* domain ) {
 
  DWORD        errVal;
@@ -547,8 +507,7 @@ BOOL LookupAccountSidEx ( PSID pSID, LPT
  DWORD        dwSizeDomain = 0;
  BOOL         retVal       = FALSE;
  SID_NAME_USE eUse;
-
- __try {
+ bool Ret = true;
 
   do {   
 
@@ -559,21 +518,26 @@ BOOL LookupAccountSidEx ( PSID pSID, LPT
           )
    ) {
    
-    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) __leave;
+    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) 
+    {    
+      Ret = false;
+      break;
+    }
 
     if (   (  *name   = ( LPTSTR )HeapAlloc ( hHeap, 0, dwSizeName   )  ) == NULL ||
            (  *domain = ( LPTSTR )HeapAlloc ( hHeap, 0, dwSizeDomain )  ) == NULL
-    ) __leave;
+    ) 
+    {    
+      Ret = false;
+      break;
+    }
    
    }  /* end if */
 
   } while ( errVal != ERROR_SUCCESS );
 
+  if (Ret)
   retVal = TRUE;
- 
- }  /* end __try */
-
- __finally {
 
   if ( !retVal ) {
   
@@ -582,22 +546,10 @@ BOOL LookupAccountSidEx ( PSID pSID, LPT
   
   }  /* end if */
  
- }  /* end __finally */
-
-#ifdef VAC
-leave: ;        // added for VisualAge
-#endif
-
  return retVal;
 
 }  /* end LookupAccountSidEx */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 /***/
 /******************************************************************************/
 /* Function : FreeAccountNames                                              */
Index: oce/src/OSD/OSD_signal_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_signal_WNT.cxx
+++ oce/src/OSD/OSD_signal_WNT.cxx
@@ -512,12 +512,6 @@ static LONG __fastcall _osd_raise ( DWOR
 //==== _osd_debug 
 //============================================================================
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return 0
-#endif
-
 LONG _osd_debug ( void ) {
 
  LONG action ;
@@ -533,29 +527,33 @@ LONG _osd_debug ( void ) {
   SECURITY_ATTRIBUTES sa;
   PROCESS_INFORMATION pi;
   STARTUPINFO         si;
-
-  __try {
-  
+  bool Ret = true;
+    
    if (  RegOpenKey (
           HKEY_LOCAL_MACHINE,
           TEXT( "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug" ),
           &hKey
          ) != ERROR_SUCCESS
-   ) __leave;
+   ) Ret = false;
 
+   if (Ret)
+   {
    dwValueLen = sizeof ( keyValue );
   
    if (  RegQueryValueEx (
           hKey, TEXT( "Debugger" ), NULL, &dwKeyType, ( unsigned char* )keyValue, &dwValueLen
          ) != ERROR_SUCCESS
-   ) __leave;
+   ) Ret = false;
 
    sa.nLength              = sizeof ( SECURITY_ATTRIBUTES );
    sa.lpSecurityDescriptor = NULL;
    sa.bInheritHandle       = TRUE;
 
-   if (   (  hEvent = CreateEvent ( &sa, TRUE, FALSE, NULL )  ) == NULL   ) __leave;
+   if (   (  hEvent = CreateEvent ( &sa, TRUE, FALSE, NULL )  ) == NULL   ) Ret = false;
+   }
 
+   if (Ret)
+   {
    wsprintf (  cmdLine, keyValue, GetCurrentProcessId (), hEvent  );
 
    ZeroMemory (  &si, sizeof ( STARTUPINFO )  );
@@ -568,8 +566,11 @@ LONG _osd_debug ( void ) {
            NULL, cmdLine, NULL, NULL, TRUE, CREATE_DEFAULT_ERROR_MODE,
            NULL, NULL, &si, &pi
           )
-   ) __leave;
+   ) Ret = false;
+   }
 
+   if (Ret)
+   {
 //   cout << "_osd_debug -> WaitForSingleObject " << endl ;
    WaitForSingleObject ( hEvent, INFINITE );
 //   cout << "_osd_debug <- WaitForSingleObject -> CloseHandle " << endl ;
@@ -580,18 +581,13 @@ LONG _osd_debug ( void ) {
 //   cout << "_osd_debug fDbgLoaded  " << endl ;
    fDbgLoaded = TRUE;
   
-  }  // end __try
-
-  __finally {
-  
+  } 
 //   cout << "_osd_debug -> CloseHandle(hKey) " << endl ;
    if ( hKey   != INVALID_HANDLE_VALUE ) CloseHandle ( hKey   );
 //   cout << "_osd_debug -> CloseHandle(hEvent) " << endl ;
    if ( hEvent != INVALID_HANDLE_VALUE ) CloseHandle ( hEvent );
 //   cout << "_osd_debug end __finally " << endl ;
   
-  }  // end __finally
-
  }  /* end if */
 
  action = fDbgLoaded ? EXCEPTION_CONTINUE_EXECUTION : EXCEPTION_EXECUTE_HANDLER;
@@ -601,9 +597,4 @@ LONG _osd_debug ( void ) {
 
 }  // end _osd_debug
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 #endif // WNT
