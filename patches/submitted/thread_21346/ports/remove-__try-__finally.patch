From 7ae8d8089fe828a0e10419be79ffa56bbbee2eaf Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Tue, 26 Jul 2011 21:53:42 +0200
Subject: [PATCH] Removed all __finally __leave code, changed to a more
 portable control flow.

Just three functions in WNT_*.cxx were too complex to change, so goto's were used there.

The code needs re-formatting, didn't do it to not mess the resulting diff
---
 src/OSD/OSD_File.cxx           |  171 +++++++++++++++++++++-------------------
 src/OSD/OSD_FileNode.cxx       |   34 +++------
 src/OSD/OSD_WNT.cxx            |  114 ++++++++-------------------
 src/OSD/OSD_WNT_1.cxx          |   56 +++++--------
 src/OSD/OSD_signal_WNT.cxx     |   39 ++++------
 src/OpenGl/OpenGl_txgl.cxx     |   29 ++-----
 src/WNT/WNT_ImageProcessor.cxx |  157 +++++++++++++++----------------------
 7 files changed, 242 insertions(+), 358 deletions(-)

Index: oce/src/OSD/OSD_File.cxx
===================================================================
--- oce.orig/src/OSD/OSD_File.cxx
+++ oce/src/OSD/OSD_File.cxx
@@ -1765,11 +1765,6 @@ OSD_File OSD_File :: BuildTemporary () {
 
 //-------------------------------------------------finpri???980424
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return
-#endif
 
 void OSD_File :: SetLock ( const OSD_LockType Lock ) {
 
@@ -1780,12 +1775,13 @@ void OSD_File :: SetLock ( const OSD_Loc
  
  ZeroMemory (  &ovlp, sizeof ( OVERLAPPED )  );
 
- __try {
+ bool Ret = true;
+ if (Ret){
 
   if (  ( myLock = Lock ) == OSD_NoLock  ) {
 
    UnLock ();
-   __leave;
+   Ret = false;
 
   } else if ( myLock == OSD_ReadLock || myLock == OSD_ExclusiveLock ) {
 
@@ -1794,33 +1790,27 @@ void OSD_File :: SetLock ( const OSD_Loc
   } else
 
    dwFlags = 0;
+ }
 
+ if (Ret)
+ {
   if (  !LockFileEx (
           ( HANDLE )myFileChannel, dwFlags, 0, Size (), 0, &ovlp
          )
   ) {
 
    _osd_wnt_set_error ( myError, OSD_WFile );
-   __leave;
+   Ret = false;
 
   }  // end if
-
+ }
+ if (Ret)
+ {
   ImperativeFlag = Standard_True;
+ }
 
- }  // end __try
-
- __finally {}
-
-#ifdef VAC
-leave: ;         // added for VisualAge
-#endif
 }  // end OSD_File :: SetLock
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 void OSD_File :: UnLock () {
 
@@ -1909,11 +1899,6 @@ Standard_Boolean OSD_File :: IsOpen () c
 
 }  // end OSD_File :: IsOpen
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
 
 PSECURITY_DESCRIPTOR __fastcall _osd_wnt_protection_to_sd (
                                  const OSD_Protection& prot, BOOL fDir, char* fName
@@ -1944,34 +1929,46 @@ PSECURITY_DESCRIPTOR __fastcall _osd_wnt
  PSECURITY_DESCRIPTOR pfSD = NULL;
  BOOL                 fDummy;
  PFILE_ACE            pFileACE;
+ bool                 Ret = true;
 
- __try {
+ if (Ret) {
 
   j = fDir ? 1 : 0;
 
   if (  !OpenProcessToken (
           GetCurrentProcess (), TOKEN_QUERY, &hProcess
          )
-  ) __leave;
+  ) Ret = false;
+ }
 
+  if (Ret) {
   if (   (  pTkGroups = ( PTOKEN_GROUPS )GetTokenInformationEx (
                                           hProcess, TokenGroups
                                          )
          ) == NULL
-  ) __leave; 
+  ) Ret = false;
+  }
   
+  if (Ret)
+  {
   if (   (  pTkOwner = ( PTOKEN_OWNER )GetTokenInformationEx (
                                         hProcess, TokenOwner
                                        )
          ) == NULL
-  ) __leave;
+  ) Ret = false;
+  }
 
+  if (Ret)
+  {
   if (   (  pTkPrimaryGroup = ( PTOKEN_PRIMARY_GROUP )GetTokenInformationEx (
                                                        hProcess, TokenPrimaryGroup
                                                       )
          ) == NULL
-  ) __leave;
+  ) Ret = false;
+  }
 
+  if (Ret)
+  {
 
 retry:
   if ( fName == NULL )
@@ -2027,7 +2024,11 @@ retry:
                   ( ( GetLengthSid ( pSIDworld ) + ACE_HEADER_SIZE ) << j )
                );
 
-  if (   (  pACL = CreateAcl ( dwACLsize )  ) == NULL   ) __leave;
+  if (   (  pACL = CreateAcl ( dwACLsize )  ) == NULL   ) Ret = false;
+  }
+
+  if (Ret)
+  {
 
   if ( dwAccessAdmin != 0 )
 
@@ -2133,17 +2134,17 @@ retry:
    }  // end for
 
   }  // end if
+  } // if (Ret)
 
-  if (   (  retVal = AllocSD ()  ) == NULL   ) __leave;
+  if (Ret)
+  if (   (  retVal = AllocSD ()  ) == NULL   ) Ret = false;
 
-  if (  !SetSecurityDescriptorDacl ( retVal, TRUE, pACL, TRUE )  ) __leave;
+  if (Ret)
+  if (  !SetSecurityDescriptorDacl ( retVal, TRUE, pACL, TRUE )  ) Ret = false;
 
+  if (Ret)
   fOK = TRUE;
 
- }  // end __try
-
- __finally {
- 
   if ( !fOK ) {
 
    if ( retVal != NULL )
@@ -2164,21 +2165,10 @@ retry:
   if ( pTkPrimaryGroup != NULL ) FreeTokenInformation ( pTkPrimaryGroup );
   if ( pfSD            != NULL ) FreeFileSecurity     ( pfSD            );
  
- }  // end __finally
-
-#ifdef VAC
-leave: ;     // added for VisualAge
-#endif
-
  return retVal;
  
 }  // end _osd_wnt_protection_to_sd */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 static void __fastcall _test_raise ( Standard_Integer hFile, Standard_CString str ) {
 
@@ -2726,11 +2716,6 @@ Standard_Integer __fastcall _get_file_ty
 
 }  // end _get_file_type
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
 
 BOOL __fastcall _osd_wnt_sd_to_protection (
                  PSECURITY_DESCRIPTOR pSD, OSD_Protection& prot, BOOL fDir
@@ -2751,21 +2736,29 @@ BOOL __fastcall _osd_wnt_sd_to_protectio
  BOOL          retVal = FALSE;
  GET_PROT_FUNC _get_prot_func = fDir ? &_get_protection_dir : &_get_protection;
 
- __try {
+ BOOL          Ret = true;
+ if (Ret) {
 
-  if (  !GetSecurityDescriptorOwner ( pSD, &pSIDowner, &fDefaulted )  ) __leave;
+  if (  !GetSecurityDescriptorOwner ( pSD, &pSIDowner, &fDefaulted )  ) Ret = false;
+ }
 
+ if (Ret)
+ {
   if (  !GetSecurityDescriptorDacl ( pSD, &fPresent, &pACL, &fDefaulted ) ||
         !fPresent
-  ) __leave;
+  ) Ret = false;
+ }
 
+ if (Ret)
+ {
   if ( pSIDowner == NULL || pACL == NULL ) {
   
    SetLastError ( ERROR_NO_SECURITY_ON_OBJECT );
-   __leave;
-  
+   Ret = false;
   }  // end if
- 
+ }
+ if (Ret)
+ {
   pSIDadmin = AdminSid ();
   pSIDworld = WorldSid ();
 
@@ -2806,23 +2799,12 @@ BOOL __fastcall _osd_wnt_sd_to_protectio
 
   retVal = TRUE;
   
- }  // end __try
-
- __finally {}
+ }   
        
-#ifdef VAC
-leave: ;      // added for VisualAge
-#endif
-
  return retVal;
 
 }  // end _osd_wnt_sd_to_protection
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 static OSD_SingleProtection __fastcall _get_protection ( DWORD mask ) {
 
@@ -3040,11 +3022,6 @@ static OSD_SingleProtection __fastcall _
 
 }  // end _get_protection_dir
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return fOK
-#endif
 
 BOOL __fastcall _osd_print (const Standard_PCharacter pName, Standard_CString fName ) {
 
@@ -3052,41 +3029,49 @@ BOOL __fastcall _osd_print (const Standa
  HANDLE hPrinter;
  BYTE   jobInfo[ MAX_PATH + sizeof ( DWORD ) ];
  DWORD  dwNeeded, dwCode;
+ bool Ret = true;
 
  fOK = fJob = FALSE;
 
- __try {
+ if (Ret) {
  
   if (  !OpenPrinter ( Standard_PCharacter(pName), &hPrinter, NULL )  ) {
   
    hPrinter = NULL;
-   __leave;
+   Ret = false;
   
   }  // end if
+ }
 
+ if (Ret)
+ {
   if (   !AddJob (
            hPrinter, 1, jobInfo, MAX_PATH + sizeof ( DWORD ), &dwNeeded
           )
-  ) __leave;
+  ) Ret = false;
+ }
 
+ if (Ret)
+ { 
   fJob = TRUE;
 
   if (  !CopyFile (
           fName, (  ( ADDJOB_INFO_1* )jobInfo  ) -> Path, FALSE
          )
-  ) __leave;
+  )  Ret = false;
+ }
 
+ if (Ret)
+ {
   if (  !ScheduleJob (
           hPrinter, (  ( ADDJOB_INFO_1* )jobInfo  ) -> JobId
          )
-  ) __leave;
+  ) Ret = false;
+ }
   
+ if (Ret)
   fOK = TRUE;
- 
- }  // end __try
 
- __finally {
- 
   if ( !fOK ) {
   
    BYTE  info[ 1024 ];
@@ -3112,12 +3097,6 @@ BOOL __fastcall _osd_print (const Standa
   }  // end if
 
   if ( hPrinter != NULL ) ClosePrinter ( hPrinter );
- 
- }  // end __finally
-
-#ifdef VAC
-leave: ;       // added for VisualAge
-#endif
 
  if ( !fOK ) SetLastError ( dwCode );
 
@@ -3125,11 +3104,6 @@ leave: ;       // added for VisualAge
                 
 }  // end _osd_print
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 Standard_Boolean OSD_File::IsReadable()
 {
Index: oce/src/OSD/OSD_FileNode.cxx
===================================================================
--- oce.orig/src/OSD/OSD_FileNode.cxx
+++ oce/src/OSD/OSD_FileNode.cxx
@@ -988,11 +988,6 @@ void _osd_wnt_set_error ( OSD_Error& err
 
 }  // end _set_error
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
 
 static BOOL __fastcall _get_file_time (
                         Standard_CString fName, LPSYSTEMTIME lpSysTime, BOOL fAccess
@@ -1003,46 +998,34 @@ static BOOL __fastcall _get_file_time (
  FILETIME   ftLastWriteTime;
  LPFILETIME lpftPtr;
  HANDLE     hFile;
-
- __try {
-
+ bool       Ret = true;
+ 
   if (   (  hFile = CreateFile (
                      fName, 0, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL
                     )
          ) == INVALID_HANDLE_VALUE
-  ) __leave;
+  ) Ret = false;
 
-  if (  !GetFileTime ( hFile, &ftCreationTime, NULL, &ftLastWriteTime )  ) __leave;
+  if (Ret)
+  if (  !GetFileTime ( hFile, &ftCreationTime, NULL, &ftLastWriteTime )  ) Ret = false;
 
+  if (Ret)
+  {
   lpftPtr = fAccess ? &ftLastWriteTime : &ftCreationTime;
 
-  if (  !FileTimeToSystemTime ( lpftPtr, lpSysTime )  ) __leave;
+  if (  !FileTimeToSystemTime ( lpftPtr, lpSysTime )  ) Ret = false;
+  }
 
+  if(Ret)
   retVal = TRUE;
 
- }  // end __try
-
- __finally {
- 
   if ( hFile != INVALID_HANDLE_VALUE )
-
    CloseHandle ( hFile );
- 
- }  // end __finally
-
-#ifdef VAC
-leave: ;      // added for VisualAge
-#endif
 
  return retVal;
 
 }  // end _get_file_time
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 static void __fastcall _test_raise ( TCollection_AsciiString fName, Standard_CString str ) {
 
Index: oce/src/OSD/OSD_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_WNT.cxx
+++ oce/src/OSD/OSD_WNT.cxx
@@ -124,12 +124,6 @@ void FreeSD ( PSECURITY_DESCRIPTOR pSD )
 /******************************************************************************/
 /***/
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return buffer
-#endif
-
 LPVOID GetTokenInformationEx ( HANDLE hToken, TOKEN_INFORMATION_CLASS tic ) {
 
  DWORD  errVal;
@@ -137,8 +131,7 @@ LPVOID GetTokenInformationEx ( HANDLE hT
  DWORD  dwSizeNeeded = 0;
  LPVOID buffer       = NULL;
  BOOL   fOK          = FALSE;
-
- __try {
+ bool   Ret = true;
 
   do {
 
@@ -148,46 +141,35 @@ LPVOID GetTokenInformationEx ( HANDLE hT
    if (  !GetTokenInformation ( hToken, tic, buffer, dwSize, &dwSizeNeeded )  ) {
 
     if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   )
-        
-     __leave;
+    {    
+      Ret = false;
+      break;
+    }
 
     if (  ( buffer = HeapAlloc (  hHeap, 0, dwSizeNeeded  ) ) == NULL  )
-
-     __leave;
+    {    
+      Ret = false;
+      break;
+    }
 
    }  /* end if */
  
   } while ( errVal != ERROR_SUCCESS );
 
+  if (Ret)
   fOK = TRUE;
 
- }  /* end __try */
-
- __finally {
- 
   if ( !fOK && buffer != NULL ) {
   
    HeapFree ( hHeap, 0, buffer );
    buffer = NULL;
   
   }  /* end if */
- 
- }  /* end __finally */
-
-#ifdef VAC
-leave: ;     // added for VisualAge
-#endif
 
  return buffer;
 
 }  /* end GetTokenInformationEx */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 /***/
 /******************************************************************************/
 /* Function : FreeTokenInformation                                          */
@@ -446,13 +428,6 @@ PSID NullSid ( void ) {
 /******************************************************************************/
 /***/
 
-
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
-
 PSECURITY_DESCRIPTOR GetFileSecurityEx ( LPCTSTR fileName, SECURITY_INFORMATION si ) {
 
  DWORD                errVal;
@@ -460,8 +435,8 @@ PSECURITY_DESCRIPTOR GetFileSecurityEx (
  DWORD                dwSizeNeeded = 0;
  PSECURITY_DESCRIPTOR retVal = NULL;
  BOOL                 fOK    = FALSE;
-
- __try {
+ bool                 Ret = true;
+ 
 
   do {
 
@@ -474,21 +449,24 @@ PSECURITY_DESCRIPTOR GetFileSecurityEx (
           )
    ) {
  
-    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) __leave;
+    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) {    
+      Ret = false;
+      break;
+    }
 
     if (   (  retVal = ( PSECURITY_DESCRIPTOR )HeapAlloc ( hHeap, 0, dwSizeNeeded )
            ) == NULL
-    ) __leave;
+    ) {    
+      Ret = false;
+      break;
+    }
 
    }  /* end if */
  
   } while ( errVal != ERROR_SUCCESS );
 
+  if (Ret)
   fOK = TRUE;
-
- }  /* end __try */
-
- __finally {
  
   if ( !fOK && retVal != NULL ) {
   
@@ -497,22 +475,10 @@ PSECURITY_DESCRIPTOR GetFileSecurityEx (
   
   }  /* end if */
  
- }  /* end __finally */
-
-#ifdef VAC
-leave: ;        // added for VisualAge
-#endif
-
  return retVal;
 
 }  /* end GetFileSecurityEx */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 /***/
 /******************************************************************************/
 /* Function : FreeFileSecurity                                              */
@@ -539,12 +505,6 @@ void FreeFileSecurity ( PSECURITY_DESCRI
 /******************************************************************************/
 /***/
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return retVal
-#endif
-
 BOOL LookupAccountSidEx ( PSID pSID, LPTSTR* name, LPTSTR* domain ) {
 
  DWORD        errVal;
@@ -552,8 +512,7 @@ BOOL LookupAccountSidEx ( PSID pSID, LPT
  DWORD        dwSizeDomain = 0;
  BOOL         retVal       = FALSE;
  SID_NAME_USE eUse;
-
- __try {
+ bool Ret = true;
 
   do {   
 
@@ -564,21 +523,26 @@ BOOL LookupAccountSidEx ( PSID pSID, LPT
           )
    ) {
    
-    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) __leave;
+    if (   (  errVal = GetLastError ()  ) != ERROR_INSUFFICIENT_BUFFER   ) 
+    {    
+      Ret = false;
+      break;
+    }
 
     if (   (  *name   = ( LPTSTR )HeapAlloc ( hHeap, 0, dwSizeName   )  ) == NULL ||
            (  *domain = ( LPTSTR )HeapAlloc ( hHeap, 0, dwSizeDomain )  ) == NULL
-    ) __leave;
+    ) 
+    {    
+      Ret = false;
+      break;
+    }
    
    }  /* end if */
 
   } while ( errVal != ERROR_SUCCESS );
 
+  if (Ret)
   retVal = TRUE;
- 
- }  /* end __try */
-
- __finally {
 
   if ( !retVal ) {
   
@@ -587,22 +551,10 @@ BOOL LookupAccountSidEx ( PSID pSID, LPT
   
   }  /* end if */
  
- }  /* end __finally */
-
-#ifdef VAC
-leave: ;        // added for VisualAge
-#endif
-
  return retVal;
 
 }  /* end LookupAccountSidEx */
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 /***/
 /******************************************************************************/
 /* Function : FreeAccountNames                                              */
Index: oce/src/OSD/OSD_WNT_1.cxx
===================================================================
--- oce.orig/src/OSD/OSD_WNT_1.cxx
+++ oce/src/OSD/OSD_WNT_1.cxx
@@ -287,47 +287,35 @@ short MapY (LONG aY) {
   return (short)(aY*8) / HIWORD (baseUnits);
 }
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return res
-#endif
-
 LONG GetTextParams ( HDC hdc, LPCTSTR lpText ) {
   LONG res = 0;
   SIZE size;
   _TCHAR* dummy;
-  __try {
+  bool Ret = true;
+
     dummy = _tcsdup (lpText);
-    if ( !dummy ) __leave;
+   
+    if ( !dummy ) Ret = false;
+
+    if (Ret)
+    {
     short txtW = 0, txtH = 0;
     _TCHAR* tok = _tcstok ( dummy, TEXT( "\n" ) );
+
     while ( tok ) {
-      if ( !GetTextExtentPoint32 (hdc, tok, _tcslen(tok), (LPSIZE)&size) ) __leave;
+      if ( !GetTextExtentPoint32 (hdc, tok, _tcslen(tok), (LPSIZE)&size) ) { Ret = false; break; }
       txtH += (short)size.cy;
       if ( txtW < size.cx )
         txtW = (short)size.cx;
       tok = _tcstok ( NULL, TEXT( "\n" ) );
     }
+    if (Ret)
     res = MAKELONG (MapX(txtW), MapY(txtH));
   }
-
-  __finally {
     free (dummy);
-  }
-
-#ifdef VAC
-leave: ;       // added for VisualAge
-#endif
-
   return res;
 }
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
 
 /////////////////ON_COMMAND/////////////////////////////////////
 void MsgBox_OnCommand (HWND hwnd, _TINT id, HWND hCtl, UINT codeNotify) {
@@ -363,11 +351,6 @@ BOOL CALLBACK MsgBoxProc (HWND hdlg,
 
 /////////////////////////////////////////////////////////////////
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return -1
-#endif
 
 _TINT MsgBox ( HWND hParent,
                LPTSTR  lpText,
@@ -388,16 +371,17 @@ _TINT MsgBox ( HWND hParent,
   short           butCount  = 0, butMaxWidth = 0, butMaxHeight = 0;
   short           butSpace = 8, butOffset = 0;
 
-  __try {
+  {
     /* Get dialog base units & map it to dialog units*/
     hDisp = CreateDC ( TEXT( "DISPLAY" ), NULL, NULL, NULL );
-    if ( !hDisp ) __leave;
+
+    if ( !hDisp ) goto leave;
     scrW = GetDeviceCaps ( hDisp, HORZRES );
     scrH = GetDeviceCaps ( hDisp, VERTRES );
     scrW = MapX (scrW);
     scrH = MapY (scrH);
     LONG txtParam = GetTextParams ( hDisp, lpText );
-    if ( !txtParam ) __leave;
+    if ( !txtParam ) goto leave;
  
     // Calculate needed size of buffer
     bufSize = 14*sizeof(WORD)  + _tcslen(lpCaption)*CHR_SIZE;
@@ -417,7 +401,7 @@ _TINT MsgBox ( HWND hParent,
     }
 
     pDlgTemplate = p = (PWORD) LocalAlloc (LPTR, bufSize);
-    if ( !pDlgTemplate )  __leave;
+    if ( !pDlgTemplate ) goto leave;
 
     lStyle = DS_MODALFRAME | DS_SYSMODAL | WS_POPUP | WS_CAPTION;
     *p++ = LOWORD (lStyle);
@@ -536,9 +520,13 @@ _TINT MsgBox ( HWND hParent,
         *pItemsCount += 1;
       }
     } // Childs
-  }  // __try
+	
+	
+  }
+  leave:
   /*----------------------------------------------------------------------*/
-  __finally {
+  
+  {
     int res = -1;
     if ( pDlgTemplate )
       res = DialogBoxIndirect (
@@ -553,16 +541,6 @@ _TINT MsgBox ( HWND hParent,
     return ( res );
   }
 
-#ifdef VAC
-leave: ;         // added for VisualAge
-#endif
-
 }
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 #endif
Index: oce/src/OSD/OSD_signal_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_signal_WNT.cxx
+++ oce/src/OSD/OSD_signal_WNT.cxx
@@ -582,12 +582,6 @@ static LONG __fastcall _osd_raise ( DWOR
 //==== _osd_debug 
 //============================================================================
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#define __try
-#define __finally
-#define __leave return 0
-#endif
-
 LONG _osd_debug ( void ) {
 
  LONG action ;
@@ -603,29 +597,33 @@ LONG _osd_debug ( void ) {
   SECURITY_ATTRIBUTES sa;
   PROCESS_INFORMATION pi;
   STARTUPINFO         si;
-
-  __try {
-  
+  bool Ret = true;
+    
    if (  RegOpenKey (
           HKEY_LOCAL_MACHINE,
           TEXT( "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug" ),
           &hKey
          ) != ERROR_SUCCESS
-   ) __leave;
+   ) Ret = false;
 
+   if (Ret)
+   {
    dwValueLen = sizeof ( keyValue );
   
    if (  RegQueryValueEx (
           hKey, TEXT( "Debugger" ), NULL, &dwKeyType, ( unsigned char* )keyValue, &dwValueLen
          ) != ERROR_SUCCESS
-   ) __leave;
+   ) Ret = false;
 
    sa.nLength              = sizeof ( SECURITY_ATTRIBUTES );
    sa.lpSecurityDescriptor = NULL;
    sa.bInheritHandle       = TRUE;
 
-   if (   (  hEvent = CreateEvent ( &sa, TRUE, FALSE, NULL )  ) == NULL   ) __leave;
+   if (   (  hEvent = CreateEvent ( &sa, TRUE, FALSE, NULL )  ) == NULL   ) Ret = false;
+   }
 
+   if (Ret)
+   {
    wsprintf (  cmdLine, keyValue, GetCurrentProcessId (), hEvent  );
 
    ZeroMemory (  &si, sizeof ( STARTUPINFO )  );
@@ -638,8 +636,11 @@ LONG _osd_debug ( void ) {
            NULL, cmdLine, NULL, NULL, TRUE, CREATE_DEFAULT_ERROR_MODE,
            NULL, NULL, &si, &pi
           )
-   ) __leave;
+   ) Ret = false;
+   }
 
+   if (Ret)
+   {
 //   cout << "_osd_debug -> WaitForSingleObject " << endl ;
    WaitForSingleObject ( hEvent, INFINITE );
 //   cout << "_osd_debug <- WaitForSingleObject -> CloseHandle " << endl ;
@@ -650,18 +651,13 @@ LONG _osd_debug ( void ) {
 //   cout << "_osd_debug fDbgLoaded  " << endl ;
    fDbgLoaded = TRUE;
   
-  }  // end __try
-
-  __finally {
-  
+  } 
 //   cout << "_osd_debug -> CloseHandle(hKey) " << endl ;
    if ( hKey   != INVALID_HANDLE_VALUE ) CloseHandle ( hKey   );
 //   cout << "_osd_debug -> CloseHandle(hEvent) " << endl ;
    if ( hEvent != INVALID_HANDLE_VALUE ) CloseHandle ( hEvent );
 //   cout << "_osd_debug end __finally " << endl ;
   
-  }  // end __finally
-
  }  /* end if */
 
  action = fDbgLoaded ? EXCEPTION_CONTINUE_EXECUTION : EXCEPTION_EXECUTE_HANDLER;
@@ -671,12 +667,6 @@ LONG _osd_debug ( void ) {
 
 }  // end _osd_debug
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
-#undef __try
-#undef __finally
-#undef __leave
-#endif
-
 //============================================================================
 //==== _debug_break 
 //============================================================================
Index: oce/src/WNT/WNT_ImageProcessor.cxx
===================================================================
--- oce.orig/src/WNT/WNT_ImageProcessor.cxx
+++ oce/src/WNT/WNT_ImageProcessor.cxx
@@ -67,6 +67,7 @@
 #endif  /* _DEBUG */
 #define WINNT35X() (WNT_osVer.dwPlatformId   == VER_PLATFORM_WIN32_NT && \
                     WNT_osVer.dwMajorVersion == 3 )
+
 //***//
 typedef struct {
 
@@ -126,6 +127,7 @@ HBITMAP LoadImageFromFile (
  HANDLE   hFile, hFileMap = NULL;
  HBITMAP  retVal = NULL;
  DWORD    dwProtect, dwAccess;
+ bool Ret = true;
 
  if ( WNT_osVer.dwPlatformId == VER_PLATFORM_WIN32_WINDOWS ) {
 
@@ -161,7 +163,7 @@ HBITMAP LoadImageFromFile (
  _makepath ( ifl, drv, dir, fnm, ext );
 #endif
 
- __try {
+ if (Ret) {
 
   hFile = CreateFile (
 #ifdef IMP080200
@@ -172,22 +174,32 @@ HBITMAP LoadImageFromFile (
            OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL
 		  );
 
-  if ( hFile == INVALID_HANDLE_VALUE ) __leave;
-
+  if ( hFile == INVALID_HANDLE_VALUE ) Ret = false;
+ }
+ if (Ret)
+ {
   dwFileSize = GetFileSize ( hFile, NULL );
 
-  if ( dwFileSize == 0xFFFFFFFF ) __leave;
+  if ( dwFileSize == 0xFFFFFFFF ) Ret = false;
+ }
+ if (Ret)
+ {
 
   hFileMap = CreateFileMapping (
               hFile, NULL, dwProtect, 0, dwFileSize, NULL
              );
 
-  if ( hFileMap == NULL ) __leave;
+  if ( hFileMap == NULL ) Ret = false;
+ }
+ if (Ret)
+ {
 
   lpvFile = MapViewOfFile ( hFileMap, FILE_MAP_COPY, 0, 0, 0 );
 
-  if ( lpvFile == NULL ) __leave;
-
+  if ( lpvFile == NULL ) Ret = false;
+ }
+ if (Ret)
+ {
   if (   memcmp (  ( const void* )lpvFile, ( const void* )"BM", 2  ) == 0   )
 
    retVal = loadBMP ( gDev );
@@ -201,10 +213,7 @@ HBITMAP LoadImageFromFile (
   else  // assume XWD file
 
    retVal = loadXWD ( gDev );
-
- }  // end __try
-
- __finally {
+ }
 
   if ( lpvFile  != NULL ) {
 
@@ -216,8 +225,6 @@ HBITMAP LoadImageFromFile (
   if ( hFileMap != NULL                 ) CloseHandle ( hFileMap );
   if ( hFile    != INVALID_HANDLE_VALUE ) CloseHandle ( hFile    );
 
- }  // end __finally
-
  if ( hDevCtx == NULL ) ReleaseDC ( NULL, hDC );
 
  return retVal;
@@ -233,8 +240,9 @@ int __WNT_API SaveWindowToFile (
  HDC      hDCmem;
  HBITMAP  hBmp = NULL, hOldBmp;
  HPALETTE hOldPal;
+ bool Ret = true;
 
- __try {
+ if (Ret) {
 
   hDC = GetDC ( hWnd );
 #ifdef TEST
@@ -252,8 +260,10 @@ int __WNT_API SaveWindowToFile (
 
   hBmp = CreateCompatibleBitmap ( hDC, w, h );
 
-  if ( hBmp == NULL ) __leave;
-
+  if ( hBmp == NULL ) Ret = false;
+ }
+ if (Ret)
+ {
   hOldBmp = SelectBitmap ( hDCmem, hBmp );
 
    BitBlt ( hDCmem, 0, 0, w, h, hDC, x, y, SRCCOPY );
@@ -261,10 +271,7 @@ int __WNT_API SaveWindowToFile (
   SelectBitmap ( hDCmem, hOldBmp );
 
   retVal = SaveBitmapToFile ( gDev, hBmp, fName, 0, 0, w, h );
-
- }  // end __try
-
- __finally {
+ }  
 
 #ifdef TEST
   fWindow = FALSE;
@@ -279,8 +286,6 @@ int __WNT_API SaveWindowToFile (
   DeleteDC ( hDCmem );
   ReleaseDC ( hWnd, hDC );
 
- }  // end __finally
-
  return retVal;
 
 }  // end SaveWindowToFile
@@ -354,8 +359,8 @@ int SaveBitmapToFile (Handle(WNT_Graphic
   HBITMAP  hNewBmp = NULL;
   HPALETTE hOldPal;
   BOOL     newBmp  = FALSE, newDC = FALSE;
-
-  __try {
+  bool Ret = true;
+  if (Ret) {
 
   #ifdef TEST
     if (!fWindow)
@@ -394,20 +399,22 @@ int SaveBitmapToFile (Handle(WNT_Graphic
       {
         SelectPalette (hDC, hOldPal, FALSE);
       }
-      if (hNewBmp == NULL) __leave;
+      if (hNewBmp == NULL) Ret = false;
     }
     else
     {
       hNewBmp = hBmp;
     }
-
+  }
+  if (Ret)
+  {
     retVal = DumpBitmapToFile (gDev, NULL,
                                hNewBmp, fName);
-  }  // end __try
-  __finally {
+  } 
+ 
     if (hNewBmp != NULL && newBmp) DeleteObject (hNewBmp);
     if (newDC) ReleaseDC (NULL, hDC);
-  }  // end __finally
+
   return retVal;
 }  // end SaveBitmapToFile
 //***//
@@ -442,7 +449,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
  LPVOID           imageData;
  DWORD            dataSize;
 
- __try {
+ {
 
   xwdHdr = ( XWDFileHeader* )lpvFile;
 
@@ -451,7 +458,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
   if ( xwdHdr -> file_version  != XWD_FILE_VERSION ||
        xwdHdr -> pixmap_format != ZPixmap          ||
        xwdHdr -> header_size   <  sizeof ( XWDFileHeader )
-  ) __leave;
+  ) goto leave;
 
   xColor = ( XColor* )(  ( char* )lpvFile + xwdHdr -> header_size  );
 
@@ -487,7 +494,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 
 	else
 
-	 __leave;
+	 goto leave;
 
     break;
 
@@ -512,7 +519,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 
 	 else
 
-	  __leave;
+	  goto leave;
 
     break;
 
@@ -520,7 +527,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 
   pBmi = ( PBITMAPINFO )MALLOC( nBytes );
 
-  if ( pBmi == NULL ) __leave;
+  if ( pBmi == NULL ) goto leave;
 
   pBmi -> bmiHeader.biSize          = sizeof ( BITMAPINFOHEADER );
   pBmi -> bmiHeader.biWidth	        = xwdHdr -> pixmap_width;
@@ -559,7 +566,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 
 	  pbInit = ( PBYTE )MALLOC( bitmapSize );
 
-	  if ( pbInit == NULL ) __leave;
+	  if ( pbInit == NULL ) goto leave;
 
 	  newMem = TRUE;
 
@@ -579,7 +586,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 
      ptrDIB = ( PBYTE )MALLOC( dataSize );
 
-	 if ( ptrDIB == NULL ) __leave;
+	 if ( ptrDIB == NULL ) goto leave;
 
 	 CopyMemory (  ( PVOID )ptrDIB, ( PVOID )pbInit, dataSize  );
 	 FillMemory (  ( PVOID )colors, MAXCOLOR * sizeof ( WORD ), 0xFFFF );
@@ -642,7 +649,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 
 	  pbInit = ( PBYTE )MALLOC( bitmapSize );
 
-	  if ( pbInit == NULL ) __leave;
+	  if ( pbInit == NULL ) goto leave;
 
 	  newMem = TRUE;
 
@@ -708,7 +715,7 @@ AllocColors_16:
 
 	  pbInit = ( PBYTE )MALLOC( bitmapSize );
 
-	  if ( pbInit == NULL ) __leave;
+	  if ( pbInit == NULL ) goto leave;
 
 	  newMem = TRUE;
 
@@ -761,7 +768,7 @@ AllocColors_16:
 
 	   default:
 
-	    __leave;
+	    goto leave;
 
       }  // end switch ( xwdHdr -> bits_per_pixel . . . )
 
@@ -771,7 +778,7 @@ AllocColors_16:
 
      case 24:
 
-      __leave;
+      goto leave;
 
      case 32:
 
@@ -845,15 +852,13 @@ AllocColors_16:
 
    SelectPalette ( hDC, hOldPal, FALSE );
 
- }  // end try
+leave: ;
 
- __finally {
+ }  // end try
 
   if ( pbInit != NULL && newMem ) FREE( pbInit );
   if ( pBmi   != NULL           ) FREE( pBmi   );
 
- }  // end finally
-
  return retVal;
 
 }  // end readXWD
@@ -924,8 +929,7 @@ static HBITMAP loadBMP (  Handle( WNT_Gr
  UINT              nColors;
  DWORD             dwWidth, dwHeight;
  BOOL              os2Flag;
-
- __try {
+ bool Ret = true;
 
   pBmfh = ( PBITMAPFILEHEADER )lpvFile;
   pBmih = ( PBITMAPINFOHEADER )(  ( PBYTE )lpvFile + sizeof ( BITMAPFILEHEADER )  );
@@ -942,8 +946,10 @@ static HBITMAP loadBMP (  Handle( WNT_Gr
 						         sizeof ( RGBQUAD ) * nColors
 					            );
 
-   if ( pBmih == NULL ) __leave;
+   if ( pBmih == NULL ) Ret = false;
 
+  if (Ret)
+  {
    pBmih -> biSize        = sizeof ( BITMAPINFOHEADER );
    pBmih -> biWidth       = pBmch -> bcWidth;
    pBmih -> biHeight      = pBmch -> bcHeight;
@@ -959,12 +965,12 @@ static HBITMAP loadBMP (  Handle( WNT_Gr
    	 (  ( PBITMAPCOREINFO )pBmch  ) -> bmciColors[ i ].rgbtGreen;
    	(  ( PBITMAPINFO )pBmih  ) -> bmiColors[ i ].rgbBlue =
    	 (  ( PBITMAPCOREINFO )pBmch  ) -> bmciColors[ i ].rgbtBlue;
-
    }  // end for
 
    pRGB     = (  ( PBITMAPINFO )pBmih  ) -> bmiColors;
    os2Flag  = TRUE;
 
+  } // if Ret
   } else {  // Windows DIB
 
    pRGB     = ( LPRGBQUAD )(  ( PBYTE )pBmih + pBmih -> biSize  );
@@ -994,14 +1000,8 @@ static HBITMAP loadBMP (  Handle( WNT_Gr
 
    SelectPalette ( hDC, hOldPal, FALSE );
 
- }  // end __try
-
- __finally {
-
   if ( os2Flag && pBmih ) FREE( pBmih );
 
- }  // end __finally
-
   return retVal;
 
 }  // end  loadBMP
@@ -1042,7 +1042,7 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
   Suffix = Prefix = OutCode = NULL;
 #endif
 
- __try {
+ {
 
 #ifdef BUC60837
   OutCode = ( PUINT )MALLOC(  1026 * sizeof ( UINT )  );
@@ -1054,7 +1054,7 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
   Prefix  = ( PUINT )MALLOC(  4096 * sizeof ( UINT )  );
   Suffix  = ( PUINT )MALLOC(  4096 * sizeof ( UINT )  );
 
-  if ( OutCode == NULL || Prefix == NULL || Suffix == NULL ) __leave;
+  if ( OutCode == NULL || Prefix == NULL || Suffix == NULL ) goto leave;
 
   byte = NEXT_BYTE;
 
@@ -1064,13 +1064,13 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
   BitMask     = nColors - 1;
   ++ptr;
 
-  if ( NEXT_BYTE ) __leave;
+  if ( NEXT_BYTE ) goto leave;
 
   pBmi = ( PBITMAPINFO )MALLOC(
                          sizeof ( BITMAPINFO ) + sizeof ( RGBQUAD ) * 256
 					    );
 
-  if ( pBmi == NULL ) __leave;
+  if ( pBmi == NULL ) goto leave;
 
   if ( hasColormap ) {
 
@@ -1094,11 +1094,11 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
 
   }  // end while
 
-  if ( NEXT_BYTE != IMAGESEP ) __leave;
+  if ( NEXT_BYTE != IMAGESEP ) goto leave;
 
   rasterPtr = ( PBYTE )MALLOC( dwFileSize );
 
-  if ( rasterPtr == NULL ) __leave;
+  if ( rasterPtr == NULL ) goto leave;
 
   ptr += 4;
 
@@ -1133,7 +1133,7 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
 
    }  // end while
 
-   if (  ( UINT )( ptr1 - rasterPtr ) > dwFileSize  ) __leave;  // corrupt file - unblock
+   if (  ( UINT )( ptr1 - rasterPtr ) > dwFileSize  ) goto leave;  // corrupt file - unblock
 
   } while ( byte1 );
 
@@ -1142,7 +1142,7 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
 
   pData = ( PBYTE )MALLOC( dataSize );
 
-  if ( pData == NULL ) __leave;
+  if ( pData == NULL ) goto leave;
 
   x = y = pass = OutCount = BitOffset = ByteOffset = 0;
 
@@ -1197,7 +1197,7 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
 #ifdef BUC60837
 					break;
 #else
-					__leave;
+					goto leave;
 #endif
 	 OutCode[ OutCount++ ] = Suffix[ CurCode ];
 	 CurCode               = Prefix[ CurCode ];
@@ -1269,9 +1269,12 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
 
    SelectPalette ( hDC, hOldPal, FALSE );
 
- }  // end __try
 
- __finally {
+  leave: ;
+
+
+ } 
+
 
   if ( pData     != NULL ) FREE( pData     );
   if ( rasterPtr != NULL ) FREE( rasterPtr );
@@ -1280,7 +1283,6 @@ static HBITMAP loadGIF (  Handle( WNT_Gr
   if ( Prefix    != NULL ) FREE( Prefix    );
   if ( OutCode   != NULL ) FREE( OutCode   );
 
- }  // end __finally
 
  return retVal;
 
