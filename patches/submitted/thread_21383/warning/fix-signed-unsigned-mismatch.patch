From: QbProg <tholag@gmail.com>
Date: Thu, 12 May 2011 20:32:51 +0200
Subject: [PATCH 41/82] [warning-fix][signed-unsigned-mismatch]

Fixes warning like 'expression' : signed/unsigned mismatch
---
 .../TColStd_MapIteratorOfPackedMapOfInteger.cxx    |    6 +++---
 src/TColStd/TColStd_PackedMapOfInteger.cxx         |   10 +++++-----
 2 files changed, 8 insertions(+), 8 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Sat, 11 Jun 2011 14:48:54 +0200
Subject: [PATCH 42/82] [warning-fix][signed-unsigned-mismatch]

Fixed comparison between signed and unsigned int warnings

(QbProg: changed some modifications to be done in 0.5)
---
 src/BinMNaming/BinMNaming_NamingDriver.cxx |    6 +++---
 src/Image/Image_PixMap.cxx                 |    4 ++--
 src/OpenGl/OpenGl_TextRender.cxx           |    2 +-
 src/OpenGl/OpenGl_TextureBox.cxx           |    6 ++++--
 src/Visual3d/Visual3d_View.cxx             |    4 ++--
 5 files changed, 12 insertions(+), 10 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Sun, 19 Jun 2011 18:21:11 +0200
Subject: [PATCH 43/82] [warning-fix][signed-unsigned-mismatch] Fixes warning
 like 'expression' : signed/unsigned mismatch

---
 src/OpenGl/OpenGl_togl_markercontextgroup.cxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From d11d09f6c15f4293d6c0d6edad48412e90c031f3 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Tue, 19 Jul 2011 15:49:16 +0200
Subject: [PATCH 07/26] [warning-fix][signed-unsigned-mismatch]

Fix signed/unsigned comparison issues.
---
 src/NIS/NIS_Triangulated.cxx |    4 ++--
 src/OSD/OSD_MAllocHook.cxx   |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

Index: oce/src/BinMNaming/BinMNaming_NamingDriver.cxx
===================================================================
--- oce.orig/src/BinMNaming/BinMNaming_NamingDriver.cxx
+++ oce/src/BinMNaming/BinMNaming_NamingDriver.cxx
@@ -179,7 +179,7 @@ Standard_Boolean BinMNaming_NamingDriver
           Standard_Integer i;
           // read array
           for(i=1; i<=aNbArgs;i++) {
-            if(!aNewF && i > OBSOLETE_NUM) break;//interrupt reading as old format can have only 4 items
+            if(!aNewF && i > (int)OBSOLETE_NUM) break;//interrupt reading as old format can have only 4 items
             ok = theSource >> anIndx;
             if (!ok)
               break;
@@ -194,8 +194,8 @@ Standard_Boolean BinMNaming_NamingDriver
             }
           }
           //patch to release the rest of items	
-          if(!aNewF && aNbArgs < OBSOLETE_NUM) {    
-            for(i = aNbArgs+1;i <= OBSOLETE_NUM;i++)
+          if(!aNewF && aNbArgs < (int)OBSOLETE_NUM) {    
+            for(i = aNbArgs+1;i <= (int)OBSOLETE_NUM;i++)
               theSource >> anIndx;
           }
         }
Index: oce/src/NIS/NIS_Triangulated.cxx
===================================================================
--- oce.orig/src/NIS/NIS_Triangulated.cxx
+++ oce/src/NIS/NIS_Triangulated.cxx
@@ -773,7 +773,7 @@ Standard_Boolean NIS_Triangulated::Inter
 
   if ((myType & Type_Triangulation) && myIsDrawPolygons == Standard_False) {
     unsigned int iNode = 0;
-    for (; iNode < myNNodes * myNodeCoord; iNode += myNodeCoord)
+    for (; (int)iNode < myNNodes * myNodeCoord; iNode += myNodeCoord)
     {
       gp_XYZ aPnt (static_cast<Standard_Real>(mypNodes[iNode+0]),
                    static_cast<Standard_Real>(mypNodes[iNode+1]), 0.);
@@ -1074,7 +1074,7 @@ Standard_Boolean NIS_Triangulated::Inter
 
   if ((myType & Type_Triangulation) && myIsDrawPolygons == Standard_False) {
     unsigned int iNode = 0;
-    for (; iNode < myNNodes * myNodeCoord; iNode += myNodeCoord)
+    for (; (int)iNode < myNNodes * myNodeCoord; iNode += myNodeCoord)
     {
       gp_XYZ aPnt (static_cast<Standard_Real>(mypNodes[iNode+0]),
                    static_cast<Standard_Real>(mypNodes[iNode+1]), 0.);
Index: oce/src/OSD/OSD_MAllocHook.cxx
===================================================================
--- oce.orig/src/OSD/OSD_MAllocHook.cxx
+++ oce/src/OSD/OSD_MAllocHook.cxx
@@ -498,7 +498,7 @@ void OSD_MAllocHook::CollectBySize::Rese
     myArray = new Numbers[MAX_ALLOC_SIZE];
   else
   {
-    for (int i = 0; i < MAX_ALLOC_SIZE; i++)
+    for (int i = 0; i < (int)MAX_ALLOC_SIZE; i++)
       myArray[i] = Numbers();
   }
   myTotalLeftSize = 0;
@@ -529,7 +529,7 @@ Standard_Boolean OSD_MAllocHook::Collect
            << std::setw(20) << "PeakSize " << std::endl;
 
   Standard_Size aTotAlloc = 0;
-  for (int i = 0; i < MAX_ALLOC_SIZE; i++)
+  for (int i = 0; i < (int)MAX_ALLOC_SIZE; i++)
   {
     if (myArray[i].nbAlloc > 0 || myArray[i].nbFree > 0)
     {
