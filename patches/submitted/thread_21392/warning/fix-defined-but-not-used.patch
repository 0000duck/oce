From: tpaviot <tpaviot@gmail.com>
Date: Mon, 23 May 2011 16:45:02 +0200
Subject: [PATCH 67/82] [warning-fix][defined-but-not-used]

Removed unused functions raising defined but not used warning
---
 src/AIS2D/AIS2D_LocalContext.cxx                   |    5 -
 src/BRepFeat/BRepFeat_MakeDPrism.cxx               |   59 -----
 src/BRepFeat/BRepFeat_MakePipe.cxx                 |   61 ------
 src/BRepFeat/BRepFeat_MakePrism.cxx                |   59 -----
 src/BRepFeat/BRepFeat_MakeRevol.cxx                |   60 ------
 src/BRepFill/BRepFill_CompatibleWires.cxx          |   49 -----
 src/BRepFill/BRepFill_OffsetWire.cxx               |   34 ---
 src/BRepFill/BRepFill_TrimShellCorner.cxx          |  225 --------------------
 src/BRepGProp/BRepGProp_Face.cxx                   |  123 -----------
 src/DDF/DDF_BrowserCommands.cxx                    |  106 ---------
 src/Extrema/Extrema_GenExtPS.cxx                   |   45 ----
 src/GeomFill/GeomFill_CorrectedFrenet.cxx          |    3 -
 src/HLRBRep/HLRBRep_EdgeIList.cxx                  |   20 --
 src/IntPatch/IntPatch_ImpPrmIntersection.cxx       |   18 --
 src/MeshTest/MeshTest.cxx                          |   31 ---
 src/MeshTest/MeshTest_DrawableMesh.cxx             |   26 ---
 src/OpenGl/OpenGl_LightBox.cxx                     |    1 -
 src/OpenGl/OpenGl_transform_persistence.cxx        |    7 -
 src/STEPControl/STEPControl_ActorRead.cxx          |   55 -----
 src/STEPControl/STEPControl_ActorWrite.cxx         |   55 -----
 src/ShapeFix/ShapeFix_Face.cxx                     |   20 --
 src/ShapeFix/ShapeFix_Solid.cxx                    |   23 --
 src/TNaming/TNaming_Name.cxx                       |   86 --------
 src/Viewer2dTest/Viewer2dTest_DisplayCommands.cxx  |   36 ---
 src/Visual3d/Visual3d_ViewMapping.cxx              |    1 -
 .../XmlLDrivers_DocumentRetrievalDriver.cxx        |    1 -
 26 files changed, 0 insertions(+), 1209 deletions(-)

commit 6b973055c800da672a0b59f54d64087cfd6a4407

From 0d5c944c0f39203df2ec5118108494d383597330 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Sat, 19 Nov 2011 15:04:48 +0100
Subject: [PATCH] Restored DumpWhaIs required for STEP Import/Export in debug
 mode

---
 src/STEPControl/STEPControl_ActorRead.cxx  |   54 +++++++++++++++++++++++++++
 src/STEPControl/STEPControl_ActorWrite.cxx |   55 ++++++++++++++++++++++++++++
 2 files changed, 109 insertions(+), 0 deletions(-)

Index: oce/src/BRepFeat/BRepFeat_MakeDPrism.cxx
===================================================================
--- oce.orig/src/BRepFeat/BRepFeat_MakeDPrism.cxx
+++ oce/src/BRepFeat/BRepFeat_MakeDPrism.cxx
@@ -95,12 +95,6 @@ static void MajMap(const TopoDS_Shape&,
 		   TopoDS_Shape&); // myLShape
 
 
-static void SetGluedFaces(const TopoDS_Face& theSkface,
-			  const TopoDS_Shape& theSbase,
-			  const TopoDS_Shape& thePbase,
-			  const TopTools_DataMapOfShapeListOfShape& theSlmap,
-                          LocOpe_DPrism&,
-			  TopTools_DataMapOfShapeShape&);
 
 #ifdef DEB
 static void VerifGluedFaces(const TopoDS_Face& theSkface,
Index: oce/src/BRepFeat/BRepFeat_MakePipe.cxx
===================================================================
--- oce.orig/src/BRepFeat/BRepFeat_MakePipe.cxx
+++ oce/src/BRepFeat/BRepFeat_MakePipe.cxx
@@ -70,13 +70,6 @@ static void MajMap(const TopoDS_Shape&,
 		   TopoDS_Shape&); // myLShape
 
 
-static void SetGluedFaces(const TopoDS_Face& theSkface,
-			  const TopoDS_Shape& theSbase,
-			  const TopoDS_Shape& thePbase,
-			  const TopTools_DataMapOfShapeListOfShape& 
-			        theSlmap,
-                          LocOpe_Pipe&,
-			  TopTools_DataMapOfShapeShape&);
 
 
 //=======================================================================
Index: oce/src/BRepFeat/BRepFeat_MakePrism.cxx
===================================================================
--- oce.orig/src/BRepFeat/BRepFeat_MakePrism.cxx
+++ oce/src/BRepFeat/BRepFeat_MakePrism.cxx
@@ -95,12 +95,6 @@ static Standard_Boolean ToFuse(const Top
 			       const TopoDS_Face&);
 
 
-static void SetGluedFaces(const TopoDS_Face& theSkface,
-			  const TopoDS_Shape& theSbase,
-			  const TopoDS_Shape& thePbase,
-			  const TopTools_DataMapOfShapeListOfShape& theSlmap,
-                          LocOpe_Prism&,
-			  TopTools_DataMapOfShapeShape&);
 
 #ifdef DEB
 static void VerifGluedFaces(const TopoDS_Face& theSkface,
Index: oce/src/BRepFeat/BRepFeat_MakeRevol.cxx
===================================================================
--- oce.orig/src/BRepFeat/BRepFeat_MakeRevol.cxx
+++ oce/src/BRepFeat/BRepFeat_MakeRevol.cxx
@@ -90,12 +90,6 @@ static void MajMap(const TopoDS_Shape&,
 		   TopoDS_Shape&); // myLShape
 
 
-static void SetGluedFaces(const TopoDS_Face& theSkface,
-			  const TopoDS_Shape& theSbase,
-			  const TopoDS_Shape& thePbase,
-			  const TopTools_DataMapOfShapeListOfShape& theSlmap,
-                          LocOpe_Revol&,
-			  TopTools_DataMapOfShapeShape&);
 
 
 static void VerifGluedFaces(const TopoDS_Face& theSkface,
Index: oce/src/BRepFill/BRepFill_OffsetWire.cxx
===================================================================
--- oce.orig/src/BRepFill/BRepFill_OffsetWire.cxx
+++ oce/src/BRepFill/BRepFill_OffsetWire.cxx
@@ -143,13 +143,13 @@ static void QuasiFleche(const Adaptor3d_
 			TColgp_SequenceOfPnt& Points);
 
 static Standard_Boolean PerformCurve (TColStd_SequenceOfReal& Parameters,
-				      TColgp_SequenceOfPnt&   Points,
-				      const Adaptor3d_Curve& C, 
-				      const Standard_Real Deflection,
-				      const Standard_Real U1,
-				      const Standard_Real U2,
-				      const Standard_Real EPSILON,
-				      const Standard_Integer Nbmin);
+			TColgp_SequenceOfPnt& Points,
+			const Adaptor3d_Curve& C,
+			const Standard_Real Deflection,
+			const Standard_Real U1,
+			const Standard_Real U2,
+			const Standard_Real EPSILON,
+			const Standard_Integer Nbmin);
 
 static void CheckBadEdges(const TopoDS_Face& Spine, const Standard_Real Offset,
 			  const BRepMAT2d_BisectingLocus& Locus, 
@@ -497,6 +497,7 @@ void BRepFill_OffsetWire::Perform (const
       BRepTools_Substitution aSubst;
       TopTools_ListIteratorOfListOfShape it(BadEdges);
       TopTools_ListOfShape aL;
+	  Standard_Real aDefl = .01 * Abs(Offset);
       TColStd_SequenceOfReal Parameters;
       TColgp_SequenceOfPnt Points;
 
@@ -512,7 +513,7 @@ void BRepFill_OffsetWire::Perform (const
 	Handle(Geom_Curve) G3d = BRep_Tool::Curve(TopoDS::Edge(anE),f,l);
 	GeomAdaptor_Curve  AC(G3d,f,l);
 
-	Standard_Boolean dummy = PerformCurve(Parameters, Points,
+	PerformCurve(Parameters, Points,
 					      AC, aDefl, f, l, Precision::Confusion(),
 					      2);
 
@@ -2276,40 +2277,6 @@ static void CheckBadEdges(const TopoDS_F
 
 
 //=======================================================================
-//function : PerformCurve
-//purpose  : 
-//=======================================================================
-
-static Standard_Boolean PerformCurve (TColStd_SequenceOfReal& Parameters,
-				      TColgp_SequenceOfPnt&   Points,
-				      const Adaptor3d_Curve& C, 
-				      const Standard_Real Deflection,
-				      const Standard_Real U1,
-				      const Standard_Real U2,
-				      const Standard_Real EPSILON,
-				      const Standard_Integer Nbmin)
-{
-  Standard_Real UU1 = Min(U1, U2);
-  Standard_Real UU2 = Max(U1, U2);
-
-  gp_Pnt Pdeb, Pfin;
-  gp_Vec Ddeb,Dfin;
-  C.D1(UU1,Pdeb,Ddeb);
-  Parameters.Append(UU1);
-  Points.Append(Pdeb);
-
-  C.D1(UU2,Pfin,Dfin);
-  QuasiFleche(C,Deflection*Deflection,
-	      UU1,Pdeb,
-	      Ddeb,
-	      UU2,Pfin,
-	      Dfin,
-	      Nbmin,
-	      EPSILON*EPSILON,
-	      Parameters,Points);
-  return Standard_True;
-}
-//=======================================================================
 //function : QuasiFleche
 //purpose  : 
 //=======================================================================
@@ -2389,3 +2356,37 @@ static void QuasiFleche(const Adaptor3d_
   }
 }
 			
+//=======================================================================
+//function : PerformCurve
+//purpose :
+//=======================================================================
+
+static Standard_Boolean PerformCurve (TColStd_SequenceOfReal& Parameters,
+									  TColgp_SequenceOfPnt& Points,
+									  const Adaptor3d_Curve& C,
+									  const Standard_Real Deflection,
+									  const Standard_Real U1,
+									  const Standard_Real U2,
+									  const Standard_Real EPSILON,
+									  const Standard_Integer Nbmin)
+{
+	Standard_Real UU1 = Min(U1, U2);
+	Standard_Real UU2 = Max(U1, U2);
+
+	gp_Pnt Pdeb, Pfin;
+	gp_Vec Ddeb,Dfin;
+	C.D1(UU1,Pdeb,Ddeb);
+	Parameters.Append(UU1);
+	Points.Append(Pdeb);
+
+	C.D1(UU2,Pfin,Dfin);
+	QuasiFleche(C,Deflection*Deflection,
+		UU1,Pdeb,
+		Ddeb,
+		UU2,Pfin,
+		Dfin,
+		Nbmin,
+		EPSILON*EPSILON,
+		Parameters,Points);
+	return Standard_True;
+}
Index: oce/src/BRepGProp/BRepGProp_Face.cxx
===================================================================
--- oce.orig/src/BRepGProp/BRepGProp_Face.cxx
+++ oce/src/BRepGProp/BRepGProp_Face.cxx
@@ -600,130 +600,7 @@ static void GetCurveKnots(const Standard
   }
 }
 
-//=======================================================================
-//function : GetIntervalNbr
-//purpose  : 
-//=======================================================================
-
-static Standard_Integer GetIntervalNbr
-                 (const Standard_Real                  theParam,
-		  const Handle(TColStd_HArray1OfReal) &theSurfKnots,
-		  const Standard_Integer               theIndStart,
-		  const Standard_Integer               theIndEnd)
-{
-  Standard_Integer i;
-  Standard_Real    aTol = Precision::Confusion();
-
-  for (i = theIndStart + 1; i < theIndEnd; i++) {
-    if (theSurfKnots->Value(i) > theParam + aTol)
-      return i - 1;
-  }
-
-  return Min(theIndStart, theIndEnd - 1);
-}
-
-//=======================================================================
-//function : GetRealCurveKnots
-//purpose  : 
-//=======================================================================
-
-static void GetRealCurveKnots
-            (const Handle(TColStd_HArray1OfReal) &theCurveKnots,
-	     const Handle(TColStd_HArray1OfReal) &theSurfKnots,
-	     const Geom2dAdaptor_Curve           &theCurve,
-	           Handle(TColStd_HArray1OfReal) &theTKnots)
-{
-  Standard_Integer       i         = theCurveKnots->Lower();
-  Standard_Integer       iU        = theCurveKnots->Upper();
-  Standard_Integer       aNbIntPnt = 23;
-  TColStd_SequenceOfReal aSeqKnot;
-  Standard_Real          aTol      = Precision::Confusion();
-  Standard_Real          aTParam;
-
-  while (i < iU) {
-    Standard_Real    aT1   = theCurveKnots->Value(i++);
-    Standard_Real    aT2   = theCurveKnots->Value(i);
-    Standard_Real    aStep = (aT2 - aT1)/(aNbIntPnt + 1.);
-    Standard_Integer j;
-    gp_Pnt2d         aValue;
-    gp_Vec2d         aDir;
-    Standard_Integer aSurfLInd = theSurfKnots->Lower();
-    Standard_Integer aSurfUInd = theSurfKnots->Upper();
-    Standard_Integer anIntrvlInd;
-    Standard_Real    aTParamOld;
-    Standard_Real    aVParam;
-    Standard_Real    aVParamOld;
-    Standard_Real    aDiffOld;
-    Standard_Real    aDiff;
-
-
-    // Append the first curve knot of each interval in the sequence of knots.
-    aSeqKnot.Append(aT1);
 
-    aTParamOld = aT1;
-    theCurve.D0(aTParamOld, aValue);
-    aVParamOld  = aValue.Y();
-    anIntrvlInd = GetIntervalNbr(aVParamOld, theSurfKnots,
-				 aSurfLInd, aSurfUInd);
-    aDiffOld    = Min(Abs(aVParamOld - theSurfKnots->Value(anIntrvlInd)),
-		      Abs(aVParamOld - theSurfKnots->Value(anIntrvlInd + 1)));
-
-    for (j = 1; j <= aNbIntPnt; j++) {
-      aTParam = aT1 + j*aStep;
-      theCurve.D1(aTParam, aValue, aDir);
-      aVParam = aValue.Y();
-      aDiff   = Min(Abs(aVParam - theSurfKnots->Value(anIntrvlInd)),
-		    Abs(aVParam - theSurfKnots->Value(anIntrvlInd + 1)));
-
-      // Skip points if the curve goes along V isoline.
-      if (Abs(aDir.Y()) > aTol) {
-	Standard_Boolean isLower =
-	            (aVParam - aTol < theSurfKnots->Value(anIntrvlInd));
-	Standard_Boolean isUpper =
-                    (aVParam + aTol > theSurfKnots->Value(anIntrvlInd + 1));
-
-	if (isLower || isUpper) {
-	  if (isLower) {
-	    aSurfLInd = theSurfKnots->Lower();
-	    aSurfUInd = anIntrvlInd - 1;
-	  } else if (isUpper) {
-	    aSurfLInd = anIntrvlInd + 1;
-	    aSurfUInd = theSurfKnots->Upper();
-	  }
-
-	  // The V interval is changed. Find new interval.
-	  anIntrvlInd = GetIntervalNbr(aVParam, theSurfKnots,
-				       aSurfLInd, aSurfUInd);
-
-	  // Add the value that is closer to surface knots.
-	  // Check if the previous value is already added.
-	  if (aDiff < aDiffOld)
-	    aSeqKnot.Append(aTParam);
-	  else if (Abs(aSeqKnot.Last() - aTParamOld) > aTol)
-	    aSeqKnot.Append(aTParamOld);
-	}
-      }
-
-      // Prepare data for the next iteration.
-      aTParamOld = aTParam;
-      aVParamOld = aVParam;
-      aDiffOld   = aDiff;
-    }
-  }
-
-  // Add the last curve knot to the sequence.
-  aSeqKnot.Append(theCurveKnots->Value(iU));
-
-  // Fill the array of knots.
-  Standard_Integer aKnotsLen = aSeqKnot.Length();
-
-  theTKnots = new TColStd_HArray1OfReal(1, aKnotsLen);
-
-  for (i = 1; i <= aKnotsLen; i++) {
-    aTParam = aSeqKnot.Value(i);
-    theTKnots->SetValue(i, aTParam);
-  }
-}
 
 //=======================================================================
 //function : GetUKnots
Index: oce/src/Extrema/Extrema_GenExtPS.cxx
===================================================================
--- oce.orig/src/Extrema/Extrema_GenExtPS.cxx
+++ oce/src/Extrema/Extrema_GenExtPS.cxx
@@ -281,51 +281,6 @@ Processing:
       - update table TbSel.
 -----------------------------------------------------------------------------*/
 
-static Standard_Boolean IsoIsDeg  (const Adaptor3d_Surface& S,
-				   const Standard_Real      Param,
-				   const GeomAbs_IsoType    IT,
-				   const Standard_Real      TolMin,
-				   const Standard_Real      TolMax) 
-{
-    Standard_Real U1=0.,U2=0.,V1=0.,V2=0.,T;
-    Standard_Boolean Along = Standard_True;
-    U1 = S.FirstUParameter();
-    U2 = S.LastUParameter();
-    V1 = S.FirstVParameter();
-    V2 = S.LastVParameter();
-    gp_Vec D1U,D1V;
-    gp_Pnt P;
-    Standard_Real Step,D1NormMax;
-    if (IT == GeomAbs_IsoV) 
-    {
-      Step = (U2 - U1)/10;
-      D1NormMax=0.;
-      for (T=U1;T<=U2;T=T+Step) 
-      {
-        S.D1(T,Param,P,D1U,D1V);
-        D1NormMax=Max(D1NormMax,D1U.Magnitude());
-      }
-
-      if (D1NormMax >TolMax || D1NormMax < TolMin ) 
-           Along = Standard_False;
-    }
-    else 
-    {
-      Step = (V2 - V1)/10;
-      D1NormMax=0.;
-      for (T=V1;T<=V2;T=T+Step) 
-      {
-	S.D1(Param,T,P,D1U,D1V);
-        D1NormMax=Max(D1NormMax,D1V.Magnitude());
-      }
-
-      if (D1NormMax >TolMax || D1NormMax < TolMin ) 
-           Along = Standard_False;
-
-
-    }
-    return Along;
-}
 //----------------------------------------------------------
 Extrema_GenExtPS::Extrema_GenExtPS() 
 {
Index: oce/src/HLRBRep/HLRBRep_EdgeIList.cxx
===================================================================
--- oce.orig/src/HLRBRep/HLRBRep_EdgeIList.cxx
+++ oce/src/HLRBRep/HLRBRep_EdgeIList.cxx
@@ -53,26 +53,6 @@ AddInterference(HLRAlgo_InterferenceList
 //function : ProcessComplex
 //purpose  : 
 //=======================================================================
-static Standard_Boolean SimilarInterference(const HLRAlgo_Interference& I1,
-					    const HLRAlgo_Interference& I2)
-{
-  Standard_Real p1, p2;
-  Standard_Real eps = 1.e-7;
-  TopAbs_Orientation or1, or2;
-  //Standard_Integer l1, l2; //levels
-
-  p1 = I1.Intersection().Parameter();
-  //l1 = I1.Intersection().Level();
-  or1 = I1.Transition();
-
-  p2 = I2.Intersection().Parameter();
-  //l2 = I2.Intersection().Level();
-  or2 = I2.Transition();
-
-  Standard_Boolean IsSimilar = Abs(p1-p2) <= eps && or1 == or2;
-  return IsSimilar;
-  
-}
 void  HLRBRep_EdgeIList::
 ProcessComplex(HLRAlgo_InterferenceList& IL,
 	       const HLRBRep_EdgeInterferenceTool& T)
Index: oce/src/MeshTest/MeshTest.cxx
===================================================================
--- oce.orig/src/MeshTest/MeshTest.cxx
+++ oce/src/MeshTest/MeshTest.cxx
@@ -761,38 +761,6 @@ static Standard_Integer triangle (Draw_I
 
 
 //=======================================================================
-//function : printdegree
-//purpose  : 
-//=======================================================================
-
-static void printdegree(BRepMesh_DegreeOfFreedom dof, Draw_Interpretor& di)
-{
-  switch (dof) {
-case BRepMesh_InVolume :
-  di << "InVolume";
-  break;
-case BRepMesh_OnSurface :
-  di << "OnSurface";
-  break;
-case BRepMesh_OnCurve :
-  di << "OnCurve";
-  break;
-case BRepMesh_Fixed :
-  di << "Fixed";
-  break;
-case BRepMesh_Frontier :
-  di << "Frontier";
-  break;
-case BRepMesh_Deleted :
-  di << "Deleted";
-  break;
-case BRepMesh_Free :
-  di << "Free";
-  break;
-  }
-}
-
-//=======================================================================
 //function : dumpvertex
 //purpose  : 
 //=======================================================================
Index: oce/src/MeshTest/MeshTest_DrawableMesh.cxx
===================================================================
--- oce.orig/src/MeshTest/MeshTest_DrawableMesh.cxx
+++ oce/src/MeshTest/MeshTest_DrawableMesh.cxx
@@ -182,38 +182,6 @@ Handle(Draw_Drawable3D) MeshTest_Drawabl
   return  D;
 }
 
-//=======================================================================
-//function : Dump
-//purpose  : 
-//=======================================================================
-
-static void printdegree(BRepMesh_DegreeOfFreedom dof)
-{
-  switch (dof) {
-  case BRepMesh_InVolume :
-    cout << "InVolume";
-    break;
-  case BRepMesh_OnSurface :
-    cout << "OnSurface";
-    break;
-  case BRepMesh_OnCurve :
-    cout << "OnCurve";
-    break;
-  case BRepMesh_Fixed :
-    cout << "Fixed";
-    break;
-  case BRepMesh_Frontier :
-    cout << "Frontier";
-    break;
-  case BRepMesh_Deleted :
-    cout << "Deleted";
-    break;
-  case BRepMesh_Free :
-    cout << "Free";
-    break;
-  }
-}
-
 void MeshTest_DrawableMesh::Dump(Standard_OStream& S) const 
 {
   // Should be reimplemented
Index: oce/src/STEPControl/STEPControl_ActorRead.cxx
===================================================================
--- oce.orig/src/STEPControl/STEPControl_ActorRead.cxx
+++ oce/src/STEPControl/STEPControl_ActorRead.cxx
@@ -130,13 +130,13 @@
 
 #define TRANSLOG
 
+#ifdef DEB
 // ============================================================================
 // Function: DumpWhatIs   
 // Purpose: Use it in DEB mode to dump your shapes
 // ============================================================================
 
 static void DumpWhatIs(const TopoDS_Shape& S) {
-
   TopTools_MapOfShape aMapOfShape;
   aMapOfShape.Add(S);
   TopTools_ListOfShape aListOfShape;
@@ -180,7 +180,6 @@ static void DumpWhatIs(const TopoDS_Shap
         nbVertexes++;
     }
   }
-  #ifdef DEB
   cout << "//What is?// NB COMPOUNDS: " << nbCompounds << endl;
   cout << "//What is?// NB SOLIDS: " << nbSolids << endl;
   cout << "//What is?// NB SHELLS: " << nbShells << endl;
@@ -190,8 +189,8 @@ static void DumpWhatIs(const TopoDS_Shap
   cout << "//What is?// NB WIRES: " << nbWires << endl;
   cout << "//What is?// NB EDGES: " << nbEdges << endl;
   cout << "//What is?// NB VERTEXES: " << nbVertexes << endl;
-  #endif
 }
+#endif
 
 namespace {
   // Set global var to inform outer methods that current representation item is non-manifold.
Index: oce/src/STEPControl/STEPControl_ActorWrite.cxx
===================================================================
--- oce.orig/src/STEPControl/STEPControl_ActorWrite.cxx
+++ oce/src/STEPControl/STEPControl_ActorWrite.cxx
@@ -119,13 +119,13 @@
 #include <TopTools_MapOfShape.hxx>
 #include <TopTools_ListIteratorOfListOfShape.hxx>
 
+#ifdef DEB
 // ============================================================================
 // Function: DumpWhatIs   
 // Purpose: Use it in DEB mode to dump your shapes
 // ============================================================================
 
 static void DumpWhatIs(const TopoDS_Shape& S) {
-
   TopTools_MapOfShape aMapOfShape;
   aMapOfShape.Add(S);
   TopTools_ListOfShape aListOfShape;
@@ -163,7 +163,6 @@ static void DumpWhatIs(const TopoDS_Shap
         nbVertexes++;
     }
   }
-  #ifdef DEB
   cout << "//What is?// NB SOLIDS: " << nbSolids << endl;
   cout << "//What is?// NB SHELLS: " << nbShells << endl;
   cout << "//What is?//    OPEN SHELLS: " << nbOpenShells << endl;
@@ -172,8 +171,9 @@ static void DumpWhatIs(const TopoDS_Shap
   cout << "//What is?// NB WIRES: " << nbWires << endl;
   cout << "//What is?// NB EDGES: " << nbEdges << endl;
   cout << "//What is?// NB VERTEXES: " << nbVertexes << endl;
-  #endif
 }
+#endif
+
 
 //=======================================================================
 // Function : IsManifoldShape
Index: oce/src/ShapeFix/ShapeFix_Face.cxx
===================================================================
--- oce.orig/src/ShapeFix/ShapeFix_Face.cxx
+++ oce/src/ShapeFix/ShapeFix_Face.cxx
@@ -1948,26 +1948,6 @@ Standard_Boolean ShapeFix_Face::FixLoopW
 }
 
 
-//=======================================================================
-//function : GetPointOnEdge
-//purpose  : auxiliary
-//:h0 abv 29 May 98: PRO10105 1949: like in BRepCheck, point is to be taken 
-// from 3d curve (but only if edge is SameParameter)
-//=======================================================================
-static gp_Pnt GetPointOnEdge ( const TopoDS_Edge &edge, 
-			       const Handle(ShapeAnalysis_Surface) &surf,
-			       const Handle(Geom2d_Curve) &Crv2d, 
-			       const Standard_Real param )
-{
-  if ( BRep_Tool::SameParameter ( edge ) ) {
-    Standard_Real f,l;
-    TopLoc_Location L;
-    const Handle(Geom_Curve) ConS = BRep_Tool::Curve ( edge, L, f, l );
-    if ( ! ConS.IsNull() )
-      return ConS->Value ( param ).Transformed ( L.Transformation() );
-  }
-  return surf->Value ( Crv2d->Value ( param ) );
-}
 
 
 //=======================================================================
Index: oce/src/ShapeFix/ShapeFix_Solid.cxx
===================================================================
--- oce.orig/src/ShapeFix/ShapeFix_Solid.cxx
+++ oce/src/ShapeFix/ShapeFix_Solid.cxx
@@ -114,29 +114,6 @@ ShapeFix_Solid::ShapeFix_Solid(const Top
 //function : CollectSolids
 //purpose  : 
 //=======================================================================
-static void GetMiddlePoint(const TopoDS_Shape& aShape, gp_Pnt& pmid)
-{
-  TopExp_Explorer aExp(aShape,TopAbs_EDGE);
-  gp_XYZ center(0.0,0.0,0.0);
-  Standard_Integer numpoints =0;
-  for( ; aExp.More(); aExp.Next()) {
-    TopoDS_Edge e1 = TopoDS::Edge(aExp.Current());
-    Standard_Real f,l;
-    Handle(Geom_Curve) c3d = BRep_Tool::Curve(e1,f,l);
-    if(!c3d.IsNull()) {
-      for(Standard_Integer i =1 ; i <=5; i++) {
-        Standard_Real param = f+(l-f)/4*(i-1);
-        gp_Pnt pt;
-        numpoints++;
-        c3d->D0(param,pt);
-        center+=pt.XYZ();
-      
-      }
-    }
-  }
-  center /= numpoints;
-  pmid.SetXYZ(center);
-}
 static void CollectSolids(const TopTools_SequenceOfShape& aSeqShells , 
                           TopTools_DataMapOfShapeListOfShape& aMapShellHoles,
                           TopTools_DataMapOfShapeInteger& theMapStatus)
Index: oce/src/TNaming/TNaming_Name.cxx
===================================================================
--- oce.orig/src/TNaming/TNaming_Name.cxx
+++ oce/src/TNaming/TNaming_Name.cxx
@@ -1082,92 +1082,6 @@ static Standard_Boolean Union (const TDF
 // function: FindShape
 //
 //=======================================================================
-static TopoDS_Shape FindShape(const TopTools_ListOfShape& theList) 
-{
-  Standard_Integer anUp = theList.Extent();
-  TopoDS_Shape aShape;
-  if(anUp < 1) return aShape;
-  if(anUp == 1) return theList.First();
-  Standard_Integer aLow = 1;
-  TColStd_Array1OfInteger Ar1(aLow, anUp); 
-  TopTools_Array1OfShape  Ars(aLow, anUp);
-  TopTools_ListIteratorOfListOfShape it(theList);
-  Standard_Integer i=0;
-  for(i=aLow;it.More();it.Next(), i++) {
-    Ars.SetValue(i, it.Value());
-    Ar1.SetValue(i, 0);
-  }
-//  for(i = aLow;i<= anUp;i++) {
-//    const TopoDS_Shape& aS = Ars.Value(i);
-//    for(Standard_Integer j=i;j<=anUp;j++)
-//      if(aS.IsSame(Ars.Value(j)))
-//	Ar1.SetValue(i, Ar1.Value(i)+1);
-//  }
-  for(i = aLow;i<= anUp;i++) {
-    const TopoDS_Shape& aS = Ars.Value(i);
-    for(Standard_Integer j=i+1;j<=anUp;j++)
-      if(aS.IsSame(Ars.Value(j)))
-		return aS;
-  }
-//  Standard_Integer aNum = Ar1.Value(1);
-//  Standard_Integer indx = -1;
-// for(i = aLow;i<= anUp;i++) {
-//    if(aNum < Ar1.Value(i)) {
-//       aNum = Ar1.Value(i);
-//       indx = i;
-//       }
-//  }
-//  if(indx == -1) return aShape;
-//  return Ars.Value(indx);
-  return aShape;
-}
-//=======================================================================
-/*
-static TopoDS_Shape FindShape(const TopTools_DataMapOfShapeListOfShape& DM) 
-{
-  TopoDS_Shape aResult;
-  Standard_Integer aNum = DM.Extent();
-  if(aNum < 1) return aResult;  
-  //  cout <<" DM Keys Nb = " << aNum <<endl;
-  TopTools_ListOfShape List;
-  TopTools_DataMapIteratorOfDataMapOfShapeListOfShape it(DM);
-  for (;it.More();it.Next()) {
-    const TopoDS_Shape& aKey1 = it.Key();
-    const TopTools_ListOfShape& aList = it.Value();
-    TopTools_ListIteratorOfListOfShape itl(aList);
-    for (;itl.More();itl.Next()) {
-      const TopoDS_Shape& aS = itl.Value();
-      TopTools_DataMapIteratorOfDataMapOfShapeListOfShape it2(DM);
-      for (;it2.More();it2.Next()) {
-	const TopoDS_Shape& aKey2 = it2.Key();
-	if(aKey2 == aKey1) continue;
-	else {
-	  const TopTools_ListOfShape& aList2 = it2.Value();
-	  TopTools_ListIteratorOfListOfShape itl2(aList2);
-	  for(;itl2.More();itl2.Next()) {
-	    if(aS.IsSame(itl2.Value()))
-	      List.Append(itl2.Value());
-	  }
-	}
-      }
-    }
-    break;
-  }
-
-  if(List.IsEmpty()) return aResult;
-  if(List.Extent() == 1) return List.First();
-  TopTools_ListIteratorOfListOfShape itl (List);
-  TopoDS_Compound Compound;
-  BRep_Builder B;
-  B.MakeCompound(Compound);
-  for (; itl.More(); itl.Next()){ 
-    B.Add(Compound,itl.Value());
-  }
-  return Compound; 
-}
-*/
-
-//=======================================================================
 static TopoDS_Shape FindShape(const TNaming_DataMapOfShapeMapOfShape& DM) 
 {
   TopoDS_Shape aResult;
Index: oce/src/Visual3d/Visual3d_ViewMapping.cxx
===================================================================
--- oce.orig/src/Visual3d/Visual3d_ViewMapping.cxx
+++ oce/src/Visual3d/Visual3d_ViewMapping.cxx
@@ -45,7 +45,6 @@
 
 // Perspective
 #include <OSD_Environment.hxx>
-static Standard_Boolean env_init = Standard_False;
 static OSD_Environment env_walkthrow; 
 
 static Standard_Boolean Visual3dWalkthrow()
Index: oce/src/XmlLDrivers/XmlLDrivers_DocumentRetrievalDriver.cxx
===================================================================
--- oce.orig/src/XmlLDrivers/XmlLDrivers_DocumentRetrievalDriver.cxx
+++ oce/src/XmlLDrivers/XmlLDrivers_DocumentRetrievalDriver.cxx
@@ -51,7 +51,6 @@
 #define END_REF           "END_REF"
 #define REFERENCE_COUNTER "REFERENCE_COUNTER"
 
-static  Standard_Integer myDocumentVersion = 0;
 
 //#define TAKE_TIMES
 static void take_time (const Standard_Integer, const char *,
