From: Denis Barbier <bouzim@gmail.com>
Date: Sun, 13 Mar 2011 09:57:46 +0100
Subject: [PATCH 77/82] Let whereAmI() return OSD_UnixBSD on GNU/kFreeBSD

See http://www.opencascade.org/org/forum/thread_20052/
---
 src/OSD/OSD_Path.cxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From: Denis Barbier <bouzim@gmail.com>
Date: Sun, 13 Mar 2011 10:04:05 +0100
Subject: [PATCH 79/82] Drop utsname usage for unknown architectures

It makes build fail on GNU/Hurd, and surely on other exotic platforms.
---
 src/OSD/OSD_Path.cxx |   11 -----------
 1 files changed, 0 insertions(+), 11 deletions(-)

Index: oce/src/OSD/OSD_Path.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Path.cxx
+++ oce/src/OSD/OSD_Path.cxx
@@ -29,12 +29,8 @@
 #include <OSD_Path.ixx>
 #include <OSD_WhoAmI.hxx>
 
-#ifdef HAVE_SYS_UTSNAME_H
-//# include <sys/utsname.h>
-#endif
-
 static OSD_SysType whereAmI(){
-#if defined(__digital__) || defined(__FreeBSD__) || defined(SUNOS) || defined(__APPLE__)
+#if defined(__digital__) || defined(__FreeBSD__) || defined(SUNOS) || defined(__APPLE__) || defined(__FreeBSD_kernel__)
   return OSD_UnixBSD;
 }
 #elif defined(sgi)  || defined(IRIX) || defined(__sun)  || defined(SOLARIS) ||  defined(__sco__) || defined(__hpux) || defined(HPUX)
@@ -62,13 +58,6 @@ static OSD_SysType whereAmI(){
   return OSD_Aix;
 }
 #else
-  struct utsname info;
-  uname(&info);
-  cout << info.sysname << endl;
-  cout << info.nodename << endl;
-  cout << info.release << endl;
-  cout << info.version << endl;
-  cout << info.machine << endl;
   return OSD_Default;
 }
 #endif
