commit 0e86d0653971936215a5c6eb129647bdfbde8a46
Author: Denis Barbier <bouzim@gmail.com>
Date:   Sun Apr 24 10:13:26 2011 +0200

    Add OpenMP support
    
    Classes BRepMesh_FastDiscret and BRepMesh_IncrementalMesh
    have been modified in OpenCASCADE 6.5.0 to allow parallel
    meshing on faces if compiled with TBB support.
    
    This patch does the same for OpenMP, which means that users
    can choose between TBB and OpenMP to enable parallel meshing.
    
    Submitted upstream: http://www.opencascade.org/org/forum/thread_20105/

Index: oce/src/BRepMesh/BRepMesh_FastDiscret.cxx
===================================================================
--- oce.orig/src/BRepMesh/BRepMesh_FastDiscret.cxx
+++ oce/src/BRepMesh/BRepMesh_FastDiscret.cxx
@@ -263,8 +263,10 @@ void BRepMesh_FastDiscret::Perform(const
     tbb::parallel_for_each (aFaces.begin(), aFaces.end(), *this);
   #else
     // alternative parallelization not yet available
-    for (std::vector<TopoDS_Face>::iterator it(aFaces.begin()); it != aFaces.end(); it++)
-      Process (*it);
+    int i, n = aFaces.size();
+#pragma omp parallel for private(i)
+    for (i = 0; i < n; ++i)
+      Process (aFaces[i]);
   #endif
     RemoveAllMutexes();
   }
Index: oce/src/BRepMesh/BRepMesh_IncrementalMesh.cxx
===================================================================
--- oce.orig/src/BRepMesh/BRepMesh_IncrementalMesh.cxx
+++ oce/src/BRepMesh/BRepMesh_IncrementalMesh.cxx
@@ -265,9 +265,10 @@ void BRepMesh_IncrementalMesh::Update(co
     // mesh faces in parallel threads using TBB
     tbb::parallel_for_each (aFaces.begin(), aFaces.end(), *myMesh.operator->());
   #else
-    // alternative parallelization not yet available
-    for (std::vector<TopoDS_Face>::iterator it(aFaces.begin()); it != aFaces.end(); it++)
-      myMesh->Process (*it);
+    int i, n = aFaces.size();
+#pragma omp parallel for private(i)
+    for (i = 0; i < n; ++i)
+      myMesh->Process (aFaces[i]);
   #endif
     myMesh->RemoveAllMutexes();
   }
@@ -524,12 +525,7 @@ Standard_Integer BRepMesh_IncrementalMes
 //=======================================================================
 Standard_Boolean BRepMesh_IncrementalMesh::IsParallelDefault()
 {
-#ifdef HAVE_TBB
   return IS_IN_PARALLEL;
-#else
-  // no alternative parallelization yet - flag has no meaning
-  return Standard_False;
-#endif
 }
 
 //=======================================================================
