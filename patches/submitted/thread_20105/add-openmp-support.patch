commit 0e86d0653971936215a5c6eb129647bdfbde8a46
Author: Denis Barbier <bouzim@gmail.com>
Date:   Sun Apr 24 10:13:26 2011 +0200

    Add OpenMP support
    
    Classes BRepMesh_FastDiscret and BRepMesh_IncrementalMesh
    have been modified in OpenCASCADE 6.5.0 to allow parallel
    meshing on faces if compiled with TBB support.
    
    This patch does the same for OpenMP, which means that users
    can choose between TBB and OpenMP to enable parallel meshing.
    
    Submitted upstream: http://www.opencascade.org/org/forum/thread_20105/

Index: oce/src/BRepMesh/BRepMesh_FastDiscret.cxx
===================================================================
--- oce.orig/src/BRepMesh/BRepMesh_FastDiscret.cxx
+++ oce/src/BRepMesh/BRepMesh_FastDiscret.cxx
@@ -163,20 +163,25 @@ void BRepMesh_FastDiscret::Perform(const
     aFaces.push_back(aFace);
   }
 
-#ifdef HAVE_TBB
+#if defined(HAVE_TBB) || defined(_OPENMP)
   if ( myInParallel )
   {
+#ifdef HAVE_TBB
     tbb::parallel_for_each(aFaces.begin(), aFaces.end(), *this);
+#else
+    int i, n = aFaces.size();
+#pragma omp parallel for private(i)
+    for (i = 0; i < n; ++i)
+      Process(aFaces[i]);
+#endif
   }
   else
-  {
 #endif
+  {
     std::vector<TopoDS_Face>::const_iterator anIt(aFaces.begin());
     for (; anIt != aFaces.end(); anIt++)
       Process(*anIt);
-#ifdef HAVE_TBB
   }
-#endif
 }
 
 
Index: oce/src/BRepMesh/BRepMesh_IncrementalMesh.cxx
===================================================================
--- oce.orig/src/BRepMesh/BRepMesh_IncrementalMesh.cxx
+++ oce/src/BRepMesh/BRepMesh_IncrementalMesh.cxx
@@ -161,21 +161,26 @@ void BRepMesh_IncrementalMesh::update()
 
   BRepMesh_FaceChecker aFaceChecker(myInParallel);
 
-#ifdef HAVE_TBB
+#if defined(HAVE_TBB) || defined(_OPENMP)
   if (myInParallel)
   {
     // check faces in parallel threads using TBB
+#ifdef HAVE_TBB
     tbb::parallel_for_each(myFaces.begin(), myFaces.end(), aFaceChecker);
+#else
+    int i, n = myFaces.size();
+#pragma omp parallel for private(i)
+    for (i = 0; i < n; ++i)
+      aFaceChecker(myFaces[i]);
+#endif
   }
   else
-  {
 #endif
+  {
     NCollection_Vector<TopoDS_Face>::Iterator aFaceIt(myFaces);
     for (; aFaceIt.More(); aFaceIt.Next())
       aFaceChecker(aFaceIt.Value());
-#ifdef HAVE_TBB
   }
-#endif
 
   return aFaceChecker.IsValid();
 }
@@ -238,19 +238,24 @@ void BRepMesh_IncrementalMesh::update()
     update(aFaceIt.Value());
 
   // Mesh faces
-#ifdef HAVE_TBB
+#if defined(HAVE_TBB) || defined(_OPENMP)
   if (myInParallel)
   {
+#ifdef HAVE_TBB
     tbb::parallel_for_each(myFaces.begin(), myFaces.end(), *myMesh);
+#else
+    int i, n = myFaces.size();
+#pragma omp parallel for private(i)
+    for (i = 0; i < n; ++i)
+      myMesh->Process(myFaces[i]);
+#endif
   }
   else
-  {
 #endif
+  {
     for (aFaceIt.Init(myFaces); aFaceIt.More(); aFaceIt.Next())
       myMesh->Process(aFaceIt.Value());
-#ifdef HAVE_TBB
   }
-#endif
 
   commit();
 }
@@ -567,12 +572,7 @@ Standard_Integer BRepMesh_IncrementalMes
 //=======================================================================
 Standard_Boolean BRepMesh_IncrementalMesh::IsParallelDefault()
 {
-#ifdef HAVE_TBB
   return IS_IN_PARALLEL;
-#else
-  // no alternative parallelization yet - flag has no meaning
-  return Standard_False;
-#endif
 }
 
 //=======================================================================
