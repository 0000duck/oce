From: QbProg <tholag@gmail.com>
Date: Thu, 12 May 2011 20:25:00 +0200
Subject: [PATCH 29/82] [warning-fix][implicit-conversion-from-wider-type]

Fixes warnings like 'conversion' conversion from 'type1' to 'type2', possible loss of data
---
 src/OSD/OSD_SystemFont.cxx                  |    2 +-
 src/Resource/Resource_ConvertUnicode.c      |    8 ++++----
 src/TCollection/TCollection_AsciiString.cxx |   12 ++++++------
 3 files changed, 11 insertions(+), 11 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Thu, 12 May 2011 21:06:00 +0200
Subject: [PATCH 30/82] [warning-fix][implicit-conversion-from-wider-type]

DecimalPoint should really be a char type instead of Integer. Changing the var instead of fixing cast warnings.
---
 src/OSD/OSD.cxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Thu, 12 May 2011 21:08:22 +0200
Subject: [PATCH 31/82] [warning-fix][implicit-conversion-from-wider-type]

Clamped dialog size instead of direct casting which could result in loss of data (i.e. wrong dialog size).
---
 src/OSD/OSD_WNT_1.cxx |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Sat, 11 Jun 2011 19:55:09 +0200
Subject: [PATCH 32/82] [warning-fix][implicit-conversion-from-wider-type]

Fixed various cast warnings
---
 inc/Graphic3d_ArrayOfPrimitives.lxx            |    6 +++---
 src/DDataStd/DDataStd_BasicCommands.cxx        |   14 +++++++-------
 src/Draw/CommandWindow.cxx                     |   18 +++++++++---------
 src/Draw/Draw_Window.cxx                       |    8 ++++----
 src/Draw/MainWindow.cxx                        |    2 +-
 src/DrawTrSurf/DrawTrSurf.cxx                  |    8 ++++----
 src/DrawTrSurf/DrawTrSurf_Point.cxx            |    2 +-
 src/Interface/Interface_InterfaceModel.cxx     |    2 +-
 src/ViewerTest/ViewerTest_ViewerCommands.cxx   |    2 +-
 src/VrmlData/VrmlData_ShapeConvert.cxx         |    8 ++++----
 src/XmlMXCAFDoc/XmlMXCAFDoc_MaterialDriver.cxx |    2 +-
 11 files changed, 36 insertions(+), 36 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Sun, 12 Jun 2011 12:10:41 +0200
Subject: [PATCH 33/82] [warning-fix][implicit-conversion-from-wider-type]

Small one for now. In target-0.5 the function should return char instead of Standard_Integer
---
 src/IntPatch/IntPatch_PrmPrmIntersection.cxx |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Fri, 17 Jun 2011 21:12:56 +0200
Subject: [PATCH 34/82] [warning-fix][implicit-conversion-from-wider-type]

Adjusted int to std::streamsize
---
 src/GeomTools/GeomTools_Curve2dSet.cxx |    2 +-
 src/GeomTools/GeomTools_CurveSet.cxx   |    2 +-
 src/GeomTools/GeomTools_SurfaceSet.cxx |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

commit db59c6227a08156f38e5c1dd06a4869635d5d3f6
Author: QbProg <tholag@gmail.com>
Date:   Wed Jun 22 19:44:40 2011 +0200

    Changed the order of a previous modification, now it is more readable and more compatible with borland compilers.

From: QbProg <tholag@gmail.com>
Date: Sun, 19 Jun 2011 18:12:05 +0200
Subject: [PATCH 35/82] [warning-fix][implicit-conversion-from-wider-type]
 Fixes warnings like 'conversion' conversion from
 'type1' to 'type2', possible loss of data

---
 src/AlienImage/AlienImage_BMPAlienData.cxx         |    8 ++++----
 src/AlienImage/AlienImage_GIFAlienData.cxx         |    2 +-
 src/AlienImage/AlienImage_GIFLZWDict.cxx           |   18 +++++++++---------
 src/AlienImage/AlienImage_SGIRGBAlienData.cxx      |   18 +++++++++---------
 src/AlienImage/AlienImage_SunRFAlienData.cxx       |    2 +-
 .../BinLDrivers_DocumentRetrievalDriver.cxx        |    2 +-
 src/BinMNaming/BinMNaming_NamedShapeDriver.cxx     |    2 +-
 src/BinTools/BinTools_LocationSet.cxx              |    2 +-
 src/BinTools/BinTools_ShapeSet.cxx                 |    2 +-
 src/CGM/CGM_Driver.cxx                             |    4 ++--
 src/CGM/cgmobin.c                                  |   10 +++++-----
 src/CGM/cgmotext.c                                 |    2 +-
 src/Graphic3d/Graphic3d_Group_8.cxx                |   12 ++++++------
 src/Graphic3d/Graphic3d_Structure.cxx              |   18 +++++++++---------
 src/LDOM/LDOM_OSStream.cxx                         |    1 +
 src/LDOM/LDOM_XmlReader.cxx                        |    4 ++--
 src/NIS/NIS_Surface.cxx                            |    2 +-
 src/OpenGl/OpenGl_AVIWriter.cxx                    |    2 +-
 src/OpenGl/OpenGl_GraphicDriver_7.cxx              |   16 ++++++++--------
 src/OpenGl/OpenGl_TextRender.cxx                   |    8 ++++----
 src/OpenGl/OpenGl_attri.cxx                        |    4 ++--
 src/OpenGl/OpenGl_funcs.cxx                        |    2 +-
 src/OpenGl/OpenGl_togl_begin_layer_mode.cxx        |   10 +++++-----
 src/OpenGl/OpenGl_togl_print.cxx                   |    2 +-
 src/OpenGl/OpenGl_txgl.cxx                         |    4 ++--
 src/OpenGl/OpenGl_view.cxx                         |   12 ++++++------
 src/Prs2d/Prs2d_Angle.cxx                          |    2 +-
 src/Prs2d/Prs2d_Diameter.cxx                       |   20 ++++++++++----------
 src/Prs2d/Prs2d_Length.cxx                         |    4 ++--
 src/Prs2d/Prs2d_Radius.cxx                         |    4 ++--
 src/Prs2d/Prs2d_Repere.cxx                         |    4 ++--
 src/PrsMgr/PrsMgr_PresentableObject.cxx            |    6 +++---
 src/Select3D/Select3D_SensitiveGroup.cxx           |    4 ++--
 src/ShapeProcess/ShapeProcess_Context.cxx          |    2 +-
 src/StdPrs/StdPrs_ToolShadedShape.cxx              |   12 ++++++------
 src/TopTools/TopTools_LocationSet.cxx              |    2 +-
 src/TopTools/TopTools_ShapeSet.cxx                 |    2 +-
 src/V2d/V2d_CircularGraphicGrid.cxx                |    2 +-
 src/V2d/V2d_RectangularGraphicGrid.cxx             |    6 +++---
 src/Visual3d/Visual3d_Layer.cxx                    |    2 +-
 src/Visual3d/Visual3d_View.cxx                     |   12 ++++++------
 src/Voxel/Voxel_BooleanOperation.cxx               |    2 +-
 src/Voxel/Voxel_Reader.cxx                         |   10 +++++-----
 src/WNT/WNT_FontMapEntry.cxx                       |    6 +++---
 src/WNT/WNT_ImageProcessor.cxx                     |    4 ++--
 src/WNT/WNT_PixMap.cxx                             |    6 +++---
 46 files changed, 141 insertions(+), 140 deletions(-)

From 0c7cc56a3ceed998474b5ca2d7e661d53e3a6f62 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Thu, 12 May 2011 21:31:12 +0200
Subject: [PATCH 13/26] [warning-fix][implicit-conversion-from-wider-type]

Uses Standard_Char instead of Standard_Integer, as more appropriate (also fixes a bunch of related cast warnings)

Note: this commit breaks ABI compatibility
---
 inc/OSD_Real2String.hxx     |    4 ++--
 src/OSD/OSD_Real2String.cdl |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

From a173bf19d9f068f30b7c365c228cac4c8b0d7c69 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sun, 24 Jul 2011 18:19:40 +0200
Subject: [PATCH 08/11] [warning-fix][implicit-conversion-from-wider-type]

Changed some of the interface types (inc files) to correct some implicit casts.
---
 inc/InterfaceGraphic_Visual3d.hxx     |   10 +++++-----
 inc/LDOM_OSStream.hxx                 |    2 +-
 src/LDOM/LDOM_OSStream.cxx            |    5 ++---
 src/OpenGl/OpenGl_GraphicDriver_9.cxx |    1 -
 src/PlotMgt/PlotMgt_TextManager.cxx   |   20 ++++++++++----------
 5 files changed, 18 insertions(+), 20 deletions(-)

Index: oce/inc/LDOM_OSStream.hxx
===================================================================
--- oce.orig/inc/LDOM_OSStream.hxx
+++ oce/inc/LDOM_OSStream.hxx
@@ -67,7 +67,7 @@ class LDOM_SBuffer : public streambuf
 
     // Methods of streambuf
 
-    Standard_EXPORT virtual int overflow(int c = EOF);
+    Standard_EXPORT virtual int overflow(signed char c = EOF);
     Standard_EXPORT virtual int underflow();
     //virtual int uflow();
 
Index: oce/src/AlienImage/AlienImage_BMPAlienData.cxx
===================================================================
--- oce.orig/src/AlienImage/AlienImage_BMPAlienData.cxx
+++ oce/src/AlienImage/AlienImage_BMPAlienData.cxx
@@ -547,7 +547,7 @@ void AlienImage_BMPAlienData::FromPseudo
     for (y = 0; y < myHeight; y++) {
       for (x = 0; x < myWidth; x++) {
         iPixel = anImage -> Pixel (LowX + x, LowY + y);
-        index = aColorMap -> FindEntry (iPixel.Value ()).Index ();
+        index = (BYTE)aColorMap -> FindEntry (iPixel.Value ()).Index ();
         BPIXEL[y*myWidth + x] = index;
       }
     }
@@ -577,9 +577,9 @@ void AlienImage_BMPAlienData::FromColorI
       for (x = 0; x < myWidth; x++) {
         color = anImage -> PixelColor (LowX + x, LowY + y);
         color.Values (r, g, b, Quantity_TOC_RGB);
-        rgbColor.rgbRed      = (int)(r*255.);
-        rgbColor.rgbGreen    = (int)(g*255.);
-        rgbColor.rgbBlue     = (int)(b*255.);
+        rgbColor.rgbRed      = (BYTE)(int)(r*255.);
+        rgbColor.rgbGreen    = (BYTE)(int)(g*255.);
+        rgbColor.rgbBlue     = (BYTE)(int)(b*255.);
         rgbColor.rgbReserved = 0;
         DWPIXEL[y*myWidth + x] = _TestSwapDWORD (*pdwPixel);
       }
Index: oce/src/AlienImage/AlienImage_GIFAlienData.cxx
===================================================================
--- oce.orig/src/AlienImage/AlienImage_GIFAlienData.cxx
+++ oce/src/AlienImage/AlienImage_GIFAlienData.cxx
@@ -546,7 +546,7 @@ void AlienImage_GIFAlienData::FromPseudo
     // Build colors from colormap
     for (i = 1; i <= aColorMap -> Size (); i++) {
       entry = aColorMap -> Entry (i);
-      ei = entry.Index ();
+      ei = (BYTE)entry.Index ();
       color = entry.Color ();
       color.Values (r, g, b, Quantity_TOC_RGB);
       RED  [ei] = (BYTE)(r*255.);
Index: oce/src/AlienImage/AlienImage_GIFLZWDict.cxx
===================================================================
--- oce.orig/src/AlienImage/AlienImage_GIFLZWDict.cxx
+++ oce/src/AlienImage/AlienImage_GIFLZWDict.cxx
@@ -70,7 +70,7 @@ int _lzw_encode (OSD_File& file, const B
 
   _init_dict ();
 
-  byte = startBits;
+  byte = (BYTE) startBits;
 
   file.Write (&byte, sizeof(byte));
   if (file.Failed ())
@@ -93,7 +93,7 @@ int _lzw_encode (OSD_File& file, const B
     else {
       dict[ i ].code = nextCode++;
       dict[ i ].prnt = strCode;
-      dict[ i ].byte = chr;
+      dict[ i ].byte = (BYTE) chr;
 
       if (!_put_bits (OutBuff, (ULONG) strCode, codeBits, file))
         goto _ExitError;
@@ -175,7 +175,7 @@ static BOOL _put_bits (BYTE *OutBuff, UL
     mask <<= 1;
 
     if ((mask & 0xFF) == 0) {
-      OutBuff[ putIdx++ ] = rack;
+      OutBuff[ putIdx++ ] = (BYTE) rack;
       ++OutBuff[ 0 ];
       
       if (putIdx == BUFF_SIZE) {
@@ -202,7 +202,7 @@ static BOOL _flush_bits (BYTE* OutBuff,
   BYTE  byte;
   
   if ( mask != 0x01 ) {
-    OutBuff[ putIdx++ ] = rack;
+    OutBuff[ putIdx++ ] = (BYTE) rack;
     ++OutBuff[ 0 ];
   }
     
@@ -488,7 +488,7 @@ freeMemory_1:
       
    }  // end if
 
-   *picptr++ = index;
+   *picptr++ = (BYTE)  index;
    ++col;
    ++pP;
   
@@ -596,13 +596,13 @@ static chist_vec __fastcall mediancut (
    pixel p;
    int   rl, gl, bl;
 
-   PPM_ASSIGN( p, maxr - minr, 0, 0 );      
+   PPM_ASSIGN(p, (BYTE)(maxr - minr), 0, 0 );      
    rl = PPM_LUMIN( p );
 
-   PPM_ASSIGN( p, 0, maxg - ming, 0 );
+   PPM_ASSIGN( p, 0, (BYTE)(maxg - ming), 0 );
    gl = PPM_LUMIN( p );
 
-   PPM_ASSIGN( p, 0, 0, maxb - minb );
+   PPM_ASSIGN( p, 0, 0, (BYTE)(maxb - minb) );
    bl = PPM_LUMIN( p );
 
    if ( rl >= gl && rl >= bl )
@@ -921,7 +921,7 @@ static int __fastcall quick_check (
     
    }  // end while
 
-   *pix++ = mid;
+   *pix++ = (BYTE)mid;
 
   }  // end for ( j . . . )
 
Index: oce/src/AlienImage/AlienImage_SGIRGBAlienData.cxx
===================================================================
--- oce.orig/src/AlienImage/AlienImage_SGIRGBAlienData.cxx
+++ oce/src/AlienImage/AlienImage_SGIRGBAlienData.cxx
@@ -317,14 +317,14 @@ static Standard_Boolean iopen( 	OSD_File
 	int calsize	= sizeof( AlienImage_SGIRGBFileHeader ) ;
 	if (mode=='w') { //------------------WRITE------------------
 		image->imagic = IMAGIC;
-		image->type = type;
-		image->xsize = xsize;
+		image->type = (unsigned short)type;
+		image->xsize = (unsigned short)xsize;
 		image->ysize = 1;
 		image->zsize = 1;
 		if (dim>1)
-		    image->ysize = ysize;
+		    image->ysize = (unsigned short)ysize;
 		if (dim>2)
-		    image->zsize = zsize;
+		    image->zsize = (unsigned short)zsize;
 		if(image->zsize == 1) {
 		    image->dim = 2;
 		    if(image->ysize == 1)
@@ -492,8 +492,8 @@ static int img_seek( 	OSD_File &File,
 	return EOF;
     }
     image->x = 0;
-    image->y = y;
-    image->z = z;
+    image->y = (unsigned short)y;
+    image->z = (unsigned short)z;
     if(ISVERBATIM(image->type)) {
 	switch(image->dim) {
 	    case 1:
@@ -895,7 +895,7 @@ static int getrow(	OSD_File& File,
     register short i;
     register unsigned char *cptr;
     register unsigned short *sptr;
-    register short cnt; 
+    register int cnt; 
 
     if( !(image->flags & (_IORW|_IOREAD)) )
 	return -1;
@@ -1287,8 +1287,8 @@ void AlienImage_SGIRGBAlienData::FromIma
   Standard_Integer LowX = anImage->LowerX() ;
   Standard_Integer LowY = anImage->LowerY() ;
 
-  myHeader.xsize = anImage->Width();
-  myHeader.ysize = anImage->Height();
+  myHeader.xsize = (unsigned short)anImage->Width();
+  myHeader.ysize = (unsigned short)anImage->Height();
   myHeader.zsize = 3;
 
   /* allocate buffers for image data */
Index: oce/src/AlienImage/AlienImage_SunRFAlienData.cxx
===================================================================
--- oce.orig/src/AlienImage/AlienImage_SunRFAlienData.cxx
+++ oce/src/AlienImage/AlienImage_SunRFAlienData.cxx
@@ -518,7 +518,7 @@ Standard_Boolean AlienImage_SunRFAlienDa
 		}
 
 		b = RUN_FLAG ; file.Write( ( Standard_Address ) &b, 1 ) ;
-		b = n-1 ;      file.Write( ( Standard_Address ) &b, 1 ) ;
+		b = Standard_Byte(n-1) ;      file.Write( ( Standard_Address ) &b, 1 ) ;
 		b = scanln[n1];file.Write( ( Standard_Address ) &b, 1 ) ;
 
 	}
Index: oce/src/BinMNaming/BinMNaming_NamedShapeDriver.cxx
===================================================================
--- oce.orig/src/BinMNaming/BinMNaming_NamedShapeDriver.cxx
+++ oce/src/BinMNaming/BinMNaming_NamedShapeDriver.cxx
@@ -298,7 +298,7 @@ void BinMNaming_NamedShapeDriver::ReadSh
 {
   // check section title string; note that some versions of OCCT (up to 6.3.1) 
   // might avoid writing shape section if it is empty
-  Standard_Size aPos = theIS.tellg();
+  std::streamsize aPos = theIS.tellg();
   TCollection_AsciiString aSectionTitle;
   theIS >> aSectionTitle;
   if(aSectionTitle.Length() > 0 && aSectionTitle == SHAPESET) {
Index: oce/src/BinTools/BinTools_LocationSet.cxx
===================================================================
--- oce.orig/src/BinTools/BinTools_LocationSet.cxx
+++ oce/src/BinTools/BinTools_LocationSet.cxx
@@ -238,7 +238,7 @@ void  BinTools_LocationSet::Read(Standar
     OCC_CATCH_SIGNALS
     for (i = 1; i <= nbLoc; i++) { 
       
-      const Standard_Byte aTypLoc = IS.get();
+      const Standard_Byte aTypLoc = (Standard_Byte) IS.get();
       if (aTypLoc == 1) {
 	IS >> T;
 	L = T;
Index: oce/src/DDataStd/DDataStd_BasicCommands.cxx
===================================================================
--- oce.orig/src/DDataStd/DDataStd_BasicCommands.cxx
+++ oce/src/DDataStd/DDataStd_BasicCommands.cxx
@@ -1122,12 +1122,12 @@ static Standard_Integer DDataStd_GetUTFt
       cout << "Error: problem with the file stream, rdstate = " <<anOS.rdstate() <<endl;
 #endif
     }
-    unsigned char prefix[4] = {0xEF,0xBB,0xBF, 0x00};
-    anOS.write( (char*)&prefix[0], 3); 
+    unsigned char prefix[4] = {0xEF,0xBB,0xBF, 0x00};
+    anOS.write( reinterpret_cast<const char*>(&prefix[0]), 3); 
     Standard_Integer  n = aES.LengthOfCString();
     Standard_PCharacter aCstr = (Standard_PCharacter) Standard::Allocate(ROUNDMEM(n+1));
     n = aES.ToUTF8CString(aCstr);
-    anOS.write( (char*)&aCstr[0], n); 
+    anOS.write( reinterpret_cast<const char*>(&aCstr[0]), n); 
     anOS.close();
     return 0;
   }
@@ -1160,7 +1160,7 @@ static Standard_Integer DDataStd_SetByte
 	cout << "Bad value = " << ival<< endl;
 	return 1;
       }
-      A->SetValue(i,  (unsigned)ival); 
+      A->SetValue(i,  (Standard_Byte)(unsigned)ival); 
       j++;
     }
     return 0; 
@@ -1232,7 +1232,7 @@ static Standard_Integer DDataStd_ChangeB
       }
     Standard_Integer low = A->Lower(), up = A->Upper();
     if(low <= indx && indx <= up)
-      A->SetValue(indx, (unsigned)ival);
+      A->SetValue(indx, (Standard_Byte)(unsigned)ival);
     else {
       Handle(TColStd_HArray1OfByte) Arr = A->InternalArray();
       Handle(TColStd_HArray1OfByte) arr;
@@ -1244,7 +1244,7 @@ static Standard_Integer DDataStd_ChangeB
 	  arr->SetValue(i, Arr->Value(i));
 	for(i=Arr->Upper()+1; i<= up; i++) {
 	  if(i == up)
-	    arr->SetValue(i, (unsigned)ival);
+	    arr->SetValue(i, (Standard_Byte)(unsigned)ival);
 	  else
 	    arr->SetValue(i, 0);
 	}
@@ -1253,7 +1253,7 @@ static Standard_Integer DDataStd_ChangeB
 	arr = new TColStd_HArray1OfByte(low, up);
 	for(i=low; i< up; i++)
 	  arr->SetValue(i, Arr->Value(i));
-	arr->SetValue(up, (unsigned)ival);
+	arr->SetValue(up, (Standard_Byte)(unsigned)ival);
       }
       A->ChangeArray(arr);
     }
Index: oce/src/Draw/CommandWindow.cxx
===================================================================
--- oce.orig/src/Draw/CommandWindow.cxx
+++ oce/src/Draw/CommandWindow.cxx
@@ -105,7 +105,7 @@ LONG APIENTRY CommandProc(HWND hWnd, UIN
     			hWndEdit = (HWND)GetWindowLong(hWnd, CLIENTWND);          
     			MoveWindow(hWndEdit, 0, 0, LOWORD(lParam), HIWORD(lParam), TRUE);
             // Place the cursor at the end of the buffer
-          index =  SendMessage(hWnd, WM_GETTEXTLENGTH, 0l, 0l);
+          index = (int) SendMessage(hWnd, WM_GETTEXTLENGTH, 0l, 0l);
           SendMessage(hWnd, EM_SETSEL, index, index); 
     			break;
 
@@ -115,7 +115,7 @@ LONG APIENTRY CommandProc(HWND hWnd, UIN
           break;
 
     default :
-					return(DefWindowProc(hWnd, wMsg, wParam, lParam));
+					return LONG(DefWindowProc(hWnd, wMsg, wParam, lParam));
   }
   return(0l);
 }
@@ -176,7 +176,7 @@ int GetCommand(HWND hWnd, char* buffer)
   int again = 1;
   char temp[COMMANDSIZE]="";
 
-  int nbLine = SendMessage(hWnd, EM_GETLINECOUNT, 0l, 0l);
+  int nbLine = (int)SendMessage(hWnd, EM_GETLINECOUNT, 0l, 0l);
   
   int nbChar = 0;
   buffer[0]='\0';
@@ -187,7 +187,7 @@ int GetCommand(HWND hWnd, char* buffer)
       WORD* nbMaxChar = (WORD*)temp;
       *nbMaxChar = COMMANDSIZE-1;
       
-      int nbCharRead = SendMessage(hWnd, EM_GETLINE, nbLine-1, (LPARAM)temp);
+      int nbCharRead = (int)SendMessage(hWnd, EM_GETLINE, nbLine-1, (LPARAM)temp);
       nbChar += nbCharRead ;
       int cmp = strncmp(temp, PROMPT, 10);
       temp[nbCharRead]='\0';
@@ -238,16 +238,16 @@ LONG APIENTRY EditProc(HWND hWnd, UINT w
 									strcpy(console_command, buffer+strlen(PROMPT));
 									console_semaphore = HAS_CONSOLE_COMMAND;
 									  // Purge the buffer
-                  nbline = SendMessage(hWnd, EM_GETLINECOUNT, 0l, 0l);
+                  nbline = (int)SendMessage(hWnd, EM_GETLINECOUNT, 0l, 0l);
 									if(nbline > 200)
 									{
                       nbline = 0;
 											GetCommand(hWnd, buffer);
-                      index = SendMessage(hWnd, EM_LINEINDEX, 100, 0);
+                      index = (int)SendMessage(hWnd, EM_LINEINDEX, 100, 0);
 											SendMessage(hWnd, EM_SETSEL, 0, index);			
 											SendMessage(hWnd, WM_CUT, 0, 0);
                         // Place the cursor at the end of text
-                      index =  SendMessage(hWnd, WM_GETTEXTLENGTH, 0l, 0l);
+                      index =  (int)SendMessage(hWnd, WM_GETTEXTLENGTH, 0l, 0l);
                       SendMessage(hWnd, EM_SETSEL, index, index);                      
 									}
     				      return(0l);
@@ -256,7 +256,7 @@ LONG APIENTRY EditProc(HWND hWnd, UINT w
                   if (IsAlphanumeric((Standard_Character)LOWORD(wParam)))
                   {
                       // Place the cursor at the end of text before display
-                    index =  SendMessage(hWnd, WM_GETTEXTLENGTH, 0l, 0l);
+                    index =  (int)SendMessage(hWnd, WM_GETTEXTLENGTH, 0l, 0l);
                     SendMessage(hWnd, EM_SETSEL, index, index);
                     CallWindowProc(OldEditProc, hWnd, wMsg, wParam, lParam);                    
                     return 0l;
@@ -268,7 +268,7 @@ LONG APIENTRY EditProc(HWND hWnd, UINT w
     if (console_semaphore != WAIT_CONSOLE_COMMAND) 
       return 0l;									
   }
-  return CallWindowProc(OldEditProc, hWnd, wMsg, wParam, lParam);
+  return (LONG)CallWindowProc(OldEditProc, hWnd, wMsg, wParam, lParam);
 }
 #endif
 
Index: oce/src/Draw/Draw_Window.cxx
===================================================================
--- oce.orig/src/Draw/Draw_Window.cxx
+++ oce/src/Draw/Draw_Window.cxx
@@ -1344,9 +1344,9 @@ LONG APIENTRY DrawWindow::DrawProc(HWND
   if (!localObjet)
     {
       if (Draw_IsConsoleSubsystem)
-        return (DefWindowProc(hWnd, wMsg, wParam, lParam));
+        return LONG(DefWindowProc(hWnd, wMsg, wParam, lParam));
       else
-        return(DefMDIChildProc(hWnd, wMsg, wParam, lParam));
+        return LONG(DefMDIChildProc(hWnd, wMsg, wParam, lParam));
     }
 
   PAINTSTRUCT ps;
@@ -1374,9 +1374,9 @@ LONG APIENTRY DrawWindow::DrawProc(HWND
 
   default:
     if (Draw_IsConsoleSubsystem)
-      return (DefWindowProc(hWnd, wMsg, wParam, lParam));
+      return LONG(DefWindowProc(hWnd, wMsg, wParam, lParam));
     else
-      return(DefMDIChildProc(hWnd, wMsg, wParam, lParam));
+      return LONG(DefMDIChildProc(hWnd, wMsg, wParam, lParam));
   }
   return (0l);
 }
Index: oce/src/Draw/MainWindow.cxx
===================================================================
--- oce.orig/src/Draw/MainWindow.cxx
+++ oce/src/Draw/MainWindow.cxx
@@ -67,7 +67,7 @@ LONG APIENTRY WndProc(HWND hWndFrame, UI
 
     default :
       hWndClient = (HWND)GetWindowLong(hWndFrame, CLIENTWND);
-      return(DefFrameProc(hWndFrame, hWndClient, wMsg, wParam, lParam));
+      return LONG(DefFrameProc(hWndFrame, hWndClient, wMsg, wParam, lParam));
   }
   return(0l);
 }
Index: oce/src/Graphic3d/Graphic3d_Group_8.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_Group_8.cxx
+++ oce/src/Graphic3d/Graphic3d_Group_8.cxx
@@ -281,8 +281,8 @@ void Graphic3d_Group::SetGroupPrimitives
   Standard_ShortReal    aPolyFactor, aPolyUnits;
   CTX->PolygonOffsets(aPolyMode, aPolyFactor, aPolyUnits);
   MyCGroup.ContextFillArea.PolygonOffsetMode   = aPolyMode;
-  MyCGroup.ContextFillArea.PolygonOffsetFactor = aPolyFactor;
-  MyCGroup.ContextFillArea.PolygonOffsetUnits  = aPolyUnits;
+  MyCGroup.ContextFillArea.PolygonOffsetFactor = (Standard_ShortReal)aPolyFactor;
+  MyCGroup.ContextFillArea.PolygonOffsetUnits  = (Standard_ShortReal)aPolyUnits;
   // OCC4895 SAN 22/03/04 High-level interface for controlling polygon offsets
 
   int noinsert = 1;
Index: oce/src/IntPatch/IntPatch_PrmPrmIntersection.cxx
===================================================================
--- oce.orig/src/IntPatch/IntPatch_PrmPrmIntersection.cxx
+++ oce/src/IntPatch/IntPatch_PrmPrmIntersection.cxx
@@ -3165,7 +3165,7 @@ void IntPatch_PrmPrmIntersection::PointD
     for(j=0;j<SV1;j++) { 
       aIPD.xIP1(i, j)=-1;
       const gp_Pnt& P=aIPD.xP1(i, j);
-      aIPD.xP1DS2(i, j) = CodeReject(x20,y20,z20,x21,y21,z21,P.X(),P.Y(),P.Z());
+      aIPD.xP1DS2(i, j) = (char) CodeReject(x20,y20,z20,x21,y21,z21,P.X(),P.Y(),P.Z());
       int ix = (int)((P.X()-x0  + dx2 )/dx);
       if(DansGrille(ix)) { 
 	int iy = (int)((P.Y()-y0 + dy2)/dy);
@@ -3183,7 +3183,7 @@ void IntPatch_PrmPrmIntersection::PointD
     for(j=0;j<SV2;j++) { 
       aIPD.xIP2(i, j)=-1;
       const gp_Pnt& P=aIPD.xP2(i, j);
-      aIPD.xP2DS1(i, j) = CodeReject(x10,y10,z10,x11,y11,z11,P.X(),P.Y(),P.Z());
+      aIPD.xP2DS1(i, j) = (char) CodeReject(x10,y10,z10,x11,y11,z11,P.X(),P.Y(),P.Z());
       int ix = (int)((P.X()-x0 + dx2)/dx);
       if(DansGrille(ix)) { 
 	int iy = (int)((P.Y()-y0 + dy2)/dy);
Index: oce/src/Interface/Interface_InterfaceModel.cxx
===================================================================
--- oce.orig/src/Interface/Interface_InterfaceModel.cxx
+++ oce/src/Interface/Interface_InterfaceModel.cxx
@@ -793,7 +793,7 @@ Standard_Boolean Interface_InterfaceMode
       c->SetValue(i,thecategory->Value(i));
     thecategory = c;
   }
-  Standard_Character cval = (val + 32);
+  Standard_Character cval = Standard_Character(val + 32);
   thecategory->SetValue(num,cval);
   return Standard_True;
 }
Index: oce/src/LDOM/LDOM_OSStream.cxx
===================================================================
--- oce.orig/src/LDOM/LDOM_OSStream.cxx
+++ oce/src/LDOM/LDOM_OSStream.cxx
@@ -102,9 +102,9 @@ Standard_CString LDOM_SBuffer::str () co
 //function : overflow()
 //purpose  : redefined virtual
 //=======================================================================
-int LDOM_SBuffer::overflow(int c)
+int LDOM_SBuffer::overflow(signed char c)
 {
-  char cc = c;
+  char cc = (char)c;
   return xsputn(&cc,1);
 }
 
Index: oce/src/LDOM/LDOM_XmlReader.cxx
===================================================================
--- oce.orig/src/LDOM/LDOM_XmlReader.cxx
+++ oce/src/LDOM/LDOM_XmlReader.cxx
@@ -530,7 +530,7 @@ static Standard_Boolean isName (const ch
                                 const char  *& aNameEnd)
 {
   Standard_Boolean aResult;
-  int aCh = aString[0];
+  Standard_Character aCh = aString[0];
   if (IsAlphabetic(aCh) || aCh == '_' || aCh == ':') {
     const char * aPtr = &aString[1];
     while (aPtr < aStringEnd) {
Index: oce/src/OpenGl/OpenGl_AVIWriter.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_AVIWriter.cxx
+++ oce/src/OpenGl/OpenGl_AVIWriter.cxx
@@ -258,7 +258,7 @@ HRESULT OpenGl_AVIWriter::InitMovieCreat
   bmpInfo.bmiHeader.biWidth             = nFrameWidth;
   bmpInfo.bmiHeader.biHeight            = nFrameHeight;
   bmpInfo.bmiHeader.biCompression       = BI_RGB;
-  bmpInfo.bmiHeader.biBitCount          = nBitsPerPixel;
+  bmpInfo.bmiHeader.biBitCount          = (WORD)nBitsPerPixel;
   bmpInfo.bmiHeader.biSize              = sizeof(BITMAPINFOHEADER);
   bmpInfo.bmiHeader.biSizeImage         = (bmpInfo.bmiHeader.biWidth *
                                            bmpInfo.bmiHeader.biHeight*
Index: oce/src/Resource/Resource_ConvertUnicode.c
===================================================================
--- oce.orig/src/Resource/Resource_ConvertUnicode.c
+++ oce/src/Resource/Resource_ConvertUnicode.c
@@ -139,7 +139,7 @@ void Resource_sjis_to_unicode (unsigned
     return ;
   }
 
-  sjis = ((*ph) << 8) | (*pl) ;
+  sjis = (char16)(((*ph) << 8) | (*pl)) ;
   uni  = sjisuni [sjis] ;
   *ph = uni >> 8 ;
   *pl = uni & 0xFF ;
@@ -158,7 +158,7 @@ void Resource_unicode_to_sjis (unsigned
   if ( *ph == 0 && *pl == 0 )
     return ;
 
-  uni  = ((*ph) << 8) | (*pl) ;
+  uni  = (char16)(((*ph) << 8) | (*pl)) ;
   sjis = unisjis [uni] ;
   *ph = sjis >> 8 ;
   *pl = sjis & 0xFF ;
@@ -213,7 +213,7 @@ void Resource_gb_to_unicode (unsigned in
   *ph  = (*ph) & 0x7f ;
   *pl  = (*pl) & 0x7f ;
 
-  gb   = ((*ph) << 8) | (*pl) ;
+  gb   = (char16)(((*ph) << 8) | (*pl)) ;
   uni  = gbuni [gb] ;
   *ph  = uni >> 8 ;
   *pl  = uni & 0xFF ;
@@ -232,7 +232,7 @@ void Resource_unicode_to_gb (unsigned in
   if ( *ph == 0 && *pl == 0 )
     return ;
 
-  uni  = ((*ph) << 8) | (*pl) ;
+  uni  = (char16)(((*ph) << 8) | (*pl)) ;
   gb   = unigb [uni] ;
   if (gb != 0) {
     *ph  = ( gb >> 8   ) | 0x80 ;
Index: oce/src/TCollection/TCollection_AsciiString.cxx
===================================================================
--- oce.orig/src/TCollection/TCollection_AsciiString.cxx
+++ oce/src/TCollection/TCollection_AsciiString.cxx
@@ -424,8 +424,8 @@ void TCollection_AsciiString::AssignCat(
 void TCollection_AsciiString::Capitalize()
 {
   for (int i=0; i < mylength; i++) {
-    if  ( i==0 ) mystring[i] = toupper(mystring[i]);
-    else         mystring[i] = tolower(mystring[i]);    
+    if  ( i==0 ) mystring[i] = (Standard_Character) toupper(mystring[i]);
+    else         mystring[i] = (Standard_Character) tolower(mystring[i]);    
   }
 }
 
@@ -457,7 +457,7 @@ void TCollection_AsciiString::ChangeAll(
       if (mystring[i] == aChar) mystring[i] = NewChar;
   }
   else{
-    Standard_Character anUpperChar = toupper(aChar);
+    Standard_Character anUpperChar = (Standard_Character) toupper(aChar);
     for (int i=0; i < mylength; i++)
       if (toupper(mystring[i]) == anUpperChar) mystring[i] = NewChar;
   }
@@ -1142,7 +1142,7 @@ Standard_Integer TCollection_AsciiString
 void TCollection_AsciiString::LowerCase()
 {
   for (int i=0; i < mylength; i++)
-    mystring[i] = tolower(mystring[i]);
+    mystring[i] = (Standard_Character) tolower(mystring[i]);
 }
 
 //------------------------------------------------------------------------
@@ -1244,7 +1244,7 @@ void TCollection_AsciiString::RemoveAll(
       if (mystring[i] != what) mystring[c++] = mystring[i];
   }
   else {
-    Standard_Character upperwhat = toupper(what);
+    Standard_Character upperwhat = (Standard_Character) toupper(what);
     for (int i=0; i < mylength; i++) { 
       if (toupper(mystring[i]) != upperwhat) mystring[c++] = mystring[i];
     }
@@ -1837,7 +1837,7 @@ void TCollection_AsciiString::Trunc(cons
 void TCollection_AsciiString::UpperCase()
 {
   for (int i=0; i < mylength; i++)
-    mystring[i] = toupper(mystring[i]);
+    mystring[i] = (Standard_Character) toupper(mystring[i]);
 }
 
 //------------------------------------------------------------------------
Index: oce/src/ViewerTest/ViewerTest_ViewerCommands.cxx
===================================================================
--- oce.orig/src/ViewerTest/ViewerTest_ViewerCommands.cxx
+++ oce/src/ViewerTest/ViewerTest_ViewerCommands.cxx
@@ -1981,7 +1981,7 @@ static int VColorScale (Draw_Interpretor
   {
     aCS->SetPosition( X , Y );
     aCS->SetHeight( 0.95) ;
-    aCS->SetTextHeight( textHeight );
+    aCS->SetTextHeight( (Standard_Integer) textHeight );
     aCS->SetRange( minRange , maxRange );
     aCS->SetNumberOfIntervals( numIntervals );
     aCS->SetLabelPosition( position );
Index: oce/src/Voxel/Voxel_BooleanOperation.cxx
===================================================================
--- oce.orig/src/Voxel/Voxel_BooleanOperation.cxx
+++ oce/src/Voxel/Voxel_BooleanOperation.cxx
@@ -163,7 +163,7 @@ Standard_Boolean Voxel_BooleanOperation:
 	    Standard_Integer value = value1 - value2;
 	    if (value < 0)
 	      value = 0;
-	    theVoxels1.Set(ix, iy, iz, value);
+	    theVoxels1.Set(ix, iy, iz, (Standard_Byte)value);
 	  }
 	}
       }
Index: oce/src/Voxel/Voxel_Reader.cxx
===================================================================
--- oce.orig/src/Voxel/Voxel_Reader.cxx
+++ oce/src/Voxel/Voxel_Reader.cxx
@@ -211,7 +211,7 @@ Standard_Boolean Voxel_Reader::ReadBoolA
 	((Standard_Byte**)((Voxel_DS*)myBoolVoxels)->myData)[i1] = 
 	  (Standard_Byte*) calloc(8/*number of bytes in slice*/, sizeof(Standard_Byte));
       }
-      (((Standard_Byte**)((Voxel_DS*)myBoolVoxels)->myData)[i1])[i2] = value;
+      (((Standard_Byte**)((Voxel_DS*)myBoolVoxels)->myData)[i1])[i2] = (Standard_Byte)value;
     }
   }
 
@@ -288,7 +288,7 @@ Standard_Boolean Voxel_Reader::ReadColor
 	((Standard_Byte**)((Voxel_DS*)myColorVoxels)->myData)[i1] = 
 	  (Standard_Byte*) calloc(32/*number of bytes in slice*/, sizeof(Standard_Byte));
       }
-      (((Standard_Byte**)((Voxel_DS*)myColorVoxels)->myData)[i1])[i2] = value;
+      (((Standard_Byte**)((Voxel_DS*)myColorVoxels)->myData)[i1])[i2] = (Standard_Byte)value;
     }
   }
 
@@ -422,7 +422,7 @@ Standard_Boolean Voxel_Reader::ReadBoolB
 	((Standard_Byte**)((Voxel_DS*)myBoolVoxels)->myData)[i1] = 
 	  (Standard_Byte*) calloc(8/*number of bytes in slice*/, sizeof(Standard_Byte));
       }
-      (((Standard_Byte**)((Voxel_DS*)myBoolVoxels)->myData)[i1])[i2] = value;
+      (((Standard_Byte**)((Voxel_DS*)myBoolVoxels)->myData)[i1])[i2] = (Standard_Byte)value;
     }
   }
 
@@ -477,7 +477,7 @@ Standard_Boolean Voxel_Reader::ReadColor
 	((Standard_Byte**)((Voxel_DS*)myColorVoxels)->myData)[i1] = 
 	  (Standard_Byte*) calloc(32/*number of bytes in slice*/, sizeof(Standard_Byte));
       }
-      (((Standard_Byte**)((Voxel_DS*)myColorVoxels)->myData)[i1])[i2] = value;
+      (((Standard_Byte**)((Voxel_DS*)myColorVoxels)->myData)[i1])[i2] = (Standard_Byte)value;
     }
   }
 
Index: oce/src/VrmlData/VrmlData_ShapeConvert.cxx
===================================================================
--- oce.orig/src/VrmlData/VrmlData_ShapeConvert.cxx
+++ oce/src/VrmlData/VrmlData_ShapeConvert.cxx
@@ -82,7 +82,7 @@ void VrmlData_ShapeConvert::AddShape (co
     char buf[2048], * optr = &buf[0];
     char * eptr = &buf[sizeof(buf)-1];
     for (const char * ptr = theName;; ptr++) {
-      int sym = *ptr;
+      char sym = *ptr;
       if (sym == '\0' || sym == '\n' || sym == '\r') {
         * optr = '\0';
         break;
