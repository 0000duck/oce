Index: oce/src/NCollection/NCollection_IncAllocator.cxx
===================================================================
--- oce.orig/src/NCollection/NCollection_IncAllocator.cxx
+++ oce/src/NCollection/NCollection_IncAllocator.cxx
@@ -90,7 +90,7 @@ Standard_EXPORT void IncAllocator_SetDeb
  * numbering of allocators.
  */
 //=======================================================================
-#ifdef _DEBUG
+#if defined(_DEBUG) && defined(DEB)
 static Standard_Size CurrentID = 0;
 static Standard_Size CATCH_ID = 0;
 
Index: oce/src/OSD/OSD_Path.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Path.cxx
+++ oce/src/OSD/OSD_Path.cxx
@@ -435,86 +435,6 @@ void OSD_Path::SetValues(const TCollecti
 }
 
 
-static Standard_Boolean Analyse_VMS(const TCollection_AsciiString& name){
- if (name.Search("/") != -1)
-  return(Standard_False);
- if (name.Search("@") != -1)
-  return(Standard_False);
- if (name.Search("\\") != -1)
-  return(Standard_False);
-
-
- return Standard_True;
-}
-
-static Standard_Boolean Analyse_DOS(const TCollection_AsciiString& name){
-
-// if (name.Search("$") != -1)
-//  return(Standard_False);
-// if (name.Search(" ") != -1)
-//  return(Standard_False);
-
- if (name.Search("/") != -1)
-  return(Standard_False);
- if (name.Search(":") != -1)
-  return(Standard_False);
-  if (name.Search("*") != -1)
-  return(Standard_False);
- if (name.Search("?") != -1)
-  return(Standard_False);
- if (name.Search(".") != name.SearchFromEnd("."))
-  return(Standard_False);
- if (name.Search("\"") != -1)
-  return(Standard_False);
- if (name.Search("<") != -1)
-  return(Standard_False);
- if (name.Search(">") != -1)
-  return(Standard_False);
- if (name.Search("|") != -1)
-  return(Standard_False);
-   
- return Standard_True;
- // Rajouter les tests sur les noms de 8 caracteres au maximum et
- // l'extension de 3 caracteres.
-}
-
-static Standard_Boolean Analyse_MACOS(const TCollection_AsciiString& name){
- Standard_Integer i = name.Search(":");
- Standard_Integer l = name.Length();
-
- if (i == -1)
-  if (l > 31)
-    return(Standard_False);
-  else 
-    return(Standard_True);
- else
-   return(Standard_True);
-}
-
-static Standard_Boolean Analyse_UNIX(const TCollection_AsciiString& /*name*/)
-{
-// if (name.Search("$") != -1)  Unix filename can have a "$" (LD)
-//  return(Standard_False);
-
-// all characters are allowed in UNIX file name, except null '\0' and slash '/'
-
-// if (name.Search("[") != -1)
-//  return(Standard_False);
-// if (name.Search("]") != -1)
-//  return(Standard_False);
-// if (name.Search("\\") != -1)
-//  return(Standard_False);
-// if (name.Search(" ") != -1) 
-//  return(Standard_False);
-
-  return(Standard_True);
-
-}
-
-
-
-
-
 Standard_Boolean OSD_Path::IsValid(const TCollection_AsciiString& aDependentName,
                                    const OSD_SysType aSysType)const{
  if (aDependentName.Length()==0) return(Standard_True);
