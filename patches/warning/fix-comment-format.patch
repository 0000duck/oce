From cbd987afc8d3c5220e961416d774554d4e469090 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 28 Jul 2011 15:12:55 +0200
Subject: [PATCH 8/9] [warning-fix][comment-format]

Fix */ within comment.
---
 src/V3d/V3d_View_1.cxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

Index: oce/drv/ExprIntrp/lex.ExprIntrp.c
===================================================================
--- oce.orig/drv/ExprIntrp/lex.ExprIntrp.c
+++ oce/drv/ExprIntrp/lex.ExprIntrp.c
@@ -2044,7 +2044,6 @@ static yyconst yy_state_type yy_NUL_tran
 #define YY_RESTORE_YY_MORE_OFFSET
 char *yytext;
 #define INITIAL 0
-/* 
 /* Copyright (c) 1997-1999 Matra Datavision
  Copyright (c) 1999-2012 OPEN CASCADE SAS
 
Index: oce/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
@@ -997,7 +997,7 @@ int mma1fer_(integer *,//ndimen,
 /*               0 = constraints of passage to limits (i.e. C0), */
 /*               1 = C0 + constraintes of 1st derivatives (i.e. C1), */
 /*               2 = C1 + constraintes of 2nd derivatives (i.e. C2). */
-/*     NDGJAC: Degree of development in series to use for the calculation  
+/*     NDGJAC: Degree of development in series to use for the calculation */
 /*             in the base of Jacobi. */
 /*     CRVJAC: Table of coeff. of the curve of approximation in the */
 /*             base of Jacobi. */
@@ -1022,7 +1022,7 @@ int mma1fer_(integer *,//ndimen,
 /*             =-1, warning, required tolerance can't be */
 /*                  met with coefficients NFCLIM. */
 /*             = 1, order of constraints (IORDRE) is not within authorised values */
-/*                  
+
 
 /*     COMMONS USED : */
 /*     ------------------ */
@@ -1204,7 +1204,7 @@ int AdvApp2Var_ApproxF2var::mma1her_(con
 
 /*     DESCRIPTION/NOTES/LIMITATIONS : */
 /*     ----------------------------------- */
-/*     The part of HERMIT(*,2*i+j) table where  j=1 or 2 and i=0 to IORDRE, 
+/*     The part of HERMIT(*,2*i+j) table where  j=1 or 2 and i=0 to IORDRE, */
 /*     contains the coefficients of the polynom of degree 2*IORDRE+1 */
 /*     such as ALL values in -1 and in +1 of this polynom and its */
 /*     derivatives till order of derivation IORDRE are NULL, */
@@ -1351,14 +1351,14 @@ int mma1jak_(integer *ndimen,
 /*     ------------------ */
 /*     NDIMEN: Total dimension of the space (sum of dimensions */
 /*             of sub-spaces) */
-/*     NBROOT: Nb of points of discretization of the iso, extremities not 
+/*     NBROOT: Nb of points of discretization of the iso, extremities not */
 /*             included. */
 /*     IORDRE: Order of constraint at the extremities of the boundary */
 /*              -1 = no constraints, */
 /*               0 = constraints of passage of limits (i.e. C0), */
 /*               1 = C0 + constraints of 1st derivatives (i.e. C1), */
 /*               2 = C1 + constraints of 2nd derivatives (i.e. C2). */
-/*     NDGJAC: Degree of development in series to be used for calculation in the  
+/*     NDGJAC: Degree of development in series to be used for calculation in the */
 /*             base of Jacobi. */
 
 /*     OUTPUT ARGUMENTS : */
@@ -1907,7 +1907,7 @@ int AdvApp2Var_ApproxF2var::mma2ac2_(con
 /*     ------------------- */
 /*   PATJAC: Table of coefficients of the polynom P(u,v) by approximation */
 /*           of F(u,v) WITH taking into account of constraints. */
-/* > *//*
+
 
 
 /* > */
@@ -2349,7 +2349,7 @@ int mma2cd1_(integer *ndimen,
 */
 /*     NBPNTV: Nb of INTERNAL  parameters of discretisation by V. */
 /*             This is also the nb of root of Legendre polynom where discretization is done. */
-/*     VROOTL: Table of discretization parameters on (-1,1) by V. 
+/*     VROOTL: Table of discretization parameters on (-1,1) by V. */
 /*     IORDRU: Order of constraint imposed at the extremities of iso-V */
 /*             = 0, calculate the extremities of iso-V */
 /*             = 1, calculate, additionally, the 1st derivative in the direction of iso-V */
@@ -2706,7 +2706,7 @@ int mma2cd2_(integer *ndimen,
 */
 /*     NBPNTV: Nb of INTERNAL  parameters of discretisation by V. */
 /*             This is also the nb of root of Legendre polynom where discretization is done. */
-/*     VROOTL: Table of discretization parameters on (-1,1) by V. 
+/*     VROOTL: Table of discretization parameters on (-1,1) by V. */
 /*     IORDRV: Order of constraint imposed at the extremities of iso-V */
 /*             = 0, calculate the extremities of iso-V */
 /*             = 1, calculate, additionally, the 1st derivative in the direction of iso-V */
@@ -3350,7 +3350,7 @@ int AdvApp2Var_ApproxF2var::mma2cdi_( in
 */
 /*     NBPNTV: Nb of INTERNAL  parameters of discretisation by V. */
 /*             This is also the nb of root of Legendre polynom where discretization is done. */
-/*     VROOTL: Table of parameters of discretisation ON (-1,1) by V. 
+/*     VROOTL: Table of parameters of discretisation ON (-1,1) by V. */
 
 /*     IORDRV: Order of constraint imposed at the extremities of iso-U */
 /*             = 0, calculate the extremities of iso-U */
@@ -4320,7 +4320,7 @@ L300:
 /* L320: */
 	}
 
-/* ----- Contribution of calculated terms to the approximation error
+/* ----- Contribution of calculated terms to the approximation error */
 /* for terms (I,J) with MINU <= I <= MAXU, MINV <= J <= MAXV. */
 
 	idim = 1;
@@ -4504,7 +4504,7 @@ L600:
 /* L700: */
 	}
 
-/* ----- Contribution of calculated terms to the approximation error
+/* ----- Contribution of calculated terms to the approximation error */
 /* for  terms (I,J) with MINU <= I <= MAXU, MINV <= J <= MAXV */
 
 	idim = 1;
@@ -4687,7 +4687,7 @@ int mma2cfu_(integer *ndujac,
 /*     FUNCTION : */
 /*     ---------- */
 /*     Calculate the terms connected to degree NDUJAC by U of the polynomial approximation */
-/*     of function F(u,v), starting from its discretisation 
+/*     of function F(u,v), starting from its discretisation */
 /*     on the roots of Legendre polynom of degree */
 /*     NBPNTU by U and NBPNTV by V. */
 
@@ -4817,7 +4817,7 @@ int mma2cfu_(integer *ndujac,
 	}
     }
 
-/* ------- Add terms connected to the supplementary root (0.D0) ------ 
+/* ------- Add terms connected to the supplementary root (0.D0) ------ */
 /* ----------- of Legendre polynom of uneven degree NBPNTU ----------- 
 */
 /* --> Only even NDUJAC terms are modified as GSSUTB(0) = 0 */
@@ -4902,7 +4902,7 @@ int mma2cfv_(integer *ndvjac,
 
 /*     FUNCTION : */
 /*     ---------- */
-/*     Calculate the coefficients of polynomial approximation of F(u,v) 
+/*     Calculate the coefficients of polynomial approximation of F(u,v) */
 /*     of degree NDVJAC by V and of degree by U varying from MINDGU to MAXDGU. 
 */
 
@@ -4914,7 +4914,7 @@ int mma2cfv_(integer *ndvjac,
 /*     ------------------ */
 
 /*   NDVJAC: Degree of the polynom of approximation by V. */
-/*           The representation in the orthogonal base starts from degre 0. 
+/*           The representation in the orthogonal base starts from degre 0. */
 	     /* The polynomial base is the base of Jacobi of order -1 */
 /*           (Legendre), 0, 1 or 2 */
 /*   MINDGU: Degree minimum by U of coeff. to calculate. */
@@ -4924,9 +4924,9 @@ int mma2cfv_(integer *ndvjac,
 /*           by Gauss method. It is reqired that NBPNTV = 30, 40, 50 or 61 and NDVJAC < NBPNTV. */
 /*   GSSVTB: Table of coefficients of integration by Gauss method */
 /*           by V for NDVJAC fixed: j varies from 0 to NBPNTV/2. */
-/*   CHPAIR: Table of terms connected to degrees from MINDGU to MAXDGU by U to 
+/*   CHPAIR: Table of terms connected to degrees from MINDGU to MAXDGU by U to */
 /*           calculate the coeff. of approximation of EVEN degree NDVJAC by V. */
-/*   CHIMPR: Table of terms connected to degrees from MINDGU to MAXDGU by U to
+/*   CHIMPR: Table of terms connected to degrees from MINDGU to MAXDGU by U to */
 /*           calculate the coeff. of approximation of UNEVEN degree NDVJAC by V. */
 
 /*     OUTPUT ARGUMENTS : */
@@ -6257,7 +6257,7 @@ int AdvApp2Var_ApproxF2var::mma2fnc_(int
 /*     ERRMAX: Table of MAX errors (sub-space by sub-space) */
 /*             committed in the approximation of FONCNP by NBCRBE curves. */
 /*     ERRMOY: Table of AVERAGE errors (sub-space by sub-space) */
-/*             committed in the approximation of FONCNP by NBCRBE curves.
+/*             committed in the approximation of FONCNP by NBCRBE curves. */
 /*     IERCOD: Error code: */
 /*             -1 = ERRMAX > EPSAPR for at least one sub-space. */
 /*                  (the resulting curves of at least mathematic degree NCFLIM-1 */
@@ -7780,7 +7780,7 @@ int AdvApp2Var_ApproxF2var::mmapptt_(con
 /*     FUNCTION : */
 /*     ---------- */
 /*        Load the elements required for integration by */
-/*        Gauss method to obtain the coefficients in the base of
+/*        Gauss method to obtain the coefficients in the base of */
 /*        Legendre of the approximation by the least squares of a */
 /*        function. The elements are stored in commons MMAPGSS */
 /*        (case without constraint), MMAPGS0 (constraints C0), MMAPGS1 */
@@ -7793,7 +7793,7 @@ int AdvApp2Var_ApproxF2var::mmapptt_(con
 /*     INPUT ARGUMENTS  : */
 /*     ------------------ */
 /*        NDGJAC : Max degree of the polynom of approximation. */
-/*                 The representation in orthogonal base goes from degree
+/*                 The representation in orthogonal base goes from degree */
 /*                 0 to degree NDGJAC-2*(JORDRE+1). The polynomial base */
 /*                 is the base of Jacobi of order -1 (Legendre), 0, 1 and 2 */
 /*        NBPNTS : Degree of the polynom of Legendre on the roots which of */
Index: oce/src/AdvApp2Var/AdvApp2Var_MathBase.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_MathBase.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_MathBase.cxx
@@ -735,7 +735,7 @@ int mmaper2_(integer *ncofmx,
 /*     KEYWORDS : */
 /*     ----------- */
 /*        JACOBI, POLYGON, APPROXIMATION, ERROR. */
-/*
+
 /*  INPUT ARGUMENTS : */
 /*     ------------------ */
 /*        NCOFMX : Max. degree of the curve. */
@@ -1792,7 +1792,7 @@ int mmatvec_(integer *nligne,
 /*       GNSTOC: Number of coefficients in the profile of matrix GMATRI */
 
 /*       GPOSIT: Table of positioning of terms of storage */
-/*               GPOSIT(1,I) contains the number of terms-1 on the line I 
+/*               GPOSIT(1,I) contains the number of terms-1 on the line I */
 /*               in the profile of the matrix. */
 /*              GPOSIT(2,I) contains the index of storage of diagonal term*/
 /*               of line I */
@@ -1803,7 +1803,7 @@ int mmatvec_(integer *nligne,
 /*       GMATRI : Matrix of constraints in form of profile */
 /*       VECIN  : Input vector */
 /*       DEBLIG : Line indexusing which the vector matrix is calculated */
-/*               
+
 /*     OUTPUT ARGUMENTS */
 /*     --------------------- */
 /*       VECOUT : VECTOR PRODUCT */
@@ -3322,6 +3322,7 @@ int mmdrvcb_(integer *ideriv,
   
 
 /* ***********************************************************************
+*/
 /*     FUNCTION : */
 /*     ---------- */
 
@@ -3730,7 +3731,7 @@ int AdvApp2Var_MathBase::mmeps1_(doubler
 
 /*     DEMSCRIPTION/NOTES/LIMITATIONS : */
 /*     ----------------------------------- */
-/*       INITIALISATION   :  profile , **VIA MPRFTX** at input in stream
+/*       INITIALISATION   :  profile , **VIA MPRFTX** at input in stream */
 /*       loading of default values of the profile in MPRFTX at input */
 /*       in stream. They are preserved in local variables of MPRFTX */
 
@@ -3811,7 +3812,7 @@ int mmexthi_(integer *ndegre,
 /*     DESCRIPTION/NOTES/LIMITATIONS : */
 /*     ----------------------------------- */
 /*     ATTENTION: The condition on NDEGRE ( 2 <= NDEGRE <= 61) is not  */
-/*     tested. The caller should make the test.
+/*     tested. The caller should make the test. */
 
 /*   Name of the routine */
 
@@ -4414,7 +4415,7 @@ int AdvApp2Var_MathBase::mmfmcar_(intege
 
 /* --->    The max number of coeff by u and v of PATOLD is 61 */
 
-/* --->    If NCOEFU < NCOFMX, the data is compressed by MMFMCA9 before
+/* --->    If NCOEFU < NCOFMX, the data is compressed by MMFMCA9 before */
 /*        limitation by v to get time during the execution */
 /*        of MMARC41 that follows (the square is processed as a curve of 
 */
@@ -4781,7 +4782,7 @@ int AdvApp2Var_MathBase::mmfmtb1_(intege
 
 /*     OUTPUT ARGUMENTS : */
 /*     ------------------- */
-/*     TABLE2: Table of reals by two dimensions, containing the transposition 
+/*     TABLE2: Table of reals by two dimensions, containing the transposition */
 /*             of the rectangular table TABLE1. */
 /*     ISIZE2: Nb of useful elements of TABLE2 on the 1st dimension */
 /*     JSIZE2: Nb of useful elements of TABLE2 on the 2nd dimension */
@@ -4919,7 +4920,7 @@ int AdvApp2Var_MathBase::mmgaus1_(intege
 /*      between limits XD and XF . */
 /*      The function should be calculated for any value */
 /*      of the variable in the given interval.. */
-/*      The method GAUSS-LEGENDRE is used. 
+/*      The method GAUSS-LEGENDRE is used. */
 /*      For explications refer to the book : */
 /*          Complements de mathematiques a l'usage des Ingenieurs de */
 /*          l'electrotechnique et des telecommunications. */
@@ -4991,7 +4992,7 @@ int AdvApp2Var_MathBase::mmgaus1_(intege
 /*      If you wish to calculate the integral with a given precision, */
 /*      loop on k varying from 1 to 10 and test the difference of 2
 */
-/*      consecutive iterations. Stop the loop if this difference is less that 
+/*      consecutive iterations. Stop the loop if this difference is less that */
 /*      an epsilon value set to 10E-6 for example. */
 /*      If S1 and S2 are 2 successive iterations, test following this example :
  */
@@ -5163,7 +5164,7 @@ int mmherm0_(doublereal *debfin,
 
 /*     FUNCTION : */
 /*     ---------- */
-/*      Used to STORE  coefficients of Hermit interpolation polynoms
+/*      Used to STORE  coefficients of Hermit interpolation polynoms */
 
 /*     KEYWORDS : */
 /*     ----------- */
@@ -5455,7 +5456,7 @@ int mmherm1_(doublereal *debfin,
 /*              there is no choice : ORDRMX should be equal to the value */
 /*              of PARAMETER IORDMX of INCLUDE MMCMHER, or 2 for the moment */
 
-/*       IORDRE (2) : Orders of constraints in each corresponding parameter DEBFIN(I) 
+/*       IORDRE (2) : Orders of constraints in each corresponding parameter DEBFIN(I) */
 /*              should be between -1 (no constraints) and ORDRMX. */
 
 
@@ -5501,7 +5502,7 @@ int mmherm1_(doublereal *debfin,
 
 /*     FUNCTION : */
 /*     ---------- */
-/*      Serves to STORE the coefficients of Hermit interpolation polynoms
+/*      Serves to STORE the coefficients of Hermit interpolation polynoms */
 
 /*     KEYWORDS : */
 /*     ----------- */
@@ -5937,7 +5938,6 @@ L9999:
 /*        . Level of de debug = 3 */
 
 
-/*
 /*     DECLARATIONS , CONTROL OF INPUT ARGUMENTS , INITIALIZATION */
 /* ***********************************************************************
  */
@@ -6367,7 +6367,7 @@ int mmloncv_(integer *ndimax,
 /*     FUNCTION : Length of an arc of curve on a given interval */
 /*     ---------- for a function the mathematic representation  */
 /*                which of is a multidimensional polynom. */
-/*      The polynom is a set of polynoms the coefficients which of are ranked
+/*      The polynom is a set of polynoms the coefficients which of are ranked */
 	/*  in a table with 2 indices, each line relative to 1 polynom. */
 /*      The polynom is defined by its coefficients ordered by increasing 
 *       power of the variable. */
@@ -7350,9 +7350,9 @@ L9999:
 /*       NISTOC: NUMBER OF COEFFICIENTS IN THE PROFILE */
 /*       DIMMAT: NUMBER OF LINE OF THE SYMMETRIC SQUARE MATRIX */
 /*       APOSIT: TABLE OF POSITIONING OF STORAGE TERMS */
-/*               APOSIT(1,I) CONTAINS THE NUMBER OF TERMES-1 ON LINE 
+/*               APOSIT(1,I) CONTAINS THE NUMBER OF TERMES-1 ON LINE */
 /*               I IN THE PROFILE OF THE MATRIX */
-/*               APOSIT(2,I) CONTAINS THE INDEX OF STORAGE OF DIAGONAL TERM 
+/*               APOSIT(2,I) CONTAINS THE INDEX OF STORAGE OF DIAGONAL TERM */
 /*               OF LINE I */
 
 
@@ -7530,7 +7530,7 @@ L9999:
 /*      GNSTOC: NOMBERS OF TERMS IN THE PROFILE OF THE MATRIX OF CONSTRAINTS */
 /*      MNSTOC: NOMBERS OF TERMS IN THE PROFILE OF THE MATRIX M= G H t(G) */
 /*              where H IS THE HESSIAN MATRIX AND G IS THE MATRIX OF CONSTRAINTS */
-/*      MATSYH: TRIANGULAR INFERIOR PART OF THE HESSIAN MATRIX
+/*      MATSYH: TRIANGULAR INFERIOR PART OF THE HESSIAN MATRIX */
 /*              IN FORM OF PROFILE */
 /*      MATSYG: MATRIX OF CONSTRAINTS IN FORM OF PROFILE */
 /*      VECSYH: VECTOR OF THE SECOND MEMBER ASSOCIATED TO MATSYH */
@@ -7549,11 +7549,11 @@ L9999:
 /*      GPOSIT: TABLE OF POSITIONING OF THE MATRIX OF CONSTRAINTS */
 /*              GPOSIT(1,I) CONTAINS THE NUMBER OF TERMS OF LINE I */
 /*                          WHICH ARE IN THE PROFILE */
-/*              GPOSIT(2,I) CONTAINS THE INDEX OF STORAGE OF THE LAST TERM 
+/*              GPOSIT(2,I) CONTAINS THE INDEX OF STORAGE OF THE LAST TERM */
 /*                          OF LINE I WHICH IS IN THE PROFILE */
 /*              GPOSIT(3,I) CONTAINS THE NUMBER OF COLUMN CORRESPONDING */
 /*                          TO THE FIRST TERM OF LINE I WHICH IS IN THE PROFILE */
-/*      MMPOSUI, MPOSIT: SAME STRUCTURE AS HPOSUI, BUT FOR MATRIX 
+/*      MMPOSUI, MPOSIT: SAME STRUCTURE AS HPOSUI, BUT FOR MATRIX */
 /*              M=G H t(G) */
 
 
@@ -8200,7 +8200,7 @@ int mmrslw_(integer *normax,
     goto L9999;
 
 /* ------If the absolute value of a pivot is smaller than -------- 
-/* ---------- EPSPIV: return the code of error. ------------ 
+   ---------- EPSPIV: return the code of error. ------------ 
 */
 
 L9900:
@@ -8613,7 +8613,7 @@ L1000:
     goto L1000;
 
 /* -------------- TEST IF TPARAM IS NOT A VALUE --------- 
-/* ------------------------OF TABLEV UP TO EPSIL ---------------------- 
+   ------------------------OF TABLEV UP TO EPSIL ---------------------- 
 */
 
 L2000:
@@ -8683,9 +8683,9 @@ int mmtmave_(integer *nligne,
 /*       GPOSIT: TABLE OF POSITIONING OF TERMS OF STORAGE */
 /*               GPOSIT(1,I) CONTAINS THE NUMBER of TERMS-1 ON LINE 
                I IN THE PROFILE OF THE MATRIX */
-/*              GPOSIT(2,I) CONTAINS THE INDEX OF STORAGE OF THE DIAGONAL TERM
+/*              GPOSIT(2,I) CONTAINS THE INDEX OF STORAGE OF THE DIAGONAL TERM */
 /*               OF LINE I */
-/*               GPOSIT(3,I) CONTAINS THE INDEX COLUMN OF THE FIRST TERM OF 
+/*               GPOSIT(3,I) CONTAINS THE INDEX COLUMN OF THE FIRST TERM OF */
 /*                           PROFILE OF LINE I */
 /*       GNSTOC : NOMBER OF TERM IN THE PROFILE OF GMATRI */
 /*       GMATRI : MATRIX OF CONSTRAINTS IN FORM OF PROFILE */
@@ -9425,7 +9425,7 @@ int mmtrpj6_(integer *ncofmx,
 
 /*     OUTPUT ARGUMENTS : */
 /*     ------------------- */
-/*        YCVMAX : Auxiliary table (max error on each dimension). 
+/*        YCVMAX : Auxiliary table (max error on each dimension). */
 /*        EPSTRC : Precision of the approximation. */
 /*        NCFNEW : Degree +1 of the resulting polynom. */
 
@@ -9677,7 +9677,7 @@ L9999:
 /*     ----------------------------------- */
 /*     VECTOR and VECNRM can be identic. */
 
-/*     The norm of vector is calculated and each component is divided by
+/*     The norm of vector is calculated and each component is divided by */
 /*     this norm. After this it is checked if all componentes of the */
 /*     vector except for one cost 0 with machine precision. In */
 /*     this case the quasi-null components are set to 0.D0. */
@@ -10717,7 +10717,7 @@ int mvgaus0_(integer *kindic,
 /*      to 40 directly (ATTENTION to overload - to avoid it, */
 /*      preview UROOTL and HILTAB dimensioned at least to 20). */
 
-/*      The value of coefficients was calculated with quadruple precision 
+/*      The value of coefficients was calculated with quadruple precision */
 /*      by JJM with help of GD. */
 /*      Checking of roots was done by GD. */
 
Index: oce/src/AdvApp2Var/AdvApp2Var_SysBase.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_SysBase.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_SysBase.cxx
@@ -1527,7 +1527,7 @@ int mamdlng_(char *,//cmdlng,
 /*        CHL10N*4 : LIST OF POSSIBLE VALUES OF THE LOCALIZATION : */
 /*                   'FRA ','DEU ','ENG ', 'JIS ' */
 
-/*     B) CHCOUR*4, CHPREC*4, CHSUIV*4 : CURRENT, PREVIOUS AND NEXT APPLICATION
+/*     B) CHCOUR*4, CHPREC*4, CHSUIV*4 : CURRENT, PREVIOUS AND NEXT APPLICATION */
 
 /*     C) CHMODE*4 : CURRENT MODE (NOT USED) */
 
@@ -1716,7 +1716,7 @@ int maoverf_(integer *nbentr,
 /*                  The idea is to minimize the number of calls */
 /*                to the routine of transfer of numeric zones, */
 /*   ----------   for the reason of performance. */
-/*  !  buffer  !    For this a table of NLONGR 
+/*  !  buffer  !    For this a table of NLONGR */
 /*  !__________!  DOUBLE PRECISIONs is reserved. This buffer is initialized by */
 /*  <---------->  the instruction DATA. The overflow is accessed in a  */
 /*    NLONGR*8    specific COMMON not by a routine as */
Index: oce/src/ExprIntrp/ExprIntrp.lex
===================================================================
--- oce.orig/src/ExprIntrp/ExprIntrp.lex
+++ oce/src/ExprIntrp/ExprIntrp.lex
@@ -1,4 +1,3 @@
-/* 
 /* Copyright (c) 1997-1999 Matra Datavision
  Copyright (c) 1999-2012 OPEN CASCADE SAS
 
Index: oce/src/Extrema/Extrema_ExtElC.cxx
===================================================================
--- oce.orig/src/Extrema/Extrema_ExtElC.cxx
+++ oce/src/Extrema/Extrema_ExtElC.cxx
@@ -403,7 +403,6 @@ Extrema_ExtElC::Extrema_ExtElC (const gp
   //
   aTol=1.e-12;
   //
-  /*
   if(fabs(A5) <= aTol) {
     A5 = 0.;
   }
Index: oce/src/V3d/V3d_View_1.cxx
===================================================================
--- oce.orig/src/V3d/V3d_View_1.cxx
+++ oce/src/V3d/V3d_View_1.cxx
@@ -21,7 +21,7 @@
      ----------
         File V3d_View_1.cxx :
 
-
+************************************************************************/
 /*----------------------------------------------------------------------*/
 /*
  * Includes
Index: oce/src/math/math_FunctionSetRoot.cxx
===================================================================
--- oce.orig/src/math/math_FunctionSetRoot.cxx
+++ oce/src/math/math_FunctionSetRoot.cxx
@@ -65,11 +65,11 @@
 
 #define FSR_DEBUG(arg)
 // Uncomment the following code to have debug output to cout 
-/* * /
+/*
 static Standard_Boolean mydebug = Standard_False;
 #undef FSR_DEBUG
 #define FSR_DEBUG(arg) {if (mydebug) { cout << arg << endl; }}
-/* */
+*/
 
 class MyDirFunction : public math_Function
 {
