From d82b5a97cbabfa47bde15ab41dbeb9912cc5b5a3 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sat, 19 May 2012 16:13:54 +0200
Subject: [PATCH] [warning-fix][implicit-bool-conversion] Fixes warnings like
 implicit 'conversion' conversion from 'type1' to 'bool'
 (performance warning)

---
 src/Draw/MainWindow.cxx                   |    2 +-
 src/OpenGl/OpenGl_GraduatedTrihedron.cxx  |    6 +++---
 src/OpenGl/OpenGl_GraphicDriver_Layer.cxx |    4 ++--
 src/OpenGl/OpenGl_Text.cxx                |    2 +-
 src/Standard/Standard.cxx                 |   12 ++++++------
 5 files changed, 13 insertions(+), 13 deletions(-)

Index: oce/src/Draw/MainWindow.cxx
===================================================================
--- oce.orig/src/Draw/MainWindow.cxx
+++ oce/src/Draw/MainWindow.cxx
@@ -83,7 +83,7 @@ BOOL CreateProc(HWND hWndFrame)
   HWND hWnd;
 
   // Save hWnd in the main window in extra memory in 0
-  if (hWnd = CreateMDIClientWindow(hWndFrame))
+  if ((hWnd = CreateMDIClientWindow(hWndFrame)) != NULL)
     SetWindowLong(hWndFrame, CLIENTWND, (LONG)hWnd);
   return(TRUE);
 }
Index: oce/src/Standard/Standard.cxx
===================================================================
--- oce.orig/src/Standard/Standard.cxx
+++ oce/src/Standard/Standard.cxx
@@ -99,9 +99,9 @@ Standard_MMgrFactory::Standard_MMgrFacto
 #endif*/
 
   char* aVar;
-  Standard_Integer anAllocId   = (aVar = getenv ("MMGT_OPT"      )) ?  atoi (aVar)       :
+  Standard_Integer anAllocId   = ((aVar = getenv ("MMGT_OPT"      )) != NULL) ?  atoi (aVar)       :
     (MMGT_OPT_DEFAULT);
-  Standard_Boolean toClear     = (aVar = getenv ("MMGT_CLEAR"    )) ? (atoi (aVar) != 0) : (MMGT_CLEAR_DEFAULT != 0);
+  Standard_Boolean toClear     = ((aVar = getenv ("MMGT_CLEAR"    )) != NULL) ? (atoi (aVar) != 0) : (MMGT_CLEAR_DEFAULT != 0);
 
   // on Windows (actual for XP and 2000) activate low fragmentation heap
   // for CRT heap in order to get best performance.
@@ -126,10 +126,10 @@ Standard_MMgrFactory::Standard_MMgrFacto
   {
     case 1:  // OCCT optimized memory allocator
     {
-      Standard_Boolean bMMap       = (aVar = getenv ("MMGT_MMAP"     )) ? (atoi (aVar) != 0) : (MMGT_MMAP_DEFAULT != 0);
-      Standard_Integer aCellSize   = (aVar = getenv ("MMGT_CELLSIZE" )) ?  atoi (aVar) : MMGT_CELLSIZE_DEFAULT;
-      Standard_Integer aNbPages    = (aVar = getenv ("MMGT_NBPAGES"  )) ?  atoi (aVar) : MMGT_NBPAGES_DEFAULT;
-      Standard_Integer aThreshold  = (aVar = getenv ("MMGT_THRESHOLD")) ?  atoi (aVar) : MMGT_THRESHOLD_DEFAULT;
+      Standard_Boolean bMMap       = ((aVar = getenv ("MMGT_MMAP"     )) != NULL) ? (atoi (aVar) != 0) : (MMGT_MMAP_DEFAULT != 0);
+      Standard_Integer aCellSize   = ((aVar = getenv ("MMGT_CELLSIZE" )) != NULL) ?  atoi (aVar) : MMGT_CELLSIZE_DEFAULT;
+      Standard_Integer aNbPages    = ((aVar = getenv ("MMGT_NBPAGES"  )) != NULL) ?  atoi (aVar) : MMGT_NBPAGES_DEFAULT;
+      Standard_Integer aThreshold  = ((aVar = getenv ("MMGT_THRESHOLD")) != NULL) ?  atoi (aVar) : MMGT_THRESHOLD_DEFAULT;
       myFMMgr = new Standard_MMgrOpt (toClear, bMMap, aCellSize, aNbPages, aThreshold, Standard_IsReentrant);
       break;
     }
