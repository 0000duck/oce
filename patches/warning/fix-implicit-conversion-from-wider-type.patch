From a19ab14176fffed0d79cc023b1836e3936f6a01c Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sat, 19 May 2012 16:06:47 +0200
Subject: [PATCH] [warning-fix][implicit-conversion-from-wider-type] Fixes
 warnings like 'conversion' conversion from 'type1' to
 'type2', possible loss of data

---
 src/AlienImage/AlienImage_SGIRGBAlienData.cxx |    6 +++---
 src/OpenGl/OpenGl_Window.cxx                  |    4 ++--
 src/PlotMgt/PlotMgt_TextManager.cxx           |    2 +-
 src/TopOpeBRep/TopOpeBRep_vpr.cxx             |    8 --------
 src/WNT/WNT_ImageProcessor.cxx                |    2 +-
 test/BRepExtrema_test/BRepExtrema_test.cpp    |    5 ++---
 test/gp_test/gp_test.cpp                      |    2 +-
 7 files changed, 10 insertions(+), 19 deletions(-)

From 647523e9b940558b575375a724601226b2b9d57b Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sat, 19 May 2012 16:07:12 +0200
Subject: [PATCH] [warning-fix][implicit-conversion-from-wider-type] Fixes
 warnings like 'conversion' conversion from 'type1' to
 'type2', possible loss of data

Since the class uses Standard_Integer and std::streambuf_size is usually 64bit,
there can be problems with files > 2GB. This is a limit of the current implementation,
which should be replaced for 64bit sized streams.
The added casts will just make the warnings disappear.
---
 src/LDOM/LDOM_OSStream.cxx |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

Index: oce/src/AlienImage/AlienImage_SGIRGBAlienData.cxx
===================================================================
--- oce.orig/src/AlienImage/AlienImage_SGIRGBAlienData.cxx
+++ oce/src/AlienImage/AlienImage_SGIRGBAlienData.cxx
@@ -635,9 +635,9 @@ static void img_setrowsize( 	AlienImage_
 	    iptr -= 2;							\
 	    bblcount = iptr-sptr;					\
 	    while(bblcount) {						\
-		todo = bblcount>126 ? 126:bblcount; 			\
+		todo = (bblcount>126) ? 126:(short)bblcount; 			\
 		bblcount -= todo;					\
-		*optr++ = 0x80|todo;					\
+		*optr++ = (unsigned char)(0x80|todo);					\
 		while(todo--)						\
 		    *optr++ = (unsigned char)*sptr++;			\
 	    }								\
@@ -647,7 +647,7 @@ static void img_setrowsize( 	AlienImage_
 		iptr++;							\
 	    bblcount = iptr-sptr;					\
 	    while(bblcount) {						\
-		todo = bblcount>126 ? 126:bblcount; 			\
+		todo = (bblcount>126) ? 126:(short)bblcount; 			\
 		bblcount -= todo;					\
 		*optr++ = (unsigned char)todo;				\
 		*optr++ = (unsigned char)cc;				\
Index: oce/src/LDOM/LDOM_OSStream.cxx
===================================================================
--- oce.orig/src/LDOM/LDOM_OSStream.cxx
+++ oce/src/LDOM/LDOM_OSStream.cxx
@@ -105,7 +105,7 @@ Standard_CString LDOM_SBuffer::str () co
 int LDOM_SBuffer::overflow(signed char c)
 {
   char cc = (char)c;
-  return xsputn(&cc,1);
+  return (int)xsputn(&cc,1);
 }
 
 //=======================================================================
@@ -127,7 +127,7 @@ int LDOM_SBuffer::underflow()
 //=======================================================================
 std::streamsize LDOM_SBuffer::xsputn(const char* aStr, std::streamsize n)
 {
-  int aLen = n + 1;
+  int aLen = (int)(n) + 1;
   int freeLen = myMaxBuf - myCurString->len - 1;
   if (freeLen >= n)
   {
@@ -155,7 +155,7 @@ std::streamsize LDOM_SBuffer::xsputn(con
   myCurString->len += aLen - 1;
   *(myCurString->buf + myCurString->len) = '\0';
 
-  myLength += n;
+  myLength += (int)n;
   return n;
 }
 
Index: oce/src/OpenGl/OpenGl_Window.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Window.cxx
+++ oce/src/OpenGl/OpenGl_Window.cxx
@@ -58,8 +58,8 @@ namespace
 
     int       iPixelFormat = 0;
     int       iGood = 0;
-    const int cBits[] = { 32, 24 };
-    const int dBits[] = { 32, 24, 16 };
+    const BYTE cBits[] = { 32, 24 };
+    const BYTE dBits[] = { 32, 24, 16 };
 
     int i, j;
     for (i = 0; i < sizeof(dBits) / sizeof(BYTE); i++)
Index: oce/src/PlotMgt/PlotMgt_TextManager.cxx
===================================================================
--- oce.orig/src/PlotMgt/PlotMgt_TextManager.cxx
+++ oce/src/PlotMgt/PlotMgt_TextManager.cxx
@@ -33,7 +33,7 @@
 #define CONVERT(v) (v)*72./(0.0254005 METER)
 
 #define TRANSFORM(X,Y)                 \
-  { Standard_Real x = (X), y = (Y);    \
+  { Standard_ShortReal x = (X), y = (Y);    \
     X = x*theCosAngle - y*theSinAngle; \
     Y = x*theSinAngle + y*theCosAngle; \
   }
Index: oce/src/TopOpeBRep/TopOpeBRep_vpr.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_vpr.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_vpr.cxx
@@ -229,18 +229,10 @@ static void FUN_VPgeometryfound
   else          hasOOedge = (VP.State(OOShapeIndex) == TopAbs_ON);
   if ( hasOOedge ) {  
     TopoDS_Shape OOedge;
-#ifndef DEB
     if (on2edges) OOedge = ((signed) rkErest == (signed) OOShapeIndex)? Erest : VP.Edge(OOShapeIndex);
-#else
-    if (on2edges) OOedge = (rkErest == OOShapeIndex)? Erest : VP.Edge(OOShapeIndex);
-#endif
     else          OOedge = VP.EdgeON(OOShapeIndex);    
     Standard_Real OOpar = 0.;
-#ifndef DEB
     if (on2edges) OOpar = ((signed) rkErest == (signed) OOShapeIndex)? parErest : VP.EdgeParameter(OOShapeIndex);
-#else
-    if (on2edges) OOpar = (rkErest == OOShapeIndex)? parErest : VP.EdgeParameter(OOShapeIndex);
-#endif
     else          OOpar = VP.EdgeONParameter(OOShapeIndex); 
     Standard_Real tolOOe = FUN_tool_maxtol(OOedge);
     Standard_Real OOtolp = Precision::Parametric(tolOOe);
Index: oce/src/WNT/WNT_ImageProcessor.cxx
===================================================================
--- oce.orig/src/WNT/WNT_ImageProcessor.cxx
+++ oce/src/WNT/WNT_ImageProcessor.cxx
@@ -589,7 +589,7 @@ static HBITMAP loadXWD (  Handle( WNT_Gr
 	 if ( ptrDIB == NULL ) goto leave;
 
 	 CopyMemory (  ( PVOID )ptrDIB, ( PVOID )pbInit, dataSize  );
-	 FillMemory (  ( PVOID )colors, MAXCOLOR * sizeof ( WORD ), 0xFFFF );
+	 FillMemory (  ( PVOID )colors, MAXCOLOR * sizeof ( WORD ), 0xFF );
 
 	 for ( i = 0; i < dataSize; ++i ) {
 
