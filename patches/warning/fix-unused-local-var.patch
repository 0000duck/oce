From c784b1682bc43ef9485850d26b5e2d57d9bb7825 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 28 Jul 2011 08:32:19 +0200
Subject: [PATCH 2/9] [cppcheck-fix][uninitialized-var]

---
 inc/ApproxInt_Approx.gxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From fe35e415015e203a76c72c26785ada5f140619e3 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 12 Jan 2012 22:07:34 +0100
Subject: [PATCH 1/3] [cppcheck-error-fix][unitialized-variable]

[OSD/OSD_Host.cxx:183]: (error) Uninitialized variable: noaddress
---
 src/OSD/OSD_Host.cxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From d5ec86f670ed0b2a4d9365b1cb90b0f6e7300225 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Sun, 15 Jan 2012 15:50:11 +0100
Subject: [PATCH 2/3] [cppcheck-error-fix][uninitialized-variable]

[IntPatch/IntPatch_LineConstructor.cxx:1066]: (error) Uninitialized variable: utst1
[IntPatch/IntPatch_LineConstructor.cxx:1066]: (error) Uninitialized variable: vtst1
[IntPatch/IntPatch_LineConstructor.cxx:1067]: (error) Uninitialized variable: utst1
[IntPatch/IntPatch_LineConstructor.cxx:1068]: (error) Uninitialized variable: vtst1
---
 src/IntPatch/IntPatch_LineConstructor.cxx |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From 6cc0cf7af904265fd881a3004349502659cd2897 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Fri, 13 Jan 2012 06:08:52 +0100
Subject: [PATCH 3/3] [cppcheck-error-fix][uninitialized-variable]

[BinMDF/BinMDF_TagSourceDriver.cxx:39]: (error) Uninitialized variable: aValue
[BinMDataStd/BinMDataStd_IntPackedMapDriver.cxx:67]: (error) Uninitialized variable: aKey
[BinMDataStd/BinMDataStd_IntegerDriver.cxx:42]: (error) Uninitialized variable: aValue
[BinMDataStd/BinMDataStd_RealDriver.cxx:42]: (error) Uninitialized variable: aValue
[BinMDataXtd/BinMDataXtd_GeometryDriver.cxx:42]: (error) Uninitialized variable: aType
[BinMFunction/BinMFunction_FunctionDriver.cxx:53]: (error) Uninitialized variable: aValue
[BinMNaming/BinMNaming_NamedShapeDriver.cxx:108]: (error) Uninitialized variable: aShapeID
[BinMNaming/BinMNaming_NamedShapeDriver.cxx:163]: (error) Uninitialized variable: aVer
[BinMNaming/BinMNaming_NamedShapeDriver.cxx:167]: (error) Uninitialized variable: aCharEvol
[BinMNaming/BinMNaming_NamingDriver.cxx:143]: (error) Uninitialized variable: aValue
[BinMNaming/BinMNaming_NamingDriver.cxx:190]: (error) Uninitialized variable: anIndx
[BinMPrsStd/BinMPrsStd_AISPresentationDriver.cxx:46]: (error) Uninitialized variable: aValue
[BinMPrsStd/BinMPrsStd_AISPresentationDriver.cxx:70]: (error) Uninitialized variable: aRValue
[BinMPrsStd/BinMPrsStd_PositionDriver.cxx:45]: (error) Uninitialized variable: aValue
[BinMXCAFDoc/BinMXCAFDoc_AreaDriver.cxx:36]: (error) Uninitialized variable: aValue
[BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx:36]: (error) Uninitialized variable: x
[BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx:36]: (error) Uninitialized variable: y
[BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx:36]: (error) Uninitialized variable: z
[BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx:35]: (error) Uninitialized variable: R
[BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx:35]: (error) Uninitialized variable: G
[BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx:35]: (error) Uninitialized variable: B
[BinMXCAFDoc/BinMXCAFDoc_VolumeDriver.cxx:35]: (error) Uninitialized variable: aVol
---
 src/BinMDF/BinMDF_TagSourceDriver.cxx              |    2 +-
 src/BinMDataStd/BinMDataStd_IntPackedMapDriver.cxx |    2 +-
 src/BinMDataStd/BinMDataStd_IntegerDriver.cxx      |    2 +-
 src/BinMDataStd/BinMDataStd_RealDriver.cxx         |    2 +-
 src/BinMDataXtd/BinMDataXtd_GeometryDriver.cxx     |    2 +-
 src/BinMFunction/BinMFunction_FunctionDriver.cxx   |    2 +-
 src/BinMNaming/BinMNaming_NamedShapeDriver.cxx     |    6 +++---
 src/BinMNaming/BinMNaming_NamingDriver.cxx         |    4 ++--
 .../BinMPrsStd_AISPresentationDriver.cxx           |    4 ++--
 src/BinMPrsStd/BinMPrsStd_PositionDriver.cxx       |    2 +-
 src/BinMXCAFDoc/BinMXCAFDoc_AreaDriver.cxx         |    2 +-
 src/BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx     |    2 +-
 src/BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx        |    2 +-
 src/BinMXCAFDoc/BinMXCAFDoc_VolumeDriver.cxx       |    2 +-
 14 files changed, 18 insertions(+), 18 deletions(-)

From 3d020760db1d4f3787e187b33856caf63a288ded Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Sun, 3 Jun 2012 12:47:10 +0200
Subject: [PATCH] [clang-warning-fix][unused-variable]

---
 src/AdvApp2Var/AdvApp2Var_SysBase.cxx |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

From 9e86ef2ea0509fdb73057a346e1189eb48c51d9f Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Tue, 19 Feb 2013 11:22:28 +0100
Subject: [PATCH] [warning-fix][unused-local-var]

---
 inc/Approx_ComputeLine.gxx                         |   23 ++++++++-----
 inc/Extrema_GExtPC.gxx                             |    1 -
 inc/IntStart_SearchOnBoundaries_1.gxx              |    3 +-
 inc/QANCollection_PerfSparseArray.hxx              |    2 +-
 src/AIS/AIS_InteractiveContext.cxx                 |    5 ++-
 src/AdvApp2Var/AdvApp2Var_Patch.cxx                |    8 ++---
 src/AdvApp2Var/AdvApp2Var_SysBase.cxx              |    4 +--
 src/BOP/BOP_ShellShell.cxx                         |    3 +-
 src/BOPTools/BOPTools_PaveFiller_1.cxx             |    4 +--
 src/BOPTools/BOPTools_PaveFiller_3.cxx             |    3 +-
 src/BRepFeat/BRepFeat_MakeLinearForm.cxx           |    4 +--
 src/BRepFeat/BRepFeat_RibSlot.cxx                  |    2 --
 src/BRepFill/BRepFill_Sweep.cxx                    |    6 ++++
 src/BRepGProp/BRepGProp.cxx                        |   36 ++++++++++++++++----
 src/BRepMesh/BRepMesh_Delaun.cxx                   |    2 --
 src/BRepOffsetAPI/BRepOffsetAPI_MiddlePath.cxx     |   13 +++----
 src/BSplCLib/BSplCLib.cxx                          |    4 ---
 src/BiTgte/BiTgte_Blend.cxx                        |    2 --
 src/ChFi3d/ChFi3d_Builder_C1.cxx                   |    5 +--
 src/Extrema/Extrema_GenExtPS.cxx                   |    1 -
 src/GeomConvert/GeomConvert_1.cxx                  |    2 --
 src/GeomFill/GeomFill_LocationGuide.cxx            |    7 +++-
 src/GeomFill/GeomFill_NSections.cxx                |    2 --
 src/GeomInt/GeomInt_IntSS_1.cxx                    |    3 +-
 src/GeometryTest/GeometryTest_APICommands.cxx      |    5 ---
 src/HLRBRep/HLRBRep_PolyAlgo.cxx                   |   10 ++++--
 src/IFSelect/IFSelect_WorkSession.cxx              |    2 --
 src/Image/Image_AlienPixMap.cxx                    |    1 -
 src/IntPatch/IntPatch_Polyhedron.cxx               |    8 ++---
 src/IntPolyh/IntPolyh_MaillageAffinage.cxx         |    6 +---
 src/IntTools/IntTools_BeanBeanIntersector.cxx      |    6 ++--
 src/IntTools/IntTools_EdgeFace.cxx                 |   14 ++------
 src/IntTools/IntTools_FaceFace.cxx                 |    3 +-
 src/LocOpe/LocOpe_SplitDrafts.cxx                  |    3 +-
 src/MAT2d/MAT2d_Tool2d.cxx                         |    3 +-
 src/OpenGl/OpenGl_Polygon.cxx                      |    8 ++---
 src/OpenGl/OpenGl_Text.cxx                         |   21 ++++++------
 src/OpenGl/OpenGl_Trihedron.cxx                    |    2 --
 src/OpenGl/OpenGl_Window.cxx                       |    1 -
 src/ProjLib/ProjLib_ProjectedCurve.cxx             |    3 +-
 src/QABugs/QABugs_1.cxx                            |    2 --
 src/QABugs/QABugs_11.cxx                           |    1 -
 src/QABugs/QABugs_13.cxx                           |    2 --
 src/QABugs/QABugs_16.cxx                           |    4 ---
 src/QABugs/QABugs_17.cxx                           |    1 -
 src/QABugs/QABugs_2.cxx                            |    3 --
 src/QABugs/QABugs_3.cxx                            |   10 +++---
 src/QABugs/QABugs_9.cxx                            |    3 +-
 .../QANewBRepNaming_BooleanOperationFeat.cxx       |    1 -
 src/QANewBRepNaming/QANewBRepNaming_Gluing.cxx     |    2 --
 src/QANewBRepNaming/QANewBRepNaming_Limitation.cxx |    1 -
 src/QANewDBRepNaming/QANewDBRepNaming.cxx          |    4 +--
 src/QANewModTopOpe/QANewModTopOpe.cxx              |    3 +-
 src/QANewModTopOpe/QANewModTopOpe_Intersection.cxx |    1 -
 src/QANewModTopOpe/QANewModTopOpe_Tools.cxx        |    2 +-
 src/STEPCAFControl/STEPCAFControl_Reader.cxx       |    1 -
 src/Select3D/Select3D_SensitiveCircle.cxx          |    3 --
 src/TPrsStd/TPrsStd_ConstraintTools.cxx            |    3 --
 src/TestTopOpe/TestTopOpe_CORCommands.cxx          |   10 ++++--
 src/TestTopOpe/TestTopOpe_DSACommands.cxx          |    3 +-
 src/TopOpeBRep/TopOpeBRep_EdgesFiller.cxx          |    4 +--
 src/TopOpeBRep/TopOpeBRep_EdgesIntersector.cxx     |   14 +++++---
 src/TopOpeBRep/TopOpeBRep_FaceEdgeFiller.cxx       |    6 ++++
 src/TopOpeBRep/TopOpeBRep_FacesFiller_1.cxx        |   15 ++++++--
 src/TopOpeBRep/TopOpeBRep_FacesIntersector.cxx     |    3 +-
 src/TopOpeBRep/TopOpeBRep_mergePDS.cxx             |   14 ++++++--
 src/TopOpeBRep/TopOpeBRep_vpr.cxx                  |    3 --
 src/TopOpeBRep/TopOpeBRep_vprclo.cxx               |   11 +++---
 src/TopOpeBRep/TopOpeBRep_vprdeg.cxx               |    3 +-
 src/TopOpeBRepBuild/TopOpeBRepBuild_BuilderON.cxx  |    6 ++++
 src/TopOpeBRepBuild/TopOpeBRepBuild_GridSS.cxx     |    7 ++--
 src/TopOpeBRepDS/TopOpeBRepDS_EIR.cxx              |    6 ++++
 .../TopOpeBRepDS_EdgeInterferenceTool.cxx          |    4 +++
 src/TopOpeBRepDS/TopOpeBRepDS_FIR.cxx              |   16 +++++----
 .../TopOpeBRepDS_FilterFaceInterferences.cxx       |   17 ++++++---
 src/TopOpeBRepDS/TopOpeBRepDS_HDataStructure.cxx   |    6 ++++
 src/Units/Units_Lexicon.cxx                        |    1 -
 src/Units/Units_Sentence.cxx                       |    2 --
 src/V3d/V3d_PerspectiveView.cxx                    |    4 +--
 src/Visual3d/Visual3d_ViewManager.cxx              |   18 +++-------
 src/math/math_TrigonometricFunctionRoots.cxx       |    3 +-
 81 files changed, 235 insertions(+), 229 deletions(-)

Index: oce/src/AIS/AIS_InteractiveContext.cxx
===================================================================
--- oce.orig/src/AIS/AIS_InteractiveContext.cxx
+++ oce/src/AIS/AIS_InteractiveContext.cxx
@@ -238,15 +238,14 @@ void AIS_InteractiveContext::DisplayedOb
 #endif
 
     //parse all local contexts...
+#ifdef DEBUG
     Standard_Integer NbDisp;
     for(AIS_DataMapIteratorOfDataMapOfILC it1(myLocalContexts);it1.More();it1.Next()){
       const Handle(AIS_LocalContext)& LC = it1.Value();
       NbDisp =  LC->DisplayedObjects(theMap);
-#ifdef DEBUG
       cout<<"\tIn Local Context "<<it1.Key()<<" : "<<NbDisp<<endl;
-#endif
-      
     }
+#endif
     Handle(AIS_InteractiveObject) curIO;
     Handle(Standard_Transient) Tr;
       for(TColStd_MapIteratorOfMapOfTransient it2(theMap);it2.More();it2.Next()){
Index: oce/src/AIS/AIS_TexturedShape.cxx
===================================================================
--- oce.orig/src/AIS/AIS_TexturedShape.cxx
+++ oce/src/AIS/AIS_TexturedShape.cxx
@@ -264,10 +264,10 @@ void AIS_TexturedShape::Compute (const H
     }
     case 1: // Shading
     {
-      Standard_Real prevangle;
-      Standard_Real newangle;
-      Standard_Real prevcoeff;
-      Standard_Real newcoeff;
+      Standard_Real prevangle = 0.0;
+      Standard_Real newangle = 0.0;
+      Standard_Real prevcoeff = 0.0;
+      Standard_Real newcoeff = 0.0;
 
       Standard_Boolean isOwnDeviationAngle = OwnDeviationAngle(newangle,prevangle);
       Standard_Boolean isOwnDeviationCoefficient = OwnDeviationCoefficient(newcoeff,prevcoeff);
Index: oce/src/AdvApp2Var/AdvApp2Var_Patch.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_Patch.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_Patch.cxx
@@ -109,11 +109,9 @@ void AdvApp2Var_Patch::Discretise(const
 {
 
 // data stored in the Context
-  Standard_Integer NDIMEN, NBSESP, NDIMSE, ISOFAV;
+  Standard_Integer NDIMEN, ISOFAV;
   NDIMEN = Conditions.TotalDimension();
-  NBSESP = Conditions.TotalNumberSSP();
 // Attention : works only for 3D
-  NDIMSE = 3;
   ISOFAV = Conditions.FavorIso();
 
 // data related to the patch to be discretized
@@ -404,12 +402,10 @@ void AdvApp2Var_Patch::AddConstraints(co
 				      const AdvApp2Var_Framework& Constraints)
 {
 // data stored in the  Context
-  Standard_Integer NDIMEN, NBSESP, NDIMSE;
+  Standard_Integer NDIMEN;
   Standard_Integer IERCOD, NCFLMU, NCFLMV, NDegU, NDegV;
   NDIMEN = Conditions.TotalDimension();
-  NBSESP = Conditions.TotalNumberSSP();
 // Attention : works only for 3D
-  NDIMSE = 3;
   NCFLMU = Conditions.ULimit();
   NCFLMV = Conditions.VLimit();
   NDegU = NCFLMU - 1;
Index: oce/src/AdvApp2Var/AdvApp2Var_SysBase.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_SysBase.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_SysBase.cxx
@@ -848,7 +848,6 @@ int macrgfl_(intptr_t *iadfld,
   t[ioff] = -134744073.;
   
   /*  FAKE CALL TO STOP THE DEBUGGER : */
-  iadrfl = *iadfld;
   macrbrk_();
   
   /*  UPDATE THE START FLAG */
@@ -856,7 +855,6 @@ int macrgfl_(intptr_t *iadfld,
   t[ioff] = -134744073.;
     
   /*  FAKE CALL TO STOP THE DEBUGGER : */
-  iadrfl = *iadflf;
   macrbrk_();
   
   return 0 ;
Index: oce/src/Approx/Approx_ComputeLine.gxx
===================================================================
--- oce.orig/src/Approx/Approx_ComputeLine.gxx
+++ oce/src/Approx/Approx_ComputeLine.gxx
@@ -618,7 +618,6 @@ void Approx_ComputeLine::Perform(const M
 	// ========================================
 	GoUp = Standard_False;
 	Ok = Standard_True;
-	Standard_Boolean FailOnPointsAdded = Standard_False;
 	if (MyStatus == Approx_PointsAdded) {
 	  // Appel recursif du decoupage:
 	  GoUp = Standard_True;
@@ -632,7 +631,6 @@ void Approx_ComputeLine::Perform(const M
 	  //-- Si MakeML a echoue   on retourne une ligne vide
 	  if ((nbpdsotherligne == 0) || myMultiLineNb >= 3)
 	  {
-	    FailOnPointsAdded = Standard_True; 
 	    //-- cout<<" ** ApproxComputeLine MakeML Echec ** LBR lbr "<<endl;
 	    if (myfirstpt == mylastpt) break;  // Pour etre sur de ne pas 
 	    // planter la station !!
@@ -828,11 +826,10 @@ void Approx_ComputeLine::Parameters(cons
 			       const Standard_Integer lastP,
 			       math_Vector& TheParameters) const
 {
-  Standard_Integer i, j, Nbp, nbP2d, nbP3d;
+  Standard_Integer i, j, nbP2d, nbP3d;
   Standard_Real dist;
   gp_Pnt P1, P2;
   gp_Pnt2d P12d, P22d;
-  Nbp = lastP-firstP+1;
 
   if (Par == Approx_ChordLength || Par == Approx_Centripetal) {
     nbP3d = LineTool::NbP3d(Line);
@@ -994,12 +991,12 @@ Standard_Boolean  Approx_ComputeLine::Co
   gp_Vec2d V12d, V22d;
   gp_Pnt P1, P2;
   gp_Pnt2d P12d, P22d;
-  Standard_Boolean Tangent1, Tangent2, Parallel, mydone= Standard_False;
+  Standard_Boolean Tangent1, Tangent2, mydone= Standard_False;
+#ifdef DEB
+  Standard_Boolean Parallel;
+#endif
   Standard_Integer myfirstpt = firstpt, mylastpt = lastpt;
   Standard_Integer nbp = lastpt-firstpt+1, Kopt = 0;
-  AppParCurves_Constraint FirstC, LastC;
-  FirstC = AppParCurves_PassPoint;
-  LastC = AppParCurves_PassPoint;
   math_Vector Para(firstpt, lastpt);
 
   Parameters(Line, firstpt, lastpt, Para);
@@ -1042,13 +1039,17 @@ Standard_Boolean  Approx_ComputeLine::Co
   if (nbp == 2) {
     // S il n y a que 2 points, on verifie quand meme que les tangentes sont 
     // alignees.
+#ifdef DEB
     Parallel = Standard_True;
+#endif
     if (Tangent1) {
       for (i = 1; i <= nbP3d; i++) {
 	gp_Vec PVec(tabP1(i), tabP2(i));
 	V13d = tabV1(i);
 	if (!PVec.IsParallel(V13d, Precision::Angular())) {
+#ifdef DEB
 	  Parallel = Standard_False;
+#endif
 	  break;
 	}
       }
@@ -1056,7 +1057,9 @@ Standard_Boolean  Approx_ComputeLine::Co
 	gp_Vec2d PVec2d(tabP12d(i), tabP22d(i));
 	V12d = tabV12d(i);
 	if (!PVec2d.IsParallel(V12d, Precision::Angular())) {
+#ifdef DEB
 	  Parallel = Standard_False;
+#endif
 	  break;
 	}
       }
@@ -1067,7 +1070,9 @@ Standard_Boolean  Approx_ComputeLine::Co
 	gp_Vec PVec(tabP1(i), tabP2(i));
 	V23d = tabV2(i);
 	if (!PVec.IsParallel(V23d, Precision::Angular())) {
+#ifdef DEB
 	  Parallel = Standard_False;
+#endif
 	  break;
 	}
       }
@@ -1075,7 +1080,9 @@ Standard_Boolean  Approx_ComputeLine::Co
 	gp_Vec2d PVec2d(tabP12d(i), tabP22d(i));
 	V22d = tabV22d(i);
 	if (!PVec2d.IsParallel(V22d, Precision::Angular())) {
+#ifdef DEB
 	  Parallel = Standard_False;
+#endif
 	  break;
 	}
       }
Index: oce/src/ApproxInt/ApproxInt_Approx.gxx
===================================================================
--- oce.orig/src/ApproxInt/ApproxInt_Approx.gxx
+++ oce/src/ApproxInt/ApproxInt_Approx.gxx
@@ -108,7 +108,7 @@ static void  ComputeTrsf2d(const Handle(
     pfunc = &IntSurf_PntOn2S::ParametersOnS2;
   for(Standard_Integer i=1;i<=nbp;i++) { 
     const IntSurf_PntOn2S&  POn2S = theline->Point(i);
-    Standard_Real  U,V;
+    Standard_Real  U=0.0,V=0.0;
     (POn2S.*pfunc)(U,V);
     if(U<u0) u0=U;
     if(U>u1) u1=U;
Index: oce/src/BRepFeat/BRepFeat_MakeLinearForm.cxx
===================================================================
--- oce.orig/src/BRepFeat/BRepFeat_MakeLinearForm.cxx
+++ oce/src/BRepFeat/BRepFeat_MakeLinearForm.cxx
@@ -1026,18 +1026,16 @@ void BRepFeat_MakeLinearForm::Perform()
 
   TopoDS_Vertex Vprevious;
   gp_Pnt ptprev;
-  Standard_Real tvp, dp;
+  Standard_Real dp;
 
   while (!(LastOK && FirstOK)) {
     if (v1OK) {
       Vprevious=v2;
       ptprev=p2;
-      tvp=t2;
     }
     else {
       Vprevious=v1;
       ptprev=p1;
-      tvp=t1;
     }
     
     // find edge connected to v1 or v2:
Index: oce/src/BRepFill/BRepFill_Sweep.cxx
===================================================================
--- oce.orig/src/BRepFill/BRepFill_Sweep.cxx
+++ oce/src/BRepFill/BRepFill_Sweep.cxx
@@ -1699,7 +1699,9 @@ BRepFill_Sweep::BRepFill_Sweep(const Han
   LastShape  = Last; 
 
   // It is necessary to check the SameRange on its (PRO13551)
+#ifdef DEB
   Standard_Boolean issame = Standard_True;
+#endif
   BRep_Builder B;
   BRepTools_WireExplorer wexp;
   if (!FirstShape.IsNull()) {
@@ -1707,7 +1709,9 @@ BRepFill_Sweep::BRepFill_Sweep(const Han
       if (!BRepLib::CheckSameRange(wexp.Current())) {
 	B.SameRange(wexp.Current(), Standard_False);
 	B.SameParameter(wexp.Current(), Standard_False);
+#ifdef DEB
 	issame = Standard_False;
+#endif
       }
     }
   }
@@ -1717,7 +1721,9 @@ BRepFill_Sweep::BRepFill_Sweep(const Han
       if (!BRepLib::CheckSameRange(wexp.Current())) {
 	B.SameRange(wexp.Current(), Standard_False); 
 	B.SameParameter(wexp.Current(), Standard_False);
+#ifdef DEB
 	issame = Standard_False;
+#endif
       }
     }
   }
Index: oce/src/BRepGProp/BRepGProp.cxx
===================================================================
--- oce.orig/src/BRepGProp/BRepGProp.cxx
+++ oce/src/BRepGProp/BRepGProp.cxx
@@ -57,7 +57,10 @@ void  BRepGProp::LinearProperties(const
 }
 
 static Standard_Real surfaceProperties(const TopoDS_Shape& S, GProp_GProps& Props, const Standard_Real Eps){
-  Standard_Integer i, iErrorMax = 0;
+  Standard_Integer i;
+#ifdef DEB
+  Standard_Integer iErrorMax = 0;
+#endif
   Standard_Real ErrorMax = 0.0, Error;
   TopExp_Explorer ex; 
   gp_Pnt P(roughBaryCenter(S));
@@ -73,7 +76,12 @@ static Standard_Real surfaceProperties(c
     if(Eps < 1.0) {
       G.Perform(BF, BD, Eps); 
       Error = G.GetEpsilon();
-      if(ErrorMax < Error){ ErrorMax = Error; iErrorMax = i;}
+      if(ErrorMax < Error) {
+        ErrorMax = Error;
+#ifdef DEB
+        iErrorMax = i;
+#endif
+      }
     } else {
       if(BF.NaturalRestriction()) G.Perform(BF);
       else G.Perform(BF, BD);
@@ -109,7 +117,10 @@ Standard_Real BRepGProp::SurfaceProperti
 //=======================================================================
 
 static Standard_Real volumeProperties(const TopoDS_Shape& S, GProp_GProps& Props, const Standard_Real Eps){
-  Standard_Integer i, iErrorMax = 0;
+  Standard_Integer i;
+#ifdef DEB
+  Standard_Integer iErrorMax = 0;
+#endif
   Standard_Real ErrorMax = 0.0, Error = 0.0;
   TopExp_Explorer ex; 
   gp_Pnt P(roughBaryCenter(S)); 
@@ -126,7 +137,12 @@ static Standard_Real volumeProperties(co
       if(Eps < 1.0) {
 	G.Perform(BF, BD, Eps); 
 	Error = G.GetEpsilon();
-	if(ErrorMax < Error){ ErrorMax = Error; iErrorMax = i;}
+	if(ErrorMax < Error) {
+	  ErrorMax = Error;
+#ifdef DEB
+	  iErrorMax = i;
+#endif
+	}
       }
       else {
 	if(BF.NaturalRestriction()) G.Perform(BF);
@@ -167,7 +183,10 @@ Standard_Real BRepGProp::VolumePropertie
   // find the origin
   gp_Pnt P(0,0,0);  P.Transform(S.Location());
   Props = GProp_GProps(P);
-  Standard_Integer i, iErrorMax = 0;
+  Standard_Integer i;
+#ifdef DEB
+  Standard_Integer iErrorMax = 0;
+#endif
   Standard_Real ErrorMax = 0.0, Error = 0.0;
   if(OnlyClosed){
     TopExp_Explorer ex(S,TopAbs_SHELL);
@@ -175,7 +194,12 @@ Standard_Real BRepGProp::VolumePropertie
       const TopoDS_Shape& Sh = ex.Current();
       if(BRep_Tool::IsClosed(Sh)) {
 	Error = volumeProperties(Sh,Props,Eps);
-	if(ErrorMax < Error){ ErrorMax = Error; iErrorMax = i;}
+	if(ErrorMax < Error) {
+	  ErrorMax = Error;
+#ifdef DEB
+	  iErrorMax = i;
+#endif
+	}
       }
     }
   } else ErrorMax = volumeProperties(S,Props,Eps);
Index: oce/src/BRepOffsetAPI/BRepOffsetAPI_MiddlePath.cxx
===================================================================
--- oce.orig/src/BRepOffsetAPI/BRepOffsetAPI_MiddlePath.cxx
+++ oce/src/BRepOffsetAPI/BRepOffsetAPI_MiddlePath.cxx
@@ -609,17 +609,17 @@ void BRepOffsetAPI_MiddlePath::Build()
           if (E2.IsNull())
             E2 = TopoDS::Edge(myPaths((j<=NbPaths)? j : 1)(i-1));
           Standard_Real fpar1, lpar1, fpar2, lpar2;
-          Standard_Real FirstPar1, LastPar1, FirstPar2, LastPar2;
+          Standard_Real LastPar1, LastPar2;
           Handle(Geom2d_Curve) PCurve1 = BRep_Tool::CurveOnSurface(E1, theFace, fpar1, lpar1);
           Handle(Geom2d_Curve) PCurve2 = BRep_Tool::CurveOnSurface(E2, theFace, fpar2, lpar2);
           if (E1.Orientation() == TopAbs_FORWARD)
-          { FirstPar1 = fpar1; LastPar1 = lpar1; }
+          { LastPar1 = lpar1; }
           else
-          { FirstPar1 = lpar1; LastPar1 = fpar1; }
+          { LastPar1 = fpar1; }
           if (E2.Orientation() == TopAbs_FORWARD)
-          { FirstPar2 = fpar2; LastPar2 = lpar2; }
+          { LastPar2 = lpar2; }
           else
-          { FirstPar2 = lpar2; LastPar2 = fpar2; }
+          { LastPar2 = fpar2; }
           gp_Pnt2d FirstPnt2d = PCurve1->Value(LastPar1);
           gp_Pnt2d LastPnt2d  = PCurve2->Value(LastPar2);
           Handle(Geom_Surface) theSurf = BRep_Tool::Surface(theFace);
Index: oce/src/BSplCLib/BSplCLib.cxx
===================================================================
--- oce.orig/src/BSplCLib/BSplCLib.cxx
+++ oce/src/BSplCLib/BSplCLib.cxx
@@ -3110,7 +3110,6 @@ void  BSplCLib::Eval
   NewRequest,
   ExtrapolatingFlag[2],
   ErrorCode,
-  ReturnCode,
   Order = Degree + 1,
   FirstNonZeroBsplineIndex,
   LocalRequest = DerivativeRequest ;
@@ -3180,7 +3179,6 @@ void  BSplCLib::Eval
 			       FirstNonZeroBsplineIndex,
 			       BsplineBasis) ;
   if (ErrorCode != 0) {
-    ReturnCode = 1 ;
     goto FINISH ;
   }
   if (ExtrapolatingFlag[0] == 0 && ExtrapolatingFlag[1] == 0) {
@@ -3311,7 +3309,6 @@ void  BSplCLib::Eval
   NewRequest,
   ExtrapolatingFlag[2],
   ErrorCode,
-  ReturnCode,
   Order = Degree + 1,
   FirstNonZeroBsplineIndex,
   LocalRequest = DerivativeRequest ;
@@ -3381,7 +3378,6 @@ void  BSplCLib::Eval
 			       FirstNonZeroBsplineIndex,
 			       BsplineBasis);
   if (ErrorCode != 0) {
-    ReturnCode = 1 ;
     goto FINISH ;
   }
   if (ExtrapolatingFlag[0] == 0 && ExtrapolatingFlag[1] == 0) {
Index: oce/src/BiTgte/BiTgte_Blend.cxx
===================================================================
--- oce.orig/src/BiTgte/BiTgte_Blend.cxx
+++ oce/src/BiTgte/BiTgte_Blend.cxx
@@ -1887,8 +1887,6 @@ void BiTgte_Blend::ComputeSurfaces()
   // Iteration on the edges lines of center
   // and their valid valid part is taken after cut and tube construction.
   // --------------------------------------------------------------------
-  BRepOffset_Type    OT = BRepOffset_Concave;
-  if (myRadius < 0.) OT = BRepOffset_Convex; 
 
   //TopTools_MapIteratorOfMapOfShape ic(myEdges);
   Standard_Integer i;
Index: oce/src/BinMDF/BinMDF_TagSourceDriver.cxx
===================================================================
--- oce.orig/src/BinMDF/BinMDF_TagSourceDriver.cxx
+++ oce/src/BinMDF/BinMDF_TagSourceDriver.cxx
@@ -45,7 +45,7 @@ Standard_Boolean BinMDF_TagSourceDriver:
                                  BinObjMgt_RRelocationTable&  ) const
 {
   Handle(TDF_TagSource) aTag = Handle(TDF_TagSource)::DownCast(theTarget);
-  Standard_Integer aValue;
+  Standard_Integer aValue=0;
   Standard_Boolean ok = theSource >> aValue;
   if (ok)
     aTag->Set(aValue);
Index: oce/src/BinMDataStd/BinMDataStd_IntPackedMapDriver.cxx
===================================================================
--- oce.orig/src/BinMDataStd/BinMDataStd_IntPackedMapDriver.cxx
+++ oce/src/BinMDataStd/BinMDataStd_IntPackedMapDriver.cxx
@@ -70,7 +70,7 @@ Standard_Boolean BinMDataStd_IntPackedMa
   }
   if(aSize) {
     Handle(TColStd_HPackedMapOfInteger) aHMap = new TColStd_HPackedMapOfInteger ();
-    Standard_Integer aKey;
+    Standard_Integer aKey=0;
     for(Standard_Integer i = 0; i< aSize; i++) {
       Standard_Boolean ok = Source >> aKey;
       if (!ok) {
Index: oce/src/BinMDataStd/BinMDataStd_IntegerDriver.cxx
===================================================================
--- oce.orig/src/BinMDataStd/BinMDataStd_IntegerDriver.cxx
+++ oce/src/BinMDataStd/BinMDataStd_IntegerDriver.cxx
@@ -48,7 +48,7 @@ Standard_Boolean BinMDataStd_IntegerDriv
                                  BinObjMgt_RRelocationTable&  ) const
 {
   Handle(TDataStd_Integer) anAtt = Handle(TDataStd_Integer)::DownCast(theTarget);
-  Standard_Integer aValue;
+  Standard_Integer aValue=0;
   Standard_Boolean ok = theSource >> aValue;
   if (ok)
     anAtt->Set(aValue);
Index: oce/src/BinMDataStd/BinMDataStd_RealDriver.cxx
===================================================================
--- oce.orig/src/BinMDataStd/BinMDataStd_RealDriver.cxx
+++ oce/src/BinMDataStd/BinMDataStd_RealDriver.cxx
@@ -48,7 +48,7 @@ Standard_Boolean BinMDataStd_RealDriver:
                                  BinObjMgt_RRelocationTable&  ) const
 {
   Handle(TDataStd_Real) anAtt= Handle(TDataStd_Real)::DownCast(theTarget);
-  Standard_Real aValue;
+  Standard_Real aValue=0.0;
   Standard_Boolean ok = theSource >> aValue;
   if (ok)
     anAtt->Set(aValue);
Index: oce/src/BinMDataXtd/BinMDataXtd_GeometryDriver.cxx
===================================================================
--- oce.orig/src/BinMDataXtd/BinMDataXtd_GeometryDriver.cxx
+++ oce/src/BinMDataXtd/BinMDataXtd_GeometryDriver.cxx
@@ -48,7 +48,7 @@ Standard_Boolean BinMDataXtd_GeometryDri
   Handle(TDataXtd_Geometry) aT = 
     Handle(TDataXtd_Geometry)::DownCast (theTarget);
 
-  Standard_Integer aType;
+  Standard_Integer aType=0;
   Standard_Boolean ok = theSource >> aType;
   if (ok)
     aT->SetType ((TDataXtd_GeometryEnum) aType);
Index: oce/src/BinMFunction/BinMFunction_FunctionDriver.cxx
===================================================================
--- oce.orig/src/BinMFunction/BinMFunction_FunctionDriver.cxx
+++ oce/src/BinMFunction/BinMFunction_FunctionDriver.cxx
@@ -58,7 +58,7 @@ Standard_Boolean BinMFunction_FunctionDr
   Standard_Boolean ok = theSource >> aGUID;
   if (ok) {
     anAtt->SetDriverGUID(aGUID);  
-    Standard_Integer aValue;
+    Standard_Integer aValue=0;
     ok = theSource >> aValue;
     if(ok)
       anAtt->SetFailure(aValue); 
Index: oce/src/BinMNaming/BinMNaming_NamedShapeDriver.cxx
===================================================================
--- oce.orig/src/BinMNaming/BinMNaming_NamedShapeDriver.cxx
+++ oce/src/BinMNaming/BinMNaming_NamedShapeDriver.cxx
@@ -113,7 +113,7 @@ static int TranslateFrom  (const BinObjM
                          TopoDS_Shape&                  theResult,
                          BinTools_ShapeSet&            theShapeSet)
 {
-  Standard_Integer aShapeID, aLocID;
+  Standard_Integer aShapeID=0, aLocID=0;
   Standard_Character aCharOrient;
   Standard_Boolean Ok = theSource >> aShapeID; //TShapeID;
   if(!Ok) return 1;
@@ -169,11 +169,11 @@ Standard_Boolean BinMNaming_NamedShapeDr
   TDF_Label aLabel = theTarget->Label ();
   TNaming_Builder   aBuilder   (aLabel);
   if (aNbShapes == 0) return Standard_False;
-  Standard_Integer aVer;
+  Standard_Integer aVer=0;
   Standard_Boolean ok = theSource >> aVer;
   if(!ok) return Standard_False;
   aTAtt->SetVersion(aVer); //Version
-  Standard_Character aCharEvol;
+  Standard_Character aCharEvol='\0';
   ok = theSource >> aCharEvol;
   if(!ok) return Standard_False;
   TNaming_Evolution anEvol  = EvolutionToEnum(aCharEvol); //Evolution
Index: oce/src/BinMNaming/BinMNaming_NamingDriver.cxx
===================================================================
--- oce.orig/src/BinMNaming/BinMNaming_NamingDriver.cxx
+++ oce/src/BinMNaming/BinMNaming_NamingDriver.cxx
@@ -152,7 +152,7 @@ Standard_Boolean BinMNaming_NamingDriver
   TNaming_Name& aName = anAtt->ChangeName();
   TCollection_ExtendedString aMsg;
 //1. NameType
-  Standard_Character aValue;
+  Standard_Character aValue='\0';
   Standard_Boolean ok = theSource >> aValue;
   Standard_Boolean aNewF = Standard_False;
   if (ok) {
@@ -171,7 +171,7 @@ Standard_Boolean BinMNaming_NamingDriver
       
 //3. Args
       Standard_Integer aNbArgs=0;
-      Standard_Integer anIndx;
+      Standard_Integer anIndx=0;
       Handle(TNaming_NamedShape) aNS;
       ok = theSource >> aNbArgs;
       if (ok) {
Index: oce/src/BinMPrsStd/BinMPrsStd_AISPresentationDriver.cxx
===================================================================
--- oce.orig/src/BinMPrsStd/BinMPrsStd_AISPresentationDriver.cxx
+++ oce/src/BinMPrsStd/BinMPrsStd_AISPresentationDriver.cxx
@@ -50,7 +50,7 @@ Standard_Boolean BinMPrsStd_AISPresentat
                                  BinObjMgt_RRelocationTable&  ) const
 {
   Handle(TPrsStd_AISPresentation) anAtt = Handle(TPrsStd_AISPresentation)::DownCast(theTarget);
-  Standard_Integer aValue;
+  Standard_Integer aValue = 0;
 //Display status
   Standard_Boolean ok = theSource >> aValue;
   if (!ok) return ok;
@@ -75,7 +75,7 @@ Standard_Boolean BinMPrsStd_AISPresentat
   else anAtt->UnsetMaterial();
 
 //Transparency
-  Standard_Real aRValue;
+  Standard_Real aRValue = 0.0;
   ok = theSource >> aRValue;
   if (!ok) return ok;
   if(aRValue != -1.)  anAtt->SetTransparency(aRValue);
Index: oce/src/BinMPrsStd/BinMPrsStd_PositionDriver.cxx
===================================================================
--- oce.orig/src/BinMPrsStd/BinMPrsStd_PositionDriver.cxx
+++ oce/src/BinMPrsStd/BinMPrsStd_PositionDriver.cxx
@@ -52,7 +52,7 @@ Standard_Boolean BinMPrsStd_PositionDriv
                                  BinObjMgt_RRelocationTable&  ) const
 {
   Handle(TDataXtd_Position) anAtt = Handle(TDataXtd_Position)::DownCast(theTarget);
-  Standard_Real aValue;
+  Standard_Real aValue = 0.0;
   Standard_Boolean ok = theSource >> aValue;
   if (!ok) return ok;
   gp_Pnt aPosition(0., 0., 0.);
Index: oce/src/BinMXCAFDoc/BinMXCAFDoc_AreaDriver.cxx
===================================================================
--- oce.orig/src/BinMXCAFDoc/BinMXCAFDoc_AreaDriver.cxx
+++ oce/src/BinMXCAFDoc/BinMXCAFDoc_AreaDriver.cxx
@@ -41,7 +41,7 @@ Standard_Boolean BinMXCAFDoc_AreaDriver:
 					       BinObjMgt_RRelocationTable& ) const 
 {
   Handle(XCAFDoc_Area) anAtt = Handle(XCAFDoc_Area)::DownCast(theTarget);
-  Standard_Real aValue;
+  Standard_Real aValue = 0.0;
   Standard_Boolean isOk = theSource >> aValue;
   if(isOk)
     anAtt->Set(aValue);
Index: oce/src/BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx
===================================================================
--- oce.orig/src/BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx
+++ oce/src/BinMXCAFDoc/BinMXCAFDoc_CentroidDriver.cxx
@@ -41,7 +41,7 @@ Standard_Boolean BinMXCAFDoc_CentroidDri
 						   BinObjMgt_RRelocationTable& /*theRelocTable*/) const
 {
   Handle(XCAFDoc_Centroid) anAtt = Handle(XCAFDoc_Centroid)::DownCast(theTarget);
-  Standard_Real x, y, z;
+  Standard_Real x =0.0, y = 0.0, z=0.0;
   Standard_Boolean isOk = theSource >> x >> y >> z;
   if(isOk) {
     gp_Pnt aPnt(x, y, z);
Index: oce/src/BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx
===================================================================
--- oce.orig/src/BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx
+++ oce/src/BinMXCAFDoc/BinMXCAFDoc_ColorDriver.cxx
@@ -41,7 +41,7 @@ Standard_Boolean BinMXCAFDoc_ColorDriver
 						BinObjMgt_RRelocationTable& /*theRelocTable*/) const 
 {
   Handle(XCAFDoc_Color) anAtt = Handle(XCAFDoc_Color)::DownCast(theTarget);
-  Standard_Real R, G, B;
+  Standard_Real R=0.0, G=0.0, B=0.0;
   Standard_Boolean isOk = theSource >> R >> G >> B;
   if(isOk) {
     anAtt->Set(R, G, B);
Index: oce/src/BinMXCAFDoc/BinMXCAFDoc_VolumeDriver.cxx
===================================================================
--- oce.orig/src/BinMXCAFDoc/BinMXCAFDoc_VolumeDriver.cxx
+++ oce/src/BinMXCAFDoc/BinMXCAFDoc_VolumeDriver.cxx
@@ -41,7 +41,7 @@ Standard_Boolean BinMXCAFDoc_VolumeDrive
 						 BinObjMgt_RRelocationTable& /*theRelocTable*/) const
 {
   Handle(XCAFDoc_Volume) anAtt = Handle(XCAFDoc_Volume)::DownCast(theTarget);
-  Standard_Real aVol;
+  Standard_Real aVol=0.0;
   Standard_Boolean isOk = theSource >> aVol;
   if(isOk)
     anAtt->Set(aVol);
Index: oce/src/ChFi3d/ChFi3d_Builder_C1.cxx
===================================================================
--- oce.orig/src/ChFi3d/ChFi3d_Builder_C1.cxx
+++ oce/src/ChFi3d/ChFi3d_Builder_C1.cxx
@@ -3631,7 +3631,7 @@ Standard_Boolean ChFi3d_Builder::FindFac
     return Standard_False;
   }
   TopTools_ListIteratorOfListOfShape It,Jt;
-  Standard_Boolean Found = Standard_False, ContainsV = Standard_False;
+  Standard_Boolean Found = Standard_False;
   for(It.Initialize(myEFMap(P1.Arc()));It.More() && !Found;It.Next()) {
     Fv = TopoDS::Face(It.Value());
     if(!Fv.IsSame(Favoid)){
@@ -3640,6 +3640,8 @@ Standard_Boolean ChFi3d_Builder::FindFac
       }
     }
   }
+#ifdef DEB
+  Standard_Boolean ContainsV = Standard_False;
   if (Found) {
     for(It.Initialize(myVFMap(V));It.More();It.Next()) {
       if (TopoDS::Face(It.Value()).IsSame(Fv)) {
@@ -3648,7 +3650,6 @@ Standard_Boolean ChFi3d_Builder::FindFac
       }
     }
   }
-#ifdef DEB
   if(!ContainsV){
     cout<<"FindFace : the extremity of the spine is not in the end face"<<endl;
   }
Index: oce/src/GeomConvert/GeomConvert_1.cxx
===================================================================
--- oce.orig/src/GeomConvert/GeomConvert_1.cxx
+++ oce/src/GeomConvert/GeomConvert_1.cxx
@@ -765,10 +765,8 @@ Handle(BSplineSurface) GeomConvert::Spli
       Weights.Init(1.);
       if ( C->IsRational()) C->Weights(Weights);
 
-      Standard_Integer nbUSpans;
       Standard_Real AlfaU;
       NbUKnots = 4;
-      nbUSpans = 3;
       AlfaU    = M_PI / 3.;
       NbUPoles = 6;
 
Index: oce/src/GeomFill/GeomFill_LocationGuide.cxx
===================================================================
--- oce.orig/src/GeomFill/GeomFill_LocationGuide.cxx
+++ oce/src/GeomFill/GeomFill_LocationGuide.cxx
@@ -282,7 +282,9 @@ static void InGoodPeriod(const Standard_
   Sup(3) = Ul + Delta/10;
 
   // JALONNEMENT
+#if DEB
   DeltaU = (Ul-Uf)/(2+NbKnots);
+#endif
   if (uperiodic) UPeriod = Ul-Uf;
 
   for (ii=1; ii<=myNbPts; ii++) {
Index: oce/src/GeomInt/GeomInt_IntSS_1.cxx
===================================================================
--- oce.orig/src/GeomInt/GeomInt_IntSS_1.cxx
+++ oce/src/GeomInt/GeomInt_IntSS_1.cxx
@@ -407,10 +407,9 @@ Standard_Real ProjectPointOnSurf::LowerD
 	(Handle(IntPatch_GLine)::DownCast(L)->Ellipse());
     }
     //
-    Standard_Real aPeriod, aNul, aRealEpsilon;
+    Standard_Real aPeriod, aRealEpsilon;
     //
     aRealEpsilon=RealEpsilon();
-    aNul=0.;
     aPeriod=M_PI+M_PI;
     //
     aNbParts=myLConstruct.NbParts();
Index: oce/src/GeometryTest/GeometryTest_APICommands.cxx
===================================================================
--- oce.orig/src/GeometryTest/GeometryTest_APICommands.cxx
+++ oce/src/GeometryTest/GeometryTest_APICommands.cxx
@@ -562,14 +562,9 @@ void GeometryTest::APICommands(Draw_Inte
   if (done) return;
 
   done = Standard_True;
-  const char* g;
-
-  g = "GEOMETRY curves and surfaces analysis";
 
   theCommands.Add("proj", "proj curve/surf x y z [extrema algo: g(grad)/t(tree)]",__FILE__, proj);
 
-  g = "GEOMETRY approximations";
-
   theCommands.Add("appro", "appro result nbpoint [curve]",__FILE__, appro);
   theCommands.Add("surfapp","surfapp result nbupoint nbvpoint x y z ....",
 		  __FILE__,
Index: oce/src/HLRBRep/HLRBRep_PolyAlgo.cxx
===================================================================
--- oce.orig/src/HLRBRep/HLRBRep_PolyAlgo.cxx
+++ oce/src/HLRBRep/HLRBRep_PolyAlgo.cxx
@@ -2520,10 +2520,12 @@ HLRBRep_PolyAlgo::InsertOnOutLine (TColS
       TTMa[2][0] = ttma.Value(3,1);
       TTMa[2][1] = ttma.Value(3,2);
       TTMa[2][2] = ttma.Value(3,3);
-      Standard_Integer iseg,nbT,nbS,nbN;
+      Standard_Integer iseg,nbS;
 
-      nbT = (*pid)->NbTData();
-      nbN = (*pid)->NbPINod();
+#ifdef DEB
+      Standard_Integer nbT = (*pid)->NbTData();
+      Standard_Integer nbN = (*pid)->NbPINod();
+#endif
       nbS = (*pid)->NbPISeg();
 
 #ifdef DEB
@@ -2609,8 +2611,10 @@ HLRBRep_PolyAlgo::InsertOnOutLine (TColS
       if (IntOutL)
 	(*pid)->IntOutL(Standard_True);
 
+#ifdef DEB
       nbT = (*pid)->NbTData();
       nbN = (*pid)->NbPINod();
+#endif
       nbS = (*pid)->NbPISeg();
 
 #ifdef DEB
Index: oce/src/IFSelect/IFSelect_WorkSession.cxx
===================================================================
--- oce.orig/src/IFSelect/IFSelect_WorkSession.cxx
+++ oce/src/IFSelect/IFSelect_WorkSession.cxx
@@ -3434,8 +3434,6 @@ void IFSelect_WorkSession::DumpModel
     if (level == 5 || level ==  8) mode = IFSelect_CountByItem;
     if (level == 6 || level ==  9) mode = IFSelect_ListByItem;
     if (level == 7 || level == 10) mode = IFSelect_EntitiesByItem;
-    Standard_Boolean failsonly = Standard_False;
-    if (level < 8 && level != 4) failsonly = Standard_True;
     PrintCheckList (ModelCheckList(),Standard_False, mode);
   } else {
     if (level == 3) S << "        ********  Check Model (Fails)  ********"<<endl;
Index: oce/src/IntPatch/IntPatch_LineConstructor.cxx
===================================================================
--- oce.orig/src/IntPatch/IntPatch_LineConstructor.cxx
+++ oce/src/IntPatch/IntPatch_LineConstructor.cxx
@@ -1068,7 +1068,7 @@ static void TestWLineToRLine(const IntPa
 	// check that the middle point is on arc
 	(WLine->Point(midInd).*piParOnS)(utst,vtst);
 	if (midInd == ParamMinOnLine) {
-	  Standard_Real utst1,vtst1;
+	  Standard_Real utst1=0.0,vtst1=0.0;
 	  (WLine->Point(midInd+1).*piParOnS)(utst1,vtst1);
 	  utst = (utst+utst1)*0.5;
 	  vtst = (vtst+vtst1)*0.5;
Index: oce/src/IntPolyh/IntPolyh_MaillageAffinage.cxx
===================================================================
--- oce.orig/src/IntPolyh/IntPolyh_MaillageAffinage.cxx
+++ oce/src/IntPolyh/IntPolyh_MaillageAffinage.cxx
@@ -374,7 +374,7 @@ void IntPolyh_MaillageAffinage::FillArra
   Standard_Boolean bDegI, bDeg;
   Standard_Integer aNbU, aNbV, iCnt, i, j;
   Standard_Integer aID1, aID2, aJD1, aJD2;
-  Standard_Real Tol, resol, u0, v0, u1, v1, aU, aV, aMag;
+  Standard_Real Tol, resol, aU, aV, aMag;
   Standard_Real aX, aY, aZ;
   gp_Pnt aP;
   gp_Vec aDU, aDV, aNorm;
@@ -386,10 +386,6 @@ void IntPolyh_MaillageAffinage::FillArra
   IntPolyh_ArrayOfPoints &TPoints=(SurfID==1)? TPoints1:TPoints2;
   //
   resol = gp::Resolution();
-  u0 = Upars(1);
-  v0 = Vpars(1);
-  u1 = Upars(aNbU);
-  v1 = Vpars(aNbV);
   //
   IntCurveSurface_ThePolyhedronOfHInter polyhedron(aS, Upars, Vpars);
   Tol=polyhedron.DeflectionOverEstimation();
Index: oce/src/IntTools/IntTools_BeanBeanIntersector.cxx
===================================================================
--- oce.orig/src/IntTools/IntTools_BeanBeanIntersector.cxx
+++ oce/src/IntTools/IntTools_BeanBeanIntersector.cxx
@@ -1277,10 +1277,9 @@ Standard_Integer FindMaxDistPC(const Sta
 			       Standard_Real& aDmax, 
 			       Standard_Real& aT1max) 
 {
-  Standard_Integer iErr, iCnt;
-  Standard_Real aGS, aXP, aA, aB, aXL, aYP, aYL, aT2P, aT2L, aX0;
+  Standard_Integer iErr;
+  Standard_Real aGS, aXP, aA, aB, aXL, aYP, aYL, aT2P, aT2L;
   //
-  iCnt=0;
   iErr=0;
   aDmax=0.;
   //
@@ -1324,7 +1323,6 @@ Standard_Integer FindMaxDistPC(const Sta
     }
     //
     if ((aB-aA)<aEps1) {
-      aX0=0.5*(aA+aB);
       break;
     }
   }// while(1) {
Index: oce/src/IntTools/IntTools_EdgeFace.cxx
===================================================================
--- oce.orig/src/IntTools/IntTools_EdgeFace.cxx
+++ oce/src/IntTools/IntTools_EdgeFace.cxx
@@ -422,7 +422,8 @@ Standard_Boolean IntTools_EdgeFace::IsPr
 //=======================================================================
 Standard_Real IntTools_EdgeFace::DistanceFunction(const Standard_Real t)
 {
-  Standard_Real Umin, Usup, Vmin, Vsup, aD;
+  Standard_Real aD;
+
   //
   gp_Pnt P;
   myC.D0(t, P);
@@ -435,11 +436,6 @@ Standard_Real IntTools_EdgeFace::Distanc
     return aD; 
   }
   
-  Umin=myS.FirstUParameter();
-  Usup=myS.LastUParameter();
-  Vmin=myS.FirstVParameter();
-  Vsup=myS.LastVParameter ();
-  
   //
   Standard_Boolean bFlag = Standard_False;
 
Index: oce/src/LocOpe/LocOpe_SplitDrafts.cxx
===================================================================
--- oce.orig/src/LocOpe/LocOpe_SplitDrafts.cxx
+++ oce/src/LocOpe/LocOpe_SplitDrafts.cxx
@@ -1603,10 +1603,9 @@ static TopoDS_Edge  NewEdge(const TopoDS
   Standard_Real prmf=0,prml=0;
   GeomAdaptor_Curve TheCurve;
 	
-  Standard_Integer i,imin,k;
+  Standard_Integer i,k;
   gp_Pnt pvf = BRep_Tool::Pnt(V1);
   gp_Pnt pvl = BRep_Tool::Pnt(V2);
-  imin = 0;
   for (i=1; i<= i2s.NbLines(); i++) {
     TheCurve.Load(i2s.Line(i));
     Extrema_ExtPC myExtPC(pvf,TheCurve);
Index: oce/src/MAT2d/MAT2d_Tool2d.cxx
===================================================================
--- oce.orig/src/MAT2d/MAT2d_Tool2d.cxx
+++ oce/src/MAT2d/MAT2d_Tool2d.cxx
@@ -406,8 +406,7 @@ void MAT2d_Tool2d::TrimBisec (      Bise
   
   //gp_Vec2d             Tan1,Tan2;
   gp_Pnt2d             Ori; //PEdge;
-  Standard_Integer     IPrec,INext;
-  IPrec = (IndexEdge == 1)  ? theCircuit->NumberOfItems() : (IndexEdge - 1);
+  Standard_Integer     INext;
   INext = (IndexEdge == theCircuit->NumberOfItems()) ? 1  : (IndexEdge + 1);
   
   Handle(Standard_Type) EdgeType = theCircuit->Value(IndexEdge)->DynamicType();
Index: oce/src/OSD/OSD_signal_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_signal_WNT.cxx
+++ oce/src/OSD/OSD_signal_WNT.cxx
@@ -525,7 +525,7 @@ LONG _osd_debug ( void ) {
   TCHAR               keyValue[ MAX_PATH ];
   TCHAR               cmdLine[ MAX_PATH ];
   SECURITY_ATTRIBUTES sa;
-  PROCESS_INFORMATION pi;
+  PROCESS_INFORMATION pi = {};
   STARTUPINFO         si;
   bool Ret = true;
     
Index: oce/src/OpenGl/OpenGl_Trihedron.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Trihedron.cxx
+++ oce/src/OpenGl/OpenGl_Trihedron.cxx
@@ -440,10 +440,8 @@ void OpenGl_Trihedron::redrawZBuffer (co
   /* Position des Axes */
   GLdouble TriedronAxeX[3] = { 1.0, 0.0, 0.0 };
   GLdouble TriedronAxeY[3] = { 0.0, 1.0, 0.0 };
-  GLdouble TriedronAxeZ[3] = { 0.0, 0.0, 1.0 };
   TriedronAxeX[0] = L;
   TriedronAxeY[1] = L;
-  TriedronAxeZ[2] = L;
 
   glMatrixMode(GL_MODELVIEW);
 
Index: oce/src/Primitives/Primitives_Wedge.gxx
===================================================================
--- oce.orig/src/Primitives/Primitives_Wedge.gxx
+++ oce/src/Primitives/Primitives_Wedge.gxx
@@ -601,10 +601,8 @@ const TheWire& Primitives_Wedge::Wire
       dd3 = Primitives_YMax;
       dd4 = Primitives_XMin;
       break;
-#ifndef DEB
     default:
       break;
-#endif
     };
 
     myBuilder.MakeWire(myWires[i]);
@@ -816,10 +814,9 @@ const TheEdge& Primitives_Wedge::Edge
       dd1 = Primitives_YMin;
       dd2 = Primitives_YMax;
       break;
-#ifndef DEB
+
     default:
       break;
-#endif
     };
     
     gp_Lin L = Line(d1,d2);
Index: oce/src/ProjLib/ProjLib_ProjectedCurve.cxx
===================================================================
--- oce.orig/src/ProjLib/ProjLib_ProjectedCurve.cxx
+++ oce/src/ProjLib/ProjLib_ProjectedCurve.cxx
@@ -529,10 +529,9 @@ void ProjLib_ProjectedCurve::Load(const
 
 	if(IsTrimmed[0] || IsTrimmed[1]) {
 	  // Treatment only for surface of revolution
-	  Standard_Real u1, u2, v1, v2;
+	  Standard_Real u1, u2, v2;
 	  u1 = mySurface->FirstUParameter();
 	  u2 = mySurface->LastUParameter();
-	  v1 = mySurface->FirstVParameter();
 	  v2 = mySurface->LastVParameter();
 	  
 	  if(IsTrimmed[0]) {
Index: oce/src/QABugs/QABugs_2.cxx
===================================================================
--- oce.orig/src/QABugs/QABugs_2.cxx
+++ oce/src/QABugs/QABugs_2.cxx
@@ -88,7 +88,6 @@ static Standard_Integer OCC527(Draw_Inte
       aFaceBox.Get(X1,Y1,Z1,X2,Y2,Z2);
 
       // Build sections from Zmin to Zmax with step aStep
-      Standard_Boolean wasBuilt = Standard_False;
       double gmaxdist = 0.0, gzmax = Zmax;
       for (double zcur = Zmax; zcur > Zmin; zcur -= aStep)
       {
@@ -138,7 +137,6 @@ static Standard_Integer OCC527(Draw_Inte
               Standard_Real  toler = BRep_Tool::Tolerance(aV);
               double dist = pl.Distance(BRep_Tool::Pnt(aV));
               if (dist > lmaxdist) lmaxdist = dist;
-              wasBuilt = Standard_True;
       // If section was built check distance beetwen vertexes and plane of the one
       str[0] =0;
 //       if (wasBuilt) 
Index: oce/src/TPrsStd/TPrsStd_ConstraintTools.cxx
===================================================================
--- oce.orig/src/TPrsStd/TPrsStd_ConstraintTools.cxx
+++ oce/src/TPrsStd/TPrsStd_ConstraintTools.cxx
@@ -1753,7 +1753,6 @@ void TPrsStd_ConstraintTools::ComputeOff
   TCollection_ExtendedString txt;
   Handle(AIS_LengthDimension) ais;
   //Handle(AIS_Drawer) aDrawer;
-  Standard_Boolean NotNull = Standard_False;
 
   if (nbgeom == 1)
   {
@@ -1761,7 +1760,6 @@ void TPrsStd_ConstraintTools::ComputeOff
     if (!anAIS.IsNull())
     {
       ais = Handle(AIS_LengthDimension)::DownCast(anAIS);
-      NotNull = Standard_True; 
     }
 
     if (S1.ShapeType() == TopAbs_FACE && S2.ShapeType() == TopAbs_FACE)
@@ -1875,7 +1873,6 @@ void TPrsStd_ConstraintTools::ComputeOff
       }
     }
     S2 = nearest;
-    if( !anAIS.IsNull() ) NotNull = Standard_True; 
     ais = Handle(AIS_LengthDimension)::DownCast(anAIS);
     if (ais.IsNull()) {
       ais = new AIS_LengthDimension (S1,S2,aplane->Pln());
Index: oce/src/TestTopOpe/TestTopOpe_CORCommands.cxx
===================================================================
--- oce.orig/src/TestTopOpe/TestTopOpe_CORCommands.cxx
+++ oce/src/TestTopOpe/TestTopOpe_CORCommands.cxx
@@ -605,13 +605,19 @@ static Standard_Integer classifBnd2d(Dra
 
   if (w1.IsNull() || w2.IsNull() || Fref.IsNull()) return 1;
 
-  Standard_Integer sta = classi.ClassiBnd2d(w1,w2,toluv,Standard_True);
+#ifdef DEB
+  Standard_Integer sta =
+#endif
+    classi.ClassiBnd2d(w1,w2,toluv,Standard_True);
   di <<"wires classification : checklarge=true ";
 #ifdef DEB
   FUN_tool_coutsta(sta,1,2);
 #endif
 
-  sta = classi.ClassiBnd2d(w1,w2,toluv,Standard_False);
+#ifdef DEB
+  sta =
+#endif
+    classi.ClassiBnd2d(w1,w2,toluv,Standard_False);
   di <<"wires classification : checklarge=false ";
 #ifdef DEB
   FUN_tool_coutsta(sta,1,2);
Index: oce/src/TopOpeBRep/TopOpeBRep_EdgesFiller.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_EdgesFiller.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_EdgesFiller.cxx
@@ -101,8 +101,8 @@ void TopOpeBRep_EdgesFiller::Insert(cons
     const TopOpeBRep_Point2d P2D = myPEI->Point();
     Standard_Real par1 = P2D.Parameter(1);
     Standard_Real par2 = P2D.Parameter(2);
-    Standard_Integer if1 = 0; if ( ! myF1.IsNull() ) if1 = myPDS->AddShape(myF1,1);
-    Standard_Integer if2 = 0; if ( ! myF2.IsNull() ) if2 = myPDS->AddShape(myF2,2);
+    if ( ! myF1.IsNull() ) myPDS->AddShape(myF1,1);
+    if ( ! myF2.IsNull() ) myPDS->AddShape(myF2,2);
 
 #ifdef DEB
     Standard_Boolean pointofsegment = P2D.IsPointOfSegment();
Index: oce/src/TopOpeBRep/TopOpeBRep_EdgesIntersector.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_EdgesIntersector.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_EdgesIntersector.cxx
@@ -539,7 +539,9 @@ Standard_Boolean EdgesIntersector_checkT
       TopOpeBRepDS_Transition& T1 = P2D.ChangeTransition(1);
       TopOpeBRepDS_Transition& T2 = P2D.ChangeTransition(2);
       
+#ifdef DEB
       Standard_Boolean newT1=Standard_False, newT2=Standard_False;
+#endif
       Standard_Boolean isvertex12 = isvertex1 && isvertex2;
       Standard_Boolean isvertex22 = isvertex2 && !isvertex12;
       Standard_Boolean isvertex11 = isvertex1 && !isvertex12;
@@ -549,8 +551,10 @@ Standard_Boolean EdgesIntersector_checkT
       if (T1INT && isvertex2 && !isvertex1) {
 	const TopoDS_Vertex& V2 = P2D.Vertex(2);	
 	TopOpeBRepDS_Transition newT; Standard_Boolean computed = ::EdgesIntersector_checkT1D(myEdge1,myEdge2,V2,newT);
-	if (!computed) newT1 = Standard_False;
-	else           T1.Set(newT.Orientation(TopAbs_IN));
+	if (computed) T1.Set(newT.Orientation(TopAbs_IN));
+#ifdef DEB
+	else          newT1 = Standard_False;
+#endif
       }
 
       Standard_Boolean T2INT = (T2.Orientation(TopAbs_IN) == TopAbs_INTERNAL);
@@ -559,8 +563,10 @@ Standard_Boolean EdgesIntersector_checkT
       if (INTEXT2 && isvertex1 && !isvertex2) {
 	const TopoDS_Vertex& V1 = P2D.Vertex(1);
 	TopOpeBRepDS_Transition newT; Standard_Boolean computed = ::EdgesIntersector_checkT1D(myEdge2,myEdge1,V1,newT);
-	if (!computed) newT2 = Standard_False;
-	else           T2.Set(newT.Orientation(TopAbs_IN));
+	if (computed) T2.Set(newT.Orientation(TopAbs_IN));
+#ifdef DEB
+	else          newT2 = Standard_False;
+#endif
       }      
       
       // xpu121098 : cto900I7 (e12on,vG14)
Index: oce/src/TopOpeBRep/TopOpeBRep_FaceEdgeFiller.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_FaceEdgeFiller.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_FaceEdgeFiller.cxx
@@ -256,7 +256,9 @@ void TopOpeBRep_FaceEdgeFiller::StoreInt
   // append I to list LI
   LI.Append(I);
 
+#ifdef DEB
   Standard_Boolean appendtoG = Standard_False;
+#endif
   Standard_Integer G = I->Geometry();
 
   // append I to list of interference connected to G = I->Geometry()
@@ -269,12 +271,16 @@ void TopOpeBRep_FaceEdgeFiller::StoreInt
     break;
     
   case TopOpeBRepDS_SURFACE :
+#ifdef DEB
     appendtoG = Standard_True;
+#endif
     BDS.ChangeSurfaceInterferences(G).Append(I);
     break;
     
   case TopOpeBRepDS_CURVE :
+#ifdef DEB
     appendtoG = Standard_True;
+#endif
     BDS.ChangeCurveInterferences(G).Append(I);
     break;
     
Index: oce/src/TopOpeBRep/TopOpeBRep_FacesIntersector.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_FacesIntersector.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_FacesIntersector.cxx
@@ -1439,13 +1439,12 @@ static Standard_Boolean IsPointOK(const
   Extrema_ExtPS extPS(theTestPnt,theTestSurface,ExtTol,ExtTol);
   if( extPS.IsDone() && extPS.NbExt() > 0 )
     {
-      Standard_Integer i = 0, minext = 1;
+      Standard_Integer i = 0;
       Standard_Real MinDist2 = 1.e+200;
       for(i = 1; i <= extPS.NbExt(); i++)
 	{
 	  if( extPS.SquareDistance(i) < MinDist2 )
 	    {
-	      minext = i;
 	      MinDist2 = extPS.SquareDistance(i);
 	    }
 	}
Index: oce/src/TopOpeBRep/TopOpeBRep_vpr.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_vpr.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_vpr.cxx
@@ -982,9 +982,6 @@ void TopOpeBRep_FacesFiller::ProcessVPon
     }
   }//myLineINL
 
-  TopOpeBRepDS_Kind SKEPI; if(EPIfound) SKEPI=IEPI->SupportType();
-  TopOpeBRepDS_Kind SKCPI; if(CPIfound) SKCPI=ICPI->SupportType();
-
   // Gfound = VP corresponds with an existing geometry of ShapeIndex
   Standard_Boolean Gfound = ( EPIfound || CPIfound );  
 #ifdef DEB
Index: oce/src/TopOpeBRep/TopOpeBRep_vprclo.cxx
===================================================================
--- oce.orig/src/TopOpeBRep/TopOpeBRep_vprclo.cxx
+++ oce/src/TopOpeBRep/TopOpeBRep_vprclo.cxx
@@ -171,24 +171,25 @@ void TopOpeBRep_FacesFiller::ProcessVPon
   if (iOOFace == 0) iOOFace = myDS->AddShape(OOFace,OOShapeIndex);
 
   // current VPoint is on <edge>
+#ifdef DEB
   Standard_Integer SIedgeIndex = 0;
+#endif
   const TopoDS_Edge& edge = TopoDS::Edge(VP.Edge(ShapeIndex));
-  if (myDS->HasShape(edge)) SIedgeIndex = myDS->Shape(edge);
-  else                      myDS->AddShape(edge,ShapeIndex);
+  if (!myDS->HasShape(edge)) myDS->AddShape(edge,ShapeIndex);
+#ifdef DEB
+  else                       SIedgeIndex = myDS->Shape(edge);
+#endif
 
   Standard_Real paredge = VP.EdgeParameter(ShapeIndex);
   
   // dummy if !<hasOOedge>
   Standard_Integer OOedgeIndex = 0; 
-  Standard_Boolean OOclosing,OOisrest; OOclosing = OOisrest = Standard_False;
   TopoDS_Edge OOedge;
   if ( hasOOedge ) {
     TopoDS_Shape OOe;
     if (on2edges) OOe = VP.Edge(OOShapeIndex);
     else          OOe = VP.EdgeON(OOShapeIndex);
     OOedge = TopoDS::Edge(OOe);
-    OOisrest = myDS->IsSectionEdge(OOedge);
-    OOclosing = TopOpeBRepTool_ShapeTool::Closed(OOedge,OOFace);
     if (myDS->HasShape(OOedge)) OOedgeIndex = myDS->Shape(OOedge);
     else                        OOedgeIndex = myDS->AddShape(OOedge,OOShapeIndex);
   }
Index: oce/src/TopOpeBRepBuild/TopOpeBRepBuild_BuilderON.cxx
===================================================================
--- oce.orig/src/TopOpeBRepBuild/TopOpeBRepBuild_BuilderON.cxx
+++ oce/src/TopOpeBRepBuild/TopOpeBRepBuild_BuilderON.cxx
@@ -255,25 +255,31 @@ Standard_Boolean FUN_keepEON(const TopOp
   Standard_Boolean tFSEG=DEBTEFOR(B,iFS,iEG);if (tFSEG) debfillonfemess(iFS,iEG);
 #endif
   
+#ifdef DEB
   Standard_Boolean keep1=Standard_True;
   Standard_Boolean keep2=Standard_True;
+#endif
   Standard_Boolean keep3=Standard_True;
   Standard_Boolean isclosedFF=BRep_Tool::IsClosed(EG,FF);
   if (isclosedFF) {
+#ifdef DEB
     keep1=Standard_True;
     keep2=Standard_True;
+#endif
     keep3=Standard_True;
   }
   else {
     TopAbs_Orientation oEGFF=TopAbs_FORWARD;
     FUN_tool_orientEinF(EG,FF,oEGFF);
 
+#ifdef DEB
     TopAbs_Orientation omatFS1=TFE.Orientation(TB1);
     if (oEGFF == TopAbs_REVERSED) omatFS1=TopAbs::Complement(omatFS1);
     keep1=(omatFS1 == TopAbs_FORWARD);
 
     TopAbs_Orientation omatFS2=TFE.Orientation(TB1);
     keep2=(omatFS2 == oEGFF);
+#endif
 
     TopAbs_State tfeb=TFE.Before();
     TopAbs_State tfea=TFE.After();
Index: oce/src/TopOpeBRepBuild/TopOpeBRepBuild_GridSS.cxx
===================================================================
--- oce.orig/src/TopOpeBRepBuild/TopOpeBRepBuild_GridSS.cxx
+++ oce/src/TopOpeBRepBuild/TopOpeBRepBuild_GridSS.cxx
@@ -408,8 +408,11 @@ void TopOpeBRepBuild_Builder::GFillSurfa
                                                       TopOpeBRepBuild_ShellFaceSet& /*SFS*/)
 {
   TopAbs_State TB1,TB2; G1.StatesON(TB1,TB2);
-  TopAbs_ShapeEnum t1,t2,ShapeInterf;
-  G1.Type(t1,t2); ShapeInterf = t1;
+  TopAbs_ShapeEnum t1,t2;
+  G1.Type(t1,t2);
+#ifdef DEB
+  TopAbs_ShapeEnum ShapeInterf = t1;
+#endif
   
 #ifdef DEB
   Standard_Integer iSO; Standard_Boolean tSPS = GtraceSPS(SO1,iSO);
Index: oce/src/TopOpeBRepDS/TopOpeBRepDS_Dumper.cxx
===================================================================
--- oce.orig/src/TopOpeBRepDS/TopOpeBRepDS_Dumper.cxx
+++ oce/src/TopOpeBRepDS/TopOpeBRepDS_Dumper.cxx
@@ -266,7 +266,7 @@ Standard_OStream& TopOpeBRepDS_Dumper::P
                                              )
 {
 #ifdef DEB
-  Standard_Integer i,l,lb,n;
+  Standard_Integer i,l,lb=-1,n;
   
   Standard_Integer degree   = B->Degree();
   Standard_Integer nbpoles  = B->NbPoles();
Index: oce/src/TopOpeBRepDS/TopOpeBRepDS_EIR.cxx
===================================================================
--- oce.orig/src/TopOpeBRepDS/TopOpeBRepDS_EIR.cxx
+++ oce/src/TopOpeBRepDS/TopOpeBRepDS_EIR.cxx
@@ -415,7 +415,9 @@ static void FUN_reclSE2(const Standard_I
 //  I2 = (IN/OU(SE),VG,SE))} -> Ir = (IN/IN(SE),VG,SE)
 {
   reducedLI.Clear();
+#ifdef DEB
   Standard_Integer nI = LI.Extent(); // DEB
+#endif
 
   const TopoDS_Edge& E = TopoDS::Edge(BDS.Shape(SIX));
 
@@ -456,14 +458,18 @@ static void FUN_reclSE2(const Standard_I
 	if (O2 != cO1) {it2.Next(); continue;}
 	
 	LI.Remove(it2);
+#ifdef DEB
 	nI = LI.Extent(); // DEB
+#endif
 	hascO = Standard_True; break;
       } //it2
       
       if (hascO) {
 	I1->ChangeTransition().Set(TopAbs_INTERNAL);
 	reducedLI.Append(I1); LI.Remove(it1);
+#ifdef DEB
 	nI = LI.Extent(); // DEB
+#endif
       }
       else it1.Next();
     } //it1
Index: oce/src/TopOpeBRepDS/TopOpeBRepDS_EdgeInterferenceTool.cxx
===================================================================
--- oce.orig/src/TopOpeBRepDS/TopOpeBRepDS_EdgeInterferenceTool.cxx
+++ oce/src/TopOpeBRepDS/TopOpeBRepDS_EdgeInterferenceTool.cxx
@@ -107,12 +107,16 @@ void TopOpeBRepDS_EdgeInterferenceTool::
   }
 
   // V est un sommet de E ?
+#ifdef DEB
   Standard_Boolean VofE = Standard_False;
+#endif
   TopoDS_Iterator it(E,Standard_False);
   for ( ; it.More(); it.Next() ) {
     const TopoDS_Shape& S = it.Value();
     if ( S.IsSame(V) ) {
+#ifdef DEB
       VofE = Standard_True; 
+#endif
       break;
     }
   }
Index: oce/src/TopOpeBRepDS/TopOpeBRepDS_FIR.cxx
===================================================================
--- oce.orig/src/TopOpeBRepDS/TopOpeBRepDS_FIR.cxx
+++ oce/src/TopOpeBRepDS/TopOpeBRepDS_FIR.cxx
@@ -534,16 +534,20 @@ void TopOpeBRepDS_FIR::ProcessFaceInterf
   TopOpeBRepDS_ListOfInterference& LI = BDS.ChangeShapeInterferences(SIX);
   TopOpeBRepDS_ListOfInterference lw, lE, lFE, lFEF, lF; lw.Assign(LI);
 
-  Standard_Integer nF = ::FUN_selectTRASHAinterference(lw,TopAbs_FACE,lF);
-  Standard_Integer nFE = ::FUN_selectGKinterference(lF,MDSke,lFE);
-  Standard_Integer nFEF = ::FUN_selectSKinterference(lFE,MDSkf,lFEF);
-  Standard_Integer nE = ::FUN_selectTRASHAinterference(lw,TopAbs_EDGE,lE);
+#ifdef DEB
+  Standard_Integer nF, nFE, nFEF, nE;
+#endif
 
+  ::FUN_selectTRASHAinterference(lw,TopAbs_FACE,lF);
+  ::FUN_selectGKinterference(lF,MDSke,lFE);
+  ::FUN_selectSKinterference(lFE,MDSkf,lFEF);
+  ::FUN_selectTRASHAinterference(lw,TopAbs_EDGE,lE);
+
+#ifdef DEB
   nF = lF.Extent();
   nFE = lFE.Extent();
   nFEF = lFEF.Extent();
   nE = lE.Extent();
-#ifdef DEB
   if(TRC){
     if(nF||nFE||nFEF||nE){cout<<endl;cout<<"-----------------------"<<endl;}
     if(nF) {cout<<"FACE "<<SIX<<" (FACE) : "<<nF<<endl;FDS_dumpLI(lF,"  ");}
@@ -555,11 +559,11 @@ void TopOpeBRepDS_FIR::ProcessFaceInterf
 
   FUN_reduceEDGEgeometry(lFEF,BDS,SIX,MEsp);
 
+#ifdef DEB
   nF = lF.Extent();
   nFE = lFE.Extent();
   nFEF = lFEF.Extent();
   nE = lE.Extent();
-#ifdef DEB
   if(TRC){
     if(nF||nFE||nFEF||nE)cout<<endl;
     if(nF) {cout<<"FACE "<<SIX<<" (FACE) : "<<nF<<endl;FDS_dumpLI(lF,"  ");}
Index: oce/src/TopOpeBRepDS/TopOpeBRepDS_FilterFaceInterferences.cxx
===================================================================
--- oce.orig/src/TopOpeBRepDS/TopOpeBRepDS_FilterFaceInterferences.cxx
+++ oce/src/TopOpeBRepDS/TopOpeBRepDS_FilterFaceInterferences.cxx
@@ -112,13 +112,20 @@ void TopOpeBRepDS_Filter::ProcessFaceInt
   lw.Append(lall);
   lw.Append(lUU);
 
-  Standard_Integer nF = ::FUN_selectTRASHAinterference(lw,TopAbs_FACE,lF);
-  Standard_Integer nFE = ::FUN_selectGKinterference(lF,TopOpeBRepDS_EDGE,lFE);
-  Standard_Integer nFEF = ::FUN_selectSKinterference(lFE,TopOpeBRepDS_FACE,lFEF);
-  Standard_Integer nE = ::FUN_selectTRASHAinterference(lw,TopAbs_EDGE,lE);
+#ifdef DEB
+  Standard_Integer nF, nFE, nFEF, nE;
+#endif
 
+  ::FUN_selectTRASHAinterference(lw,TopAbs_FACE,lF);
+  ::FUN_selectGKinterference(lF,TopOpeBRepDS_EDGE,lFE);
+  ::FUN_selectSKinterference(lFE,TopOpeBRepDS_FACE,lFEF);
+  ::FUN_selectTRASHAinterference(lw,TopAbs_EDGE,lE);
 
 #ifdef DEB
+  nF = lF.Extent();
+  nFE = lFE.Extent();
+  nFEF = lFEF.Extent();
+  nE = lE.Extent();
   if(TRC){
     if(nF||nFE||nFEF||nE){cout<<endl;cout<<"-----------------------"<<endl;}
     if(nUU) {cout<<"FACE "<<SIX<<" UNKNOWN : "<<nUU<<endl;FDS_dumpLI(lUU,"  ");}
@@ -131,11 +138,11 @@ void TopOpeBRepDS_Filter::ProcessFaceInt
 
   ::FUN_FilterFace(lFEF,BDS,SIX);
 
+#ifdef DEB
   nF = lF.Extent();
   nFE = lFE.Extent();
   nFEF = lFEF.Extent();
   nE = lE.Extent();
-#ifdef DEB
   if(TRC){
     if(nF||nFE||nFEF||nE)cout<<endl;
     if(nF) {cout<<"FACE "<<SIX<<" (FACE) : "<<nF<<endl;FDS_dumpLI(lF,"  ");}
Index: oce/src/TopOpeBRepDS/TopOpeBRepDS_HDataStructure.cxx
===================================================================
--- oce.orig/src/TopOpeBRepDS/TopOpeBRepDS_HDataStructure.cxx
+++ oce/src/TopOpeBRepDS/TopOpeBRepDS_HDataStructure.cxx
@@ -763,7 +763,9 @@ void TopOpeBRepDS_HDataStructure::StoreI
   // append I to list LI
   LI.Append(I);
 
+#ifdef DEB
   Standard_Boolean appendtoG = Standard_False;
+#endif
   Standard_Integer G = I->Geometry();
 
   // append I to list of interference connected to G = I->Geometry()
@@ -776,12 +778,16 @@ void TopOpeBRepDS_HDataStructure::StoreI
     break;
     
   case TopOpeBRepDS_SURFACE :
+#ifdef DEB
     appendtoG = Standard_True;
+#endif
     myDS.ChangeSurfaceInterferences(G).Append(I);
     break;
     
   case TopOpeBRepDS_CURVE :
+#ifdef DEB
     appendtoG = Standard_True;
+#endif
     myDS.ChangeCurveInterferences(G).Append(I);
     break;
     
Index: oce/src/Units/Units_Sentence.cxx
===================================================================
--- oce.orig/src/Units/Units_Sentence.cxx
+++ oce/src/Units/Units_Sentence.cxx
@@ -53,9 +53,7 @@ Units_Sentence::Units_Sentence(const Han
 			       const Standard_CString astring)
 {
   Standard_Integer index;
-  Standard_Integer k,l;
   Standard_Size i,limchain;
-  char chain[255];
   Handle(Units_Token) token;
   Handle(Units_Token) referencetoken;
   
Index: oce/src/Visual3d/Visual3d_ViewManager.cxx
===================================================================
--- oce.orig/src/Visual3d/Visual3d_ViewManager.cxx
+++ oce/src/Visual3d/Visual3d_ViewManager.cxx
@@ -661,14 +661,9 @@ TColStd_Array2OfReal TMap_Matrix_Inv (0,
 
 Standard_Real Dx, Dy, Ratio;
 Visual3d_SetIteratorOfSetOfView MyIterator(MyDefinedView);
-Standard_Integer j;
 
 Standard_Integer stop = 0;
 
-Standard_Boolean BResult;
-
-		j = MyDefinedView.Extent ();
-
 		while ((! stop) && (MyIterator.More ())) {
 		    if (TheCView.ViewId ==
 			(MyIterator.Value ())->Identification ()) {
@@ -684,10 +679,10 @@ Standard_Boolean BResult;
 		}
 
 		// View Mapping Transformation and View Clip, inversion
-		BResult = Aspect::Inverse (TMap_Matrix, TMap_Matrix_Inv);
+		Aspect::Inverse (TMap_Matrix, TMap_Matrix_Inv);
 
 		// View Orientation Transformation, inversion
-		BResult = Aspect::Inverse (TOri_Matrix, TOri_Matrix_Inv);
+		Aspect::Inverse (TOri_Matrix, TOri_Matrix_Inv);
 
 		// (AU, AV) : Device Coordinate Space
 		// DCS -> NPCS Normalized Projection Coordinate Space
@@ -798,14 +793,9 @@ TColStd_Array2OfReal TMap_Matrix_Inv (0,
 
 Standard_Real Dx, Dy, Ratio;
 Visual3d_SetIteratorOfSetOfView MyIterator(MyDefinedView);
-Standard_Integer j;
 
 Standard_Integer stop = 0;
 
-Standard_Boolean BResult;
-
-		j = MyDefinedView.Extent ();
-
 		while ((! stop) && (MyIterator.More ())) {
 		    if (TheCView.ViewId ==
 			(MyIterator.Value ())->Identification ()) {
@@ -821,10 +811,10 @@ Standard_Boolean BResult;
 		}
 
 		// View Mapping Transformation and View Clip, inversion
-		BResult = Aspect::Inverse (TMap_Matrix, TMap_Matrix_Inv);
+		Aspect::Inverse (TMap_Matrix, TMap_Matrix_Inv);
 
 		// View Orientation Transformation, inversion
-		BResult = Aspect::Inverse (TOri_Matrix, TOri_Matrix_Inv);
+		Aspect::Inverse (TOri_Matrix, TOri_Matrix_Inv);
 
 		// (AU, AV) : Device Coordinate Space
 		// DCS -> NPCS Normalized Projection Coordinate Space
Index: oce/src/math/math_TrigonometricFunctionRoots.cxx
===================================================================
--- oce.orig/src/math/math_TrigonometricFunctionRoots.cxx
+++ oce/src/math/math_TrigonometricFunctionRoots.cxx
@@ -132,7 +132,7 @@ void math_TrigonometricFunctionRoots::Pe
   Standard_Real Teta, X;
   Standard_Real Eps, Tol1 = 1.e-15;
   TColStd_Array1OfReal ko(1,5), Zer(1,4);
-  Standard_Boolean Flag3, Flag4;
+  Standard_Boolean Flag4;
   InfiniteStatus = Standard_False;
   Done = Standard_True;
 
@@ -345,7 +345,6 @@ void math_TrigonometricFunctionRoots::Pe
     X = Teta -MyBorneInf;
     if ((X >= (-Epsilon(Delta))) && (X <= Delta+ Epsilon(Delta))) {
       X = Teta;
-      Flag3 = Standard_False;
 
       // Appel de Newton:
       //OCC541(apo):  Standard_Real TetaNewton=0;  
