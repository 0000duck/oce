commit 80eecd6bef6eeecf90f56c180fe7f59c6bf258c4
Author: Jacob Abel <thatcadguy@users.noreply.github.com>
Date:   Fri May 2 13:44:10 2014 -0700

    [clang-warning-fix][tmpnam-dangerous]
    
    Clang 3.5 reports using tmpnam() as dangerous and to use mkstemp() instead. I believe this change will produce the same behavior as the original code but not 100% sure as I'm not very familiar with POSIX-only functions.

Index: oce/src/OSD/OSD_File.cxx
===================================================================
--- oce.orig/src/OSD/OSD_File.cxx
+++ oce/src/OSD/OSD_File.cxx
@@ -267,17 +267,15 @@ OSD_File OSD_File::BuildTemporary(){
 
 #else 
  OSD_File result;
- char *name = tmpnam((char*) 0) ;
-
+ char name[] = "/tmp/oce.XXXXXX";
+ result.myFileChannel = mkstemp( name );
 
  TCollection_AsciiString aName ( name ) ;
  OSD_Path aPath( aName ) ;
 
  result.SetPath( aPath ) ;
 
- result.myFILE  = fopen( name, "w+" ) ;
-
- result.myFileChannel = fileno( (FILE*)result.myFILE );
+ result.myFILE  = fdopen( result.myFileChannel, "w+" ) ;
 
 #endif
 
Index: oce/src/OSD/OSD_Directory.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Directory.cxx
+++ oce/src/OSD/OSD_Directory.cxx
@@ -84,16 +84,17 @@ OSD_Directory OSD_Directory::BuildTempor
 OSD_Protection          Protect;
 OSD_Directory           aDirectoryToReturn;
 Standard_Integer        internal_prot;
-Standard_CString        name = tmpnam(NULL);
-TCollection_AsciiString aString (name);
+char dirfmt[] = "/tmp/oceXXXXXX";
 
  internal_prot = Protect.Internal();
 
- umask ( 0 );
- mkdir (name, (mode_t)internal_prot);
+ umask ( (mode_t)(~internal_prot) ); // indirectly impose internal_prot on mkdtemp call
+ char *name = mkdtemp(dirfmt);
+ umask(0); // reset umask
  unlink(name);//Destroys link but directory still exists while 
               //current process lives.
 
+ TCollection_AsciiString aString (name);
  aDirectoryToReturn.SetPath ( aString );
  return aDirectoryToReturn;
 
