Index: oce/src/BOPAlgo/BOPAlgo_Builder_3.cxx
===================================================================
--- oce.orig/src/BOPAlgo/BOPAlgo_Builder_3.cxx
+++ oce/src/BOPAlgo/BOPAlgo_Builder_3.cxx
@@ -166,7 +166,7 @@ void BOPAlgo_Builder::FillIn3DParts(BOPC
 				    const BOPCol_BaseAllocator& )
 {
   Standard_Boolean bHasImage;
-  Standard_Integer i, k, aNbS, aNbLIF, nFP, aNbFP, aNbFIN, iIsIN;
+  Standard_Integer i, k, aNbS, aNbLIF, nFP, aNbFIN, iIsIN;
   TopoDS_Solid aSD;
   TopoDS_Iterator aIt;
   BRep_Builder aBB; 
@@ -299,8 +299,6 @@ void BOPAlgo_Builder::FillIn3DParts(BOPC
     aSelector.Clear();
     aSelector.SetBox(aBoxS);
     //
-    aNbFP=aBBTree.Select(aSelector);
-    //
     const BOPCol_ListOfInteger& aLIFP=aSelector.Indices();
     //
     // 2.7. Collect faces that are IN aSolid [ aLFIN ]
Index: oce/src/Bisector/Bisector_Inter.cxx
===================================================================
--- oce.orig/src/Bisector/Bisector_Inter.cxx
+++ oce/src/Bisector/Bisector_Inter.cxx
@@ -38,8 +38,7 @@
 #include <Draw_Appli.hxx>
 #include <DrawTrSurf_Curve2d.hxx>
 #include <Draw_Marker2D.hxx>
-#endif
-#ifdef DEB
+
 static Standard_Boolean Affich = Standard_False;
 #endif
 
Index: oce/src/BRepFill/BRepFill_Evolved.cxx
===================================================================
--- oce.orig/src/BRepFill/BRepFill_Evolved.cxx
+++ oce/src/BRepFill/BRepFill_Evolved.cxx
@@ -127,9 +127,11 @@
 #include <stdio.h>
 #endif
 
-#ifdef DEB
-static Standard_Boolean AffichGeom = Standard_False;
+#if defined(DRAW) || defined(DEB)
 static Standard_Boolean AffichEdge = Standard_False;
+#endif
+#ifdef DRAW
+static Standard_Boolean AffichGeom = Standard_False;
 static Standard_Integer NbFACES       = 0;
 static Standard_Integer NbTRIMFACES   = 0;
 static Standard_Integer NbVEVOS       = 0;
Index: oce/src/BRepFill/BRepFill_MultiLine.cxx
===================================================================
--- oce.orig/src/BRepFill/BRepFill_MultiLine.cxx
+++ oce/src/BRepFill/BRepFill_MultiLine.cxx
@@ -49,7 +49,7 @@
 #include <DrawTrSurf.hxx>
 #endif
 
-#ifdef DEB
+#ifdef DRAW
 static Standard_Boolean AffichCurve = Standard_False;
 static Standard_Integer NbProj = 1;
 #endif
Index: oce/src/BRepFill/BRepFill_OffsetWire.cxx
===================================================================
--- oce.orig/src/BRepFill/BRepFill_OffsetWire.cxx
+++ oce/src/BRepFill/BRepFill_OffsetWire.cxx
@@ -107,13 +107,14 @@
 #include <DBRep.hxx>
 #endif
 
-#ifdef DEB
+#if defined(DRAW) || defined(DEB)
+static Standard_Boolean AffichEdge  = Standard_False;
+#endif
+#ifdef DRAW
 static Standard_Boolean AffichGeom  = Standard_False;
 static Standard_Boolean Affich2d    = Standard_False;
-static Standard_Boolean AffichEdge  = Standard_False;
 static Standard_Integer NbTRIMEDGES = 0;
 static Standard_Integer NbOFFSET    = 0;
-static Standard_Integer NbEDGES     = 0;
 static Standard_Integer NbBISSEC    = 0;
 #ifndef WNT
 static char tname[100];
Index: oce/src/BRepOffset/BRepOffset_Inter2d.cxx
===================================================================
--- oce.orig/src/BRepOffset/BRepOffset_Inter2d.cxx
+++ oce/src/BRepOffset/BRepOffset_Inter2d.cxx
@@ -48,8 +48,7 @@
 
 #ifdef DRAW 
 #include <DBRep.hxx>
-#endif
-#ifdef DEB
+
 #ifndef WNT
 extern Standard_Integer AffichInt2d;
 #else
@@ -1410,7 +1409,7 @@ void BRepOffset_Inter2d::Compute (const
 				  const TopTools_IndexedMapOfShape& NewEdges,
 				  const Standard_Real               Tol)
 {
-#ifdef DEB
+#ifdef DRAW
   NbF2d++;
   NbE2d = 0;
 #endif 
Index: oce/src/BRepOffset/BRepOffset_MakeLoops.cxx
===================================================================
--- oce.orig/src/BRepOffset/BRepOffset_MakeLoops.cxx
+++ oce/src/BRepOffset/BRepOffset_MakeLoops.cxx
@@ -36,7 +36,7 @@
 #ifdef DRAW
 #include <DBRep.hxx>
 #endif
-#ifdef DEB
+#ifdef DRAW
 Standard_Integer NbF = 1;
 static Standard_Boolean Affich = Standard_False;
 //POP pour NT
Index: oce/src/BRepOffset/BRepOffset_Tool.cxx
===================================================================
--- oce.orig/src/BRepOffset/BRepOffset_Tool.cxx
+++ oce/src/BRepOffset/BRepOffset_Tool.cxx
@@ -145,9 +145,11 @@
 #include <DBRep.hxx>
 #endif
 
-#ifdef DEB       
-Standard_Boolean AffichInter  = Standard_False;
+#if defined(DRAW) || defined(DEB)
 static Standard_Boolean AffichExtent = Standard_False;
+#endif
+#ifdef DRAW
+Standard_Boolean AffichInter  = Standard_False;
 static Standard_Integer NbNewEdges  = 1;
 static Standard_Integer NbFaces     = 1;
 static Standard_Integer NbFOB       = 1;
Index: oce/src/GeomFill/GeomFill_SweepSectionGenerator.cxx
===================================================================
--- oce.orig/src/GeomFill/GeomFill_SweepSectionGenerator.cxx
+++ oce/src/GeomFill/GeomFill_SweepSectionGenerator.cxx
@@ -38,8 +38,7 @@
 
 #ifdef DRAW
 #include <DrawTrSurf.hxx>
-#endif
-#ifdef DEB
+
 static Standard_Boolean Affich     = Standard_False;
 static Standard_Integer NbSECTIONS = 0;
 #endif
Index: oce/src/ChFi3d/ChFi3d_Builder_C2.cxx
===================================================================
--- oce.orig/src/ChFi3d/ChFi3d_Builder_C2.cxx
+++ oce/src/ChFi3d/ChFi3d_Builder_C2.cxx
@@ -173,11 +173,8 @@ Standard_Integer ChFi3d_Builder::Perform
   // Otherwise the opposite face  
   // and the eventual intersection of 2 pcurves on this face are found.
 
-  ChFiDS_State Stat1,Stat2;
   Standard_Boolean isfirst1 = (Sens1 == 1);
   Standard_Boolean isfirst2 = (Sens2 == 1);
-  Stat1 = Corner1->Spine()->Status(isfirst1);
-  Stat2 = Corner2->Spine()->Status(isfirst2);
 /*#ifdef DEB
   Standard_Boolean evolcoin = ((Stat1 == ChFiDS_OnSame && Stat2 == ChFiDS_OnDiff) || 
 			       (Stat2 == ChFiDS_OnSame && Stat1 == ChFiDS_OnDiff));
Index: oce/src/DsgPrs/DsgPrs.cxx
===================================================================
--- oce.orig/src/DsgPrs/DsgPrs.cxx
+++ oce/src/DsgPrs/DsgPrs.cxx
@@ -483,16 +483,8 @@ void DsgPrs::ComputeFilletRadiusPresenta
       FilletCirc.SetRadius( Center.Distance( FirstPoint ) ); //***
       gp_Vec vec1( dir1 );
       vec1 *= FilletCirc.Radius();
-#ifdef DEB
-      gp_Pnt p1 =
-#endif
-                  Center.Translated( vec1 );
       gp_Vec vec2( dir2 );
       vec2 *= FilletCirc.Radius();
-#ifdef DEB
-      gp_Pnt p2 =
-#endif
-                  Center.Translated( vec2 );
       gp_Vec PosVec;
       if(! Center.IsEqual( Position, Precision::Confusion() ))
 	PosVec.SetXYZ( gp_Vec(Center, Position).XYZ() );
Index: oce/src/GeomPlate/GeomPlate_BuildPlateSurface.cxx
===================================================================
--- oce.orig/src/GeomPlate/GeomPlate_BuildPlateSurface.cxx
+++ oce/src/GeomPlate/GeomPlate_BuildPlateSurface.cxx
@@ -72,7 +72,9 @@
 // pour mes tests
 #ifdef DEB
 #include <OSD_Chronometer.hxx>
+#endif
 
+#ifdef DRAW
 static Standard_Integer Affich=0;
 // 0 : Pas de display
 // 1 : Display des Geometries et controle intermediaire
Index: oce/src/GeomProjLib/GeomProjLib.cxx
===================================================================
--- oce.orig/src/GeomProjLib/GeomProjLib.cxx
+++ oce/src/GeomProjLib/GeomProjLib.cxx
@@ -59,8 +59,7 @@
 
 #ifdef DRAW
 #include <DrawTrSurf.hxx>
-#endif
-#ifdef DEB
+
 static Standard_Boolean Affich = Standard_False;
 static Standard_Integer NBPROJ = 1;
 #endif
Index: oce/src/IntTools/IntTools.cxx
===================================================================
--- oce.orig/src/IntTools/IntTools.cxx
+++ oce/src/IntTools/IntTools.cxx
@@ -218,8 +218,7 @@
     anArray1OfRoots(j)=mySequenceOfRoots(j);
   }
   
-  IntTools_QuickSort aQS;
-  aQS.Sort(anArray1OfRoots, aComparator);
+  IntTools_QuickSort::Sort(anArray1OfRoots, aComparator);
   
   mySequenceOfRoots.Clear();
   for (j=1; j<=aNbRoots; j++) {
Index: oce/src/IntTools/IntTools_EdgeFace.cxx
===================================================================
--- oce.orig/src/IntTools/IntTools_EdgeFace.cxx
+++ oce/src/IntTools/IntTools_EdgeFace.cxx
@@ -691,9 +682,8 @@ Standard_Real IntTools_EdgeFace::Distanc
       anArray1OfRange(n+i).SetLast (aFSeq(i));
     }
     
-    IntTools_QuickSortRange aQuickSortRange;
     IntTools_CompareRange aComparator;
-    aQuickSortRange.Sort (anArray1OfRange, aComparator);
+    IntTools_QuickSortRange::Sort (anArray1OfRange, aComparator);
     
     // filling the  output arrays
     myArgsArray.Resize(k);
