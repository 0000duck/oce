commit aa01b53246d53374fe2284ae1df27236d93ae8bb
Author: Denis Barbier <bouzim@gmail.com>
Date:   Tue Mar 29 22:29:04 2011 +0200

    New --with-ftgl212 to declare FTGL 2.1.2 location
    
    Let --with-ftgl declare location of FTGL version > 2.1.2,
    for instance ftgl-2.1.3-rc5 which is the latest relased
    version to date.
    
    This will define a new HAVE_FTGL_NEWER212 macro, which is
    used in OpenGl_FontMgr.hxx and OpenGl_FontMgr.cxx.
    
    Let configure abort if Freetype or FTGL are not found and
    HAVE_GL is set to yes, compilation will then fail anyway.
    We could disable X11, but this is not what user expects.
    
    Source fixes needed to compile with recent FTGL have been
    submitted upstream, see
       http://www.opencascade.org/org/forum/thread_20128/

Index: oce/inc/OpenGl_FontMgr.hxx
===================================================================
--- oce.orig/inc/OpenGl_FontMgr.hxx
+++ oce/inc/OpenGl_FontMgr.hxx
@@ -6,7 +6,15 @@
 # include <stdlib.h>
 #endif
 
-#include <FTFont.h>
+#ifdef HAVE_CONFIG_H
+# include <config.h>
+#endif
+
+#ifdef HAVE_FTGL_NEWER212
+# include <FTGL/ftgl.h>
+#else
+# include <FTGL/FTFont.h>
+#endif
 
 #include <InterfaceGraphic.hxx>
 #include <TCollection_HAsciiString.hxx>
Index: oce/inc/OpenGl_TextRender.hxx
===================================================================
--- oce.orig/inc/OpenGl_TextRender.hxx
+++ oce/inc/OpenGl_TextRender.hxx
@@ -5,7 +5,7 @@
 #include <NCollection_DataMap.hxx>
 #include <TCollection_AsciiString.hxx>
 #include <TCollection_HAsciiString.hxx>
-#include <FTFont.h>
+#include <OpenGl_FontMgr.hxx>  // For FTFont
 
 #define NUM_FONT_SIZES 40
 #define NUM_CHAR_FONT 1024
Index: oce/src/OpenGl/OpenGl_FontMgr.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_FontMgr.cxx
+++ oce/src/OpenGl/OpenGl_FontMgr.cxx
@@ -1,10 +1,9 @@
 #include <OpenGl_FontMgr.hxx>
 
-#include <FTGLTextureFont.h>        
-#include <FTLibrary.h>
-#include <FTFace.h>
 #include <Standard_Stream.hxx>
 
+#include <FTGL/FTGLTextureFont.h>
+
 #undef TRACE
 
 #define DEFAULT_FONT_HEIGHT 16
@@ -60,7 +59,10 @@ OpenGl_FontMgr* OpenGl_FontMgr::instance
 void OpenGl_FontMgr::_initializeFontDB()
 {
   Handle(OSD_FontMgr) fntMgr = OSD_FontMgr::GetInstance();
-  if ( !fntMgr.IsNull() ) {
+  FT_Library library;
+  // FIXME: FT_Done_FreeType( library ) should be called on exit
+  int error = FT_Init_FreeType( &library );
+  if ( !fntMgr.IsNull() && !error) {
 
     OSD_NListOfSystemFont fontList = fntMgr->GetAvalableFonts();
     if ( fontList.Size() != 0 ) {
@@ -71,10 +73,11 @@ void OpenGl_FontMgr::_initializeFontDB()
         if ( it.Value()->FontAspect() == OSD_FA_Regular ) {
           //this workaround for fonts with names dependent on system locale.
           //for example: "Times New Roman Fett Kursive" or "Times New Roman Gras Italiqui"
-          FTFace face(it.Value()->FontPath()->ToCString());
-              
-          if ( face.Error() == FT_Err_Ok ) {
-            if ( (*face.Face())->style_flags == 0 ) {
+          FT_Face ftFace;
+          error = FT_New_Face(library,
+              it.Value()->FontPath()->ToCString(), 0, &ftFace);
+          if ( !error ) {
+            if ( ftFace->style_flags == 0 ) {
               info->SysFont = it.Value();
             }
             else {
@@ -82,24 +85,25 @@ void OpenGl_FontMgr::_initializeFontDB()
 #ifdef TRACE
               cout << "TKOpenGl::initializeFontDB() detected new font!\n"
                 << "\tFont Previous Name: " << it.Value()->FontName()->ToCString() << endl
-                << "\tFont New Name: " << (*face.Face())->family_name << endl
-                << "\tFont Aspect: " << (*face.Face())->style_flags << endl;
+                << "\tFont New Name: " << ftFace->family_name << endl
+                << "\tFont Aspect: " << ftFace->style_flags << endl;
 #endif
               OSD_FontAspect aspect = OSD_FA_Regular;
-              if ( (*face.Face())->style_flags == (FT_STYLE_FLAG_ITALIC | FT_STYLE_FLAG_BOLD) )
+              if ( ftFace->style_flags == (FT_STYLE_FLAG_ITALIC | FT_STYLE_FLAG_BOLD) )
                 aspect = OSD_FA_BoldItalic;
-              else if ( (*face.Face())->style_flags == FT_STYLE_FLAG_ITALIC )
+              else if ( ftFace->style_flags == FT_STYLE_FLAG_ITALIC )
                 aspect = OSD_FA_Italic;
-              else if ( (*face.Face())->style_flags == FT_STYLE_FLAG_BOLD )
+              else if ( ftFace->style_flags == FT_STYLE_FLAG_BOLD )
                 aspect = OSD_FA_Bold;
 
 #ifdef TRACE
               cout << "\tOSD_FontAspect: " << aspect << endl;
 #endif
               Handle(TCollection_HAsciiString) aFontName =
-                new TCollection_HAsciiString( (*face.Face())->family_name );
+                new TCollection_HAsciiString( ftFace->family_name );
               info->SysFont = new OSD_SystemFont( aFontName, aspect, it.Value()->FontPath() );
             }
+            FT_Done_Face(ftFace);
           }
           else
             continue;
