From 4a1888ce5c2e87f013c185a91110a9507d4286f3 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 8 Nov 2012 17:36:55 +0100
Subject: [PATCH 1/7] Use initptr_t under Win/mingw64
 (sizeof(long)<sizeof(void*))

---
 inc/TDF_LabelMapHasher.lxx          |    2 +-
 src/OSD/OSD_DirectoryIterator.cxx   |   12 ++++++------
 src/OSD/OSD_EnvironmentIterator.cxx |    2 +-
 src/OSD/OSD_File.cxx                |   14 +++++++-------
 src/OSD/OSD_FileIterator.cxx        |   12 ++++++------
 src/OSD/OSD_FileNode.cxx            |   18 +++++++++---------
 src/OSD/OSD_Process.cxx             |    2 +-
 src/OSD/OSD_SharedMemory.cxx        |    4 ++--
 src/OSD/OSD_Thread.cxx              |    2 +-
 src/OSD/OSD_WNT.cxx                 |    2 +-
 src/OSD/OSD_WNT_1.cxx               |    2 +-
 src/OSD/OSD_signal_WNT.cxx          |    2 +-
 src/Units/Units_Token.cxx           |    2 +-
 13 files changed, 38 insertions(+), 38 deletions(-)

From 041fc269871ccdf7e28c0926f1fe5932baa5558a Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 22 Nov 2012 12:49:16 +0100
Subject: [PATCH 2/7] Fix compilation error on Ubuntu12.10

error : 'intptr_t' was not declared in this scope.
Bug reported by @triggerfish1 after pull request #309 was merged.
---
 src/Units/Units_Token.cxx |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

From 09a16f72b5adff280b96bcb20afeb64f8cadfff5 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Thu, 22 Nov 2012 22:49:48 +0100
Subject: [PATCH 3/7] Replace labs(intptr_t) by uintptr_t

---
 inc/TDF_LabelMapHasher.lxx |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

From 890b35f31f9076458dde4177c04bbb37e4ca5cec Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Thu, 22 Nov 2012 23:03:23 +0100
Subject: [PATCH 4/7] Fix 4a1888c by using the right data type to avoid
 int<->pointer conversions

---
 inc/OSD_EnvironmentIterator.hxx     |    4 ++
 inc/OSD_FileNode.hxx                |    4 ++
 inc/OSD_SharedMemory.hxx            |    4 ++
 src/OSD/OSD_DirectoryIterator.cxx   |   18 ++++----
 src/OSD/OSD_EnvironmentIterator.cxx |    2 +-
 src/OSD/OSD_File.cxx                |   82 +++++++++++++++++------------------
 src/OSD/OSD_FileIterator.cxx        |   18 ++++----
 src/OSD/OSD_FileNode.cxx            |   16 +++----
 src/OSD/OSD_SharedMemory.cxx        |   10 ++---
 src/OSD/OSD_WNT.cxx                 |   20 ++++-----
 src/OSD/OSD_WNT_1.cxx               |    8 +---
 11 files changed, 96 insertions(+), 90 deletions(-)

From 1c637614d1bc7dc573ef53289f71651bfdef6d08 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sun, 25 Nov 2012 12:02:51 +0100
Subject: [PATCH 5/7] Fixes for WNT compilation: HANDLE should not be used in
 hxx files, since windows.h it's not included. Used
 specific data type for EnvironmentIterator LWAlign
 compilation fix

---
 inc/OSD_DirectoryIterator.hxx       |    2 +-
 inc/OSD_EnvironmentIterator.hxx     |    2 +-
 inc/OSD_FileIterator.hxx            |    2 +-
 inc/OSD_FileNode.hxx                |    2 +-
 inc/OSD_SharedMemory.hxx            |    2 +-
 src/OSD/OSD_EnvironmentIterator.cxx |    2 +-
 src/OSD/OSD_File.cxx                |    2 +-
 src/OSD/OSD_WNT_1.cxx               |   12 ++++++------
 8 files changed, 13 insertions(+), 13 deletions(-)

From 5a1bef14de1485a4208c3140ece88149c71c167a Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Fri, 30 Nov 2012 20:16:25 +0100
Subject: [PATCH 6/7] Fix for mingw on windows , proposed by Max
 (http://osdir.com/ml/oce-development/2012-11/msg00019.html)

---
 src/OpenGl/OpenGl_Context.cxx |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

From a8913b172927c547b7e005e15d289e0ca7914134 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Sat, 1 Dec 2012 18:25:06 +0100
Subject: [PATCH 7/7] Slightly amend 1c63761: use Standard_CString instead of
 Standard_Character* to drop casts

---
 inc/OSD_EnvironmentIterator.hxx     |    2 +-
 src/OSD/OSD_EnvironmentIterator.cxx |    8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

From 7d4cb3f5a62dff4ea9d70c8b9a4b05e3d5e6a8d0 Mon Sep 17 00:00:00 2001
From: Fotios Sioutis <sfotis@gmail.com>
Date: Thu, 6 Dec 2012 11:25:17 +0200
Subject: [PATCH] Missing headers and minor preprocessor fixes

Added stdint.h header for intptr_t declarations and fixed minor
preprocessor issue (wnt case under unix block & borland case).
---
 src/OSD/OSD_File.cxx       |    3 ++-
 src/OSD/OSD_FileNode.cxx   |    1 +
 src/OSD/OSD_Process.cxx    |    3 ++-
 src/OSD/OSD_Thread.cxx     |    1 +
 src/OSD/OSD_WNT_1.cxx      |    1 +
 src/OSD/OSD_signal_WNT.cxx |    1 +
 6 files changed, 8 insertions(+), 2 deletions(-)

From 5d6acda147986cb74ea6d92587b35c7eb3539420 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sun, 3 Mar 2013 15:13:14 +0100
Subject: [PATCH] Check compiler before including stdint.h

---
 src/OSD/OSD_File.cxx       |    2 ++
 src/OSD/OSD_FileNode.cxx   |    2 ++
 src/OSD/OSD_Process.cxx    |    2 ++
 src/OSD/OSD_Thread.cxx     |    2 ++
 src/OSD/OSD_WNT_1.cxx      |    2 ++
 src/OSD/OSD_signal_WNT.cxx |    2 ++
 6 files changed, 12 insertions(+)

Index: oce/inc/OSD_DirectoryIterator.hxx
===================================================================
--- oce.orig/inc/OSD_DirectoryIterator.hxx
+++ oce/inc/OSD_DirectoryIterator.hxx
@@ -102,7 +102,7 @@ Standard_Address myDescr;
 Standard_Address myEntry;
 Standard_Integer myInit;
 OSD_Error myError;
-Standard_Integer myHandle;
+Standard_Address myHandle;
 Standard_Address myData;
 Standard_Boolean myFirstCall;
 
Index: oce/inc/OSD_EnvironmentIterator.hxx
===================================================================
--- oce.orig/inc/OSD_EnvironmentIterator.hxx
+++ oce/inc/OSD_EnvironmentIterator.hxx
@@ -79,7 +79,11 @@ private:
 
 
 Standard_Address myEnv;
+#ifdef WNT
+Standard_CString myCount;
+#else
 Standard_Integer myCount;
+#endif
 OSD_Error myError;
 
 
Index: oce/inc/OSD_FileIterator.hxx
===================================================================
--- oce.orig/inc/OSD_FileIterator.hxx
+++ oce/inc/OSD_FileIterator.hxx
@@ -102,7 +102,7 @@ Standard_Address myDescr;
 Standard_Address myEntry;
 Standard_Integer myInit;
 OSD_Error myError;
-Standard_Integer myHandle;
+Standard_Address myHandle;
 Standard_Address myData;
 Standard_Boolean myFirstCall;
 
Index: oce/inc/OSD_FileNode.hxx
===================================================================
--- oce.orig/inc/OSD_FileNode.hxx
+++ oce/inc/OSD_FileNode.hxx
@@ -99,7 +99,11 @@ protected:
 
 
 OSD_Path myPath;
+#ifdef WNT
+Standard_Address myFileChannel;
+#else
 Standard_Integer myFileChannel;
+#endif
 OSD_Error myError;
 
 
Index: oce/inc/OSD_SharedMemory.hxx
===================================================================
--- oce.orig/inc/OSD_SharedMemory.hxx
+++ oce/inc/OSD_SharedMemory.hxx
@@ -101,7 +101,11 @@ private:
 
 
 
+#ifdef WNT
+Standard_Address myId;
+#else
 Standard_Integer myId;
+#endif
 Standard_Address myAddress;
 TCollection_AsciiString myName;
 Standard_Integer mySize;
Index: oce/inc/TDF_LabelMapHasher.lxx
===================================================================
--- oce.orig/inc/TDF_LabelMapHasher.lxx
+++ oce/inc/TDF_LabelMapHasher.lxx
@@ -23,6 +23,11 @@
 //Version	Date		Purpose
 //		0.0	Feb 13 1997	Creation
 
+#ifdef _MSC_VER
+#include <stddef.h>
+#else
+#include <stdint.h>
+#endif
 
 //=======================================================================
 //function : HashCode
@@ -35,7 +40,7 @@
 inline         Standard_Integer TDF_LabelMapHasher::HashCode
 //#endif
 (const TDF_Label& aLab, const Standard_Integer Upper) 
-{ return 1 + ( (int) (labs((long int) aLab.myLabelNode) % Upper) ); }
+{ return 1 + ( (Standard_Integer) (uintptr_t(aLab.myLabelNode) % Upper) ); }
 
  
 //=======================================================================
Index: oce/src/OSD/OSD_DirectoryIterator.cxx
===================================================================
--- oce.orig/src/OSD/OSD_DirectoryIterator.cxx
+++ oce/src/OSD/OSD_DirectoryIterator.cxx
@@ -208,7 +208,7 @@ OSD_DirectoryIterator :: OSD_DirectoryIt
                          ) {
 
  myFlag   = Standard_False;
- myHandle = ( Standard_Integer )INVALID_HANDLE_VALUE;
+ myHandle = INVALID_HANDLE_VALUE;
 
  where.SystemName ( myPlace );
 
@@ -223,15 +223,15 @@ void OSD_DirectoryIterator :: Destroy ()
 
  if ( myData != NULL ) HeapFree (  GetProcessHeap (), 0, myData  );
 
- if (  myHandle != ( Standard_Integer )INVALID_HANDLE_VALUE  )
+ if (  myHandle != INVALID_HANDLE_VALUE  )
 
-  FindClose (  ( HANDLE )myHandle  );
+  FindClose (  myHandle  );
 
 }  // end  OSD_DirectoryIterator :: Destroy
 
 Standard_Boolean OSD_DirectoryIterator :: More () {
 
- if (  myHandle == ( Standard_Integer )INVALID_HANDLE_VALUE  ) {
+ if (  myHandle == INVALID_HANDLE_VALUE  ) {
  
   TCollection_AsciiString wc = myPlace + TEXT( "/" ) + myMask;
 
@@ -239,11 +239,11 @@ Standard_Boolean OSD_DirectoryIterator :
             GetProcessHeap (), HEAP_GENERATE_EXCEPTIONS, sizeof ( WIN32_FIND_DATA )
            );
 
-  myHandle = ( Standard_Integer )FindFirstFile (
+  myHandle = FindFirstFile (
                                   wc.ToCString (), ( PWIN32_FIND_DATA )myData
                                  );
 
-  if (  myHandle == ( Standard_Integer )INVALID_HANDLE_VALUE  )
+  if (  myHandle == INVALID_HANDLE_VALUE  )
   
    _osd_wnt_set_error ( myError, OSD_WDirectoryIterator );
   
@@ -258,8 +258,8 @@ Standard_Boolean OSD_DirectoryIterator :
   
  } else if ( !myFlag ) {
  
-  FindClose (  ( HANDLE )myHandle  );
-  myHandle = ( Standard_Integer )INVALID_HANDLE_VALUE;
+  FindClose ( myHandle );
+  myHandle = INVALID_HANDLE_VALUE;
  
  }  // end if
 
@@ -275,7 +275,7 @@ void OSD_DirectoryIterator :: Next () {
  
   do {
   
-   if (   !FindNextFile (  ( HANDLE )myHandle, _FD  )   ) {
+   if (   !FindNextFile (  myHandle, _FD  )   ) {
    
     myFlag = Standard_False;
 
Index: oce/src/OSD/OSD_EnvironmentIterator.cxx
===================================================================
--- oce.orig/src/OSD/OSD_EnvironmentIterator.cxx
+++ oce/src/OSD/OSD_EnvironmentIterator.cxx
@@ -102,7 +102,7 @@ Standard_Integer OSD_EnvironmentIterator
 OSD_EnvironmentIterator :: OSD_EnvironmentIterator () {
 
  myEnv   = GetEnvironmentStrings ();
- myCount = ( Standard_Integer )myEnv;
+ myCount = reinterpret_cast<Standard_CString>(myEnv);
 
 }  // end constructor
 
@@ -114,7 +114,7 @@ void OSD_EnvironmentIterator :: Destroy
 
 Standard_Boolean OSD_EnvironmentIterator :: More () {
 
- return *(  ( Standard_CString )myCount  ) ? Standard_True : Standard_False;
+ return *myCount ? Standard_True : Standard_False;
 
 }  // end OSD_EnvironmentIterator :: More
 
@@ -122,7 +122,7 @@ void OSD_EnvironmentIterator :: Next ()
 
  if (  More ()  ) {
  
-  while (   *( Standard_CString )myCount  ) ++myCount;
+  while (   *myCount  ) ++myCount;
 
   ++myCount;
  
@@ -134,7 +134,7 @@ OSD_Environment OSD_EnvironmentIterator
 
  TCollection_AsciiString env, name, value;
 
- env = ( Standard_CString )myCount;
+ env = myCount;
 
  name  = env.Token (  TEXT( "=" ), 1  );
  value = env.Token (  TEXT( "=" ), 2  );
Index: oce/src/OSD/OSD_File.cxx
===================================================================
--- oce.orig/src/OSD/OSD_File.cxx
+++ oce/src/OSD/OSD_File.cxx
@@ -845,13 +845,16 @@ Standard_Boolean OSD_File::IsExecutable(
 
 #include <stdio.h>
 #include <io.h>
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 #include <Standard_PCharacter.hxx>
 
 #ifndef _INC_TCHAR
 # include <tchar.h>
 #endif  // _INC_TCHAR
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
+#if defined(__CYGWIN32__) || defined(__MINGW32__) || defined(__BORLANDC__)
 #define VAC
 #define _int64 int
 #endif
@@ -875,7 +878,7 @@ BOOL                 __fastcall _osd_wnt
                                 );
 BOOL                 __fastcall _osd_print (const Standard_PCharacter, Standard_CString );
 
-static void      __fastcall _test_raise ( Standard_Integer, Standard_CString );
+static void      __fastcall _test_raise ( HANDLE, Standard_CString );
 static DWORDLONG __fastcall _get_line   ( Standard_PCharacter&, DWORD );
 static int       __fastcall _get_buffer ( HANDLE, Standard_PCharacter&, DWORD, BOOL, BOOL );
 static DWORD     __fastcall _get_access_mask ( OSD_SingleProtection );
@@ -887,7 +890,7 @@ static OSD_SingleProtection __fastcall _
 
 typedef OSD_SingleProtection ( __fastcall *GET_PROT_FUNC ) ( DWORD );
 
-Standard_Integer __fastcall _get_file_type ( Standard_CString, Standard_Integer );
+Standard_Integer __fastcall _get_file_type ( Standard_CString, HANDLE );
 
 // ---------------------------------------------------------------------
 // Create an empty file object
@@ -928,7 +931,7 @@ void OSD_File :: Build (
    Standard_ProgramError::Raise("OSD_File::Read : it is a directory");
  }
                                         
- if (  ( HANDLE )myFileChannel != INVALID_HANDLE_VALUE  )
+ if (  myFileChannel != INVALID_HANDLE_VALUE  )
 
   RAISE(  TEXT( "OSD_File :: Build (): incorrect call - file already opened" )  );
 
@@ -939,9 +942,9 @@ void OSD_File :: Build (
 
   RAISE(  TEXT( "OSD_File :: Build (): incorrent call - no filename given" )  );
 
- myFileChannel = ( Standard_Integer )_open_file ( fName.ToCString (), Mode, OPEN_NEW );
+ myFileChannel = _open_file ( fName.ToCString (), Mode, OPEN_NEW );
 
- if (  ( HANDLE )myFileChannel == INVALID_HANDLE_VALUE  )
+ if (  myFileChannel == INVALID_HANDLE_VALUE  )
 
   _osd_wnt_set_error ( myError, OSD_WFile );
 
@@ -967,7 +970,7 @@ void OSD_File :: Open (
  TCollection_AsciiString fName;
 
 
- if (  ( HANDLE )myFileChannel != INVALID_HANDLE_VALUE  )
+ if (  myFileChannel != INVALID_HANDLE_VALUE  )
 
   RAISE(  TEXT( "OSD_File :: Open (): incorrect call - file already opened" )  );
 
@@ -978,9 +981,9 @@ void OSD_File :: Open (
 
   RAISE(  TEXT( "OSD_File :: Open (): incorrent call - no filename given" )  );
 
- myFileChannel = ( Standard_Integer )_open_file ( fName.ToCString (), Mode, OPEN_OLD );
+ myFileChannel = _open_file ( fName.ToCString (), Mode, OPEN_OLD );
 
- if (  ( HANDLE )myFileChannel == INVALID_HANDLE_VALUE  ) {
+ if (  myFileChannel == INVALID_HANDLE_VALUE  ) {
 
    _osd_wnt_set_error ( myError, OSD_WFile );
  }
@@ -1001,7 +1004,7 @@ void OSD_File :: Append (
  BOOL                    fNew = FALSE;
  TCollection_AsciiString fName;
 
- if (  ( HANDLE )myFileChannel != INVALID_HANDLE_VALUE  )
+ if (  myFileChannel != INVALID_HANDLE_VALUE  )
 
   RAISE(  TEXT( "OSD_File :: Append (): incorrect call - file already opened" )  );
 
@@ -1012,9 +1015,9 @@ void OSD_File :: Append (
 
   RAISE(  TEXT( "OSD_File :: Append (): incorrent call - no filename given" )  );
 
- myFileChannel = ( Standard_Integer )_open_file ( fName.ToCString (), Mode, OPEN_APPEND, &fNew );
+ myFileChannel = _open_file ( fName.ToCString (), Mode, OPEN_APPEND, &fNew );
 
- if (  ( HANDLE )myFileChannel == INVALID_HANDLE_VALUE  )
+ if (  myFileChannel == INVALID_HANDLE_VALUE  )
 
   _osd_wnt_set_error ( myError, OSD_WFile );
 
@@ -1119,7 +1122,7 @@ void OSD_File :: ReadLine (
  if ( myIO & FLAG_FILE ) {
  
   if (  !ReadFile (
-          ( HANDLE )myFileChannel, cBuffer, ( DWORD )NByte, &dwBytesRead, NULL
+          myFileChannel, cBuffer, ( DWORD )NByte, &dwBytesRead, NULL
          )
   ) {  // an error occured
 
@@ -1146,7 +1149,7 @@ void OSD_File :: ReadLine (
                                           // peek next character to see if it is a <LF>
 #endif
     if (  !ReadFile (
-            ( HANDLE )myFileChannel, ppeekChar, 1, &dwDummy, NULL
+            myFileChannel, ppeekChar, 1, &dwDummy, NULL
            )
     ) {
     
@@ -1158,7 +1161,7 @@ void OSD_File :: ReadLine (
     
      // adjust file position
 
-      SetFilePointer (  ( HANDLE )myFileChannel, -1, NULL, FILE_CURRENT  );
+      SetFilePointer (  myFileChannel, -1, NULL, FILE_CURRENT  );
 
     } else
      myIO |= FLAG_EOF;
@@ -1168,7 +1171,7 @@ void OSD_File :: ReadLine (
    } else {
 
     if ( dwSeekPos != 0 )
-     SetFilePointer (  ( HANDLE )myFileChannel, ( LONG )dwSeekPos, NULL, FILE_CURRENT  );
+     SetFilePointer (  myFileChannel, ( LONG )dwSeekPos, NULL, FILE_CURRENT  );
 
     NbyteRead = ( Standard_Integer )( eos - cBuffer );
 
@@ -1179,7 +1182,7 @@ void OSD_File :: ReadLine (
  } else if ( myIO & FLAG_SOCKET || myIO & FLAG_PIPE || myIO & FLAG_NAMED_PIPE ) {
 
   dwBytesRead = ( DWORD )_get_buffer (
-                          ( HANDLE )myFileChannel, cBuffer, ( DWORD )NByte,
+                          myFileChannel, cBuffer, ( DWORD )NByte,
                           TRUE, myIO & FLAG_SOCKET
                          );
 
@@ -1212,7 +1215,7 @@ void OSD_File :: ReadLine (
     NbyteRead = dwBytesRead; // (LD) always fits this case.
 
     dwDummy = _get_buffer (
-               ( HANDLE )myFileChannel, ppeekChar, 1, TRUE, myIO & FLAG_SOCKET
+               myFileChannel, ppeekChar, 1, TRUE, myIO & FLAG_SOCKET
               );
     if (  ( int )dwDummy == -1  ) {  // an error occured
    
@@ -1241,7 +1244,7 @@ void OSD_File :: ReadLine (
    Standard_PCharacter cDummyBuffer = new Standard_Character[ NByte + 3 ];
 
    _get_buffer (  // remove pending input
-    ( HANDLE )myFileChannel, cDummyBuffer, dwBytesRead, FALSE, myIO & FLAG_SOCKET
+    myFileChannel, cDummyBuffer, dwBytesRead, FALSE, myIO & FLAG_SOCKET
    );
    delete [] cDummyBuffer ;
 
@@ -1293,7 +1296,7 @@ void OSD_File :: ReadLine (
  if ( myIO & FLAG_FILE ) {
  
   if (  !ReadFile (
-          ( HANDLE )myFileChannel, cBuffer, ( DWORD )NByte, &dwBytesRead, NULL
+          myFileChannel, cBuffer, ( DWORD )NByte, &dwBytesRead, NULL
          )
   ) {  // an error occured
 
@@ -1320,7 +1323,7 @@ void OSD_File :: ReadLine (
                                           // peek next character to see if it is a <LF>
 #endif
     if (  !ReadFile (
-            ( HANDLE )myFileChannel, &peekChar, 1, &dwDummy, NULL
+            myFileChannel, &peekChar, 1, &dwDummy, NULL
            )
     ) {
     
@@ -1335,7 +1338,7 @@ void OSD_File :: ReadLine (
     
      else  // adjust file position
 
-      SetFilePointer (  ( HANDLE )myFileChannel, -1, NULL, FILE_CURRENT  );
+      SetFilePointer (  myFileChannel, -1, NULL, FILE_CURRENT  );
 
     } else
          
@@ -1345,7 +1348,7 @@ void OSD_File :: ReadLine (
 
    } else if ( dwSeekPos != 0 ) {
    
-    SetFilePointer (  ( HANDLE )myFileChannel, ( LONG )dwSeekPos, NULL, FILE_CURRENT  );
+    SetFilePointer (  myFileChannel, ( LONG )dwSeekPos, NULL, FILE_CURRENT  );
     NbyteRead = ( Standard_Integer )( eos - cBuffer );
 
    } else
@@ -1357,7 +1360,7 @@ void OSD_File :: ReadLine (
  } else if ( myIO & FLAG_SOCKET || myIO & FLAG_PIPE || myIO & FLAG_NAMED_PIPE ) {
 
   dwBytesRead = ( DWORD )_get_buffer (
-                          ( HANDLE )myFileChannel, cBuffer, ( DWORD )NByte,
+                          myFileChannel, cBuffer, ( DWORD )NByte,
                           TRUE, myIO & FLAG_SOCKET
                          );
 
@@ -1385,7 +1388,7 @@ void OSD_File :: ReadLine (
                                           // peek next character to see if it is a <LF>
 #endif
     dwDummy = _get_buffer (
-               ( HANDLE )myFileChannel, &peekChar, 1, TRUE, myIO & FLAG_SOCKET
+               myFileChannel, &peekChar, 1, TRUE, myIO & FLAG_SOCKET
               );
     eos     = cBuffer + dwBytesRead;
 
@@ -1416,7 +1419,7 @@ void OSD_File :: ReadLine (
     NbyteRead = ( Standard_Integer )( eos - cBuffer );
 
    _get_buffer (  // remove pending input
-    ( HANDLE )myFileChannel, cBuffer, dwBytesRead, FALSE, myIO & FLAG_SOCKET
+    myFileChannel, cBuffer, dwBytesRead, FALSE, myIO & FLAG_SOCKET
    );
    *eos = 0;
 
@@ -1458,7 +1461,7 @@ void OSD_File :: Read (
   RAISE(  TEXT( "OSD_File :: Read (): attempt to read from write only pipe" )  );
 
  if (  !ReadFile (
-         ( HANDLE )myFileChannel, Buffer, ( DWORD )Nbyte, &dwBytesRead, NULL
+         myFileChannel, Buffer, ( DWORD )Nbyte, &dwBytesRead, NULL
         )
  ) {
  
@@ -1504,7 +1507,7 @@ void OSD_File :: Write (
   RAISE(  TEXT( "OSD_File :: Write (): attempt to write to read only pipe" )  );
 
  if (  !WriteFile (
-         ( HANDLE )myFileChannel, Buffer, ( DWORD )Nbyte, &dwBytesWritten, NULL
+         myFileChannel, Buffer, ( DWORD )Nbyte, &dwBytesWritten, NULL
         ) || dwBytesWritten != ( DWORD )Nbyte
  )
 
@@ -1549,7 +1552,7 @@ void OSD_File :: Seek (
   }  // end switch
 
   if (  SetFilePointer (
-         ( HANDLE )myFileChannel, ( LONG )Offset, NULL, dwMoveMethod
+         myFileChannel, ( LONG )Offset, NULL, dwMoveMethod
         ) == 0xFFFFFFFF
   )
 
@@ -1569,9 +1572,9 @@ void OSD_File :: Close () {
 
  TEST_RAISE(  TEXT( "Close" )  );
 
- CloseHandle (  ( HANDLE )myFileChannel  );
+ CloseHandle (  myFileChannel  );
 
- myFileChannel = ( Standard_Integer )INVALID_HANDLE_VALUE;
+ myFileChannel = INVALID_HANDLE_VALUE;
  myIO          = 0;
 
 }  // end OSD_File :: Close
@@ -1595,7 +1598,7 @@ OSD_KindFile OSD_File :: KindOfFile () c
  OSD_KindFile     retVal;
  Standard_Integer flags;
 
- if (  ( HANDLE )myFileChannel == INVALID_HANDLE_VALUE  ) {
+ if (  myFileChannel == INVALID_HANDLE_VALUE  ) {
 
   TCollection_AsciiString fName;
 
@@ -1606,7 +1609,7 @@ OSD_KindFile OSD_File :: KindOfFile () c
    RAISE(  TEXT( "OSD_File :: KindOfFile (): incorrent call - no filename given" )  );
 
   flags = _get_file_type (
-            fName.ToCString (), ( Standard_Integer )INVALID_HANDLE_VALUE
+            fName.ToCString (), INVALID_HANDLE_VALUE
            );
 
  } else
@@ -1795,7 +1798,7 @@ void OSD_File :: SetLock ( const OSD_Loc
  if (Ret)
  {
   if (  !LockFileEx (
-          ( HANDLE )myFileChannel, dwFlags, 0, Size (), 0, &ovlp
+          myFileChannel, dwFlags, 0, Size (), 0, &ovlp
          )
   ) {
 
@@ -1819,7 +1822,7 @@ void OSD_File :: UnLock () {
  if ( ImperativeFlag ) {
  
   if (  !UnlockFile (
-          ( HANDLE )myFileChannel, 0, 0, Size (), 0
+          myFileChannel, 0, 0, Size (), 0
          )
   )
    
@@ -1857,7 +1860,7 @@ Standard_Integer OSD_File :: Size () {
  TEST_RAISE(  TEXT( "Size" )  );
 
  retVal = ( Standard_Integer )GetFileSize (
-                               ( HANDLE )myFileChannel, NULL
+                               myFileChannel, NULL
                               );
 
  if (  retVal == ( Standard_Integer )0xFFFFFFFF  )
@@ -1874,7 +1877,7 @@ Standard_Integer OSD_File :: Size () {
 
 void OSD_File :: Print ( const OSD_Printer& WhichPrinter ) {
 
- if (  ( HANDLE )myFileChannel != INVALID_HANDLE_VALUE  )
+ if (  myFileChannel != INVALID_HANDLE_VALUE  )
 
   RAISE(  TEXT( "OSD_File :: Print (): incorrect call - file opened" )  );
 
@@ -1895,7 +1898,7 @@ void OSD_File :: Print ( const OSD_Print
 
 Standard_Boolean OSD_File :: IsOpen () const {
 
- return ( HANDLE )myFileChannel != INVALID_HANDLE_VALUE;
+ return myFileChannel != INVALID_HANDLE_VALUE;
 
 }  // end OSD_File :: IsOpen
 
@@ -2170,11 +2173,11 @@ retry:
 }  // end _osd_wnt_protection_to_sd */
 
 
-static void __fastcall _test_raise ( Standard_Integer hFile, Standard_CString str ) {
+static void __fastcall _test_raise ( HANDLE hFile, Standard_CString str ) {
 
  Standard_Character buff[ 64 ];
 
- if (  ( HANDLE )hFile == INVALID_HANDLE_VALUE  ) {
+ if (  hFile == INVALID_HANDLE_VALUE  ) {
  
   _tcscpy (  buff, TEXT( "OSD_File :: " )  );
   _tcscat (  buff, str );
@@ -2241,7 +2244,7 @@ static DWORDLONG __fastcall _get_line (
  }  // end while
 
 #ifdef VAC
- retVal  = (DWORDLONG) ( ( (unsigned __int64) ((DWORD) buffer + dwBuffSize) ) << 32 );
+ retVal  = (DWORDLONG) ( ( (unsigned __int64) ((DWORD)(intptr_t) buffer + dwBuffSize) ) << 32 );
  retVal = (DWORDLONG) ( (unsigned __int64) retVal & (((unsigned __int64) 0xFFFFFFFF) << 32) );
 #else
  retVal  = (   (  ( DWORDLONG )( ( DWORD )buffer + dwBuffSize )  ) << 32   );
@@ -2667,16 +2670,16 @@ static HANDLE __fastcall _open_file (
 }  // end _open_file
 
 Standard_Integer __fastcall _get_file_type (
-                             Standard_CString fName, Standard_Integer fileHandle
+                             Standard_CString fName, HANDLE fileHandle
                             ) {
 
  Standard_Integer retVal = 0;
  DWORD            dwType;
  int              fileType;
 
- fileType = fileHandle == ( Standard_Integer )INVALID_HANDLE_VALUE ?
+ fileType = fileHandle == INVALID_HANDLE_VALUE ?
                           FILE_TYPE_DISK :
-                          GetFileType (  ( HANDLE )fileHandle  );
+                          GetFileType ( fileHandle );
 
  switch ( fileType ) {
  
Index: oce/src/OSD/OSD_FileIterator.cxx
===================================================================
--- oce.orig/src/OSD/OSD_FileIterator.cxx
+++ oce/src/OSD/OSD_FileIterator.cxx
@@ -292,7 +292,7 @@ OSD_FileIterator :: OSD_FileIterator (
                     ) {
 
  myFlag   = Standard_False;
- myHandle = ( Standard_Integer )INVALID_HANDLE_VALUE;
+ myHandle = INVALID_HANDLE_VALUE;
 
  where.SystemName ( myPlace );
 
@@ -307,15 +307,15 @@ void OSD_FileIterator :: Destroy () {
 
  if ( myData != NULL ) HeapFree (  GetProcessHeap (), 0, myData  );
 
- if (  myHandle != ( Standard_Integer )INVALID_HANDLE_VALUE  )
+ if (  myHandle != INVALID_HANDLE_VALUE  )
 
-  FindClose (  ( HANDLE )myHandle  );
+  FindClose (  myHandle  );
 
 }  // end  OSD_DirectoryIterator :: Destroy
 
 Standard_Boolean OSD_FileIterator :: More () {
 
- if (  myHandle == ( Standard_Integer )INVALID_HANDLE_VALUE  ) {
+ if (  myHandle == INVALID_HANDLE_VALUE  ) {
  
   TCollection_AsciiString wc = myPlace + TEXT( "/" ) + myMask;
 
@@ -323,11 +323,11 @@ Standard_Boolean OSD_FileIterator :: Mor
             GetProcessHeap (), HEAP_GENERATE_EXCEPTIONS, sizeof ( WIN32_FIND_DATA )
            );
 
-  myHandle = ( Standard_Integer )FindFirstFile (
+  myHandle = FindFirstFile (
                                   wc.ToCString (), ( PWIN32_FIND_DATA )myData
                                  );
 
-  if (  myHandle == ( Standard_Integer )INVALID_HANDLE_VALUE  )
+  if (  myHandle == INVALID_HANDLE_VALUE  )
   
    _osd_wnt_set_error ( myError, OSD_WDirectoryIterator );
   
@@ -342,8 +342,8 @@ Standard_Boolean OSD_FileIterator :: Mor
   
  } else if ( !myFlag ) {
  
-  FindClose (  ( HANDLE )myHandle  );
-  myHandle = ( Standard_Integer )INVALID_HANDLE_VALUE;
+  FindClose (  myHandle  );
+  myHandle = INVALID_HANDLE_VALUE;
  
  }  // end if
 
@@ -359,7 +359,7 @@ void OSD_FileIterator :: Next () {
  
   do {
   
-   if (   !FindNextFile (  ( HANDLE )myHandle, _FD  )   ) {
+   if (   !FindNextFile (  myHandle, _FD  )   ) {
    
     myFlag = Standard_False;
 
Index: oce/src/OSD/OSD_FileNode.cxx
===================================================================
--- oce.orig/src/OSD/OSD_FileNode.cxx
+++ oce/src/OSD/OSD_FileNode.cxx
@@ -460,6 +460,9 @@ Standard_Integer OSD_FileNode::Error()co
 #endif  // _INC_TCHAR
 
 #include <stdio.h>
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 
 #define TEST_RAISE( arg ) _test_raise (  fName, ( arg )  )
 #define RAISE( arg ) Standard_ProgramError :: Raise (  ( arg )  )
@@ -468,7 +471,7 @@ PSECURITY_DESCRIPTOR __fastcall _osd_wnt
 BOOL                 __fastcall _osd_wnt_sd_to_protection (
                                  PSECURITY_DESCRIPTOR pSD, OSD_Protection& prot, BOOL
                                 );
-Standard_Integer     __fastcall _get_file_type ( Standard_CString, Standard_Integer );
+Standard_Integer     __fastcall _get_file_type ( Standard_CString, HANDLE );
 
 void _osd_wnt_set_error ( OSD_Error&, OSD_WhoAmI, ... );
 
@@ -482,7 +485,7 @@ static void __fastcall _test_raise ( TCo
 
 OSD_FileNode::OSD_FileNode () {
 
- myFileChannel = ( Standard_Integer )INVALID_HANDLE_VALUE;
+ myFileChannel = INVALID_HANDLE_VALUE;
 
 }  // end constructor ( 1 )
 
@@ -493,7 +496,7 @@ OSD_FileNode::OSD_FileNode () {
 
 OSD_FileNode::OSD_FileNode ( const OSD_Path& Name ) {
 
- myFileChannel = ( Standard_Integer )INVALID_HANDLE_VALUE;
+ myFileChannel = INVALID_HANDLE_VALUE;
  myPath        = Name;
 
 }  // end constructor ( 2 )
@@ -563,7 +566,7 @@ void OSD_FileNode::Remove () {
  TEST_RAISE(  TEXT( "Remove" )  );
 
  switch (  _get_file_type (  fName.ToCString (),
-                             ( Standard_Integer )INVALID_HANDLE_VALUE )  ) {
+                             INVALID_HANDLE_VALUE )  ) {
 
   case FLAG_FILE:
 
@@ -611,7 +614,7 @@ void OSD_FileNode::Move ( const OSD_Path
  NewPath.SystemName ( fNameDst );
 
  switch (  _get_file_type ( fName.ToCString (),
-                            ( Standard_Integer )INVALID_HANDLE_VALUE )  ) {
+                            INVALID_HANDLE_VALUE )  ) {
 
   case FLAG_FILE:
 
@@ -662,7 +665,7 @@ void OSD_FileNode::Copy ( const OSD_Path
  ToPath.SystemName ( fNameDst );
 
  switch (  _get_file_type ( fName.ToCString (),
-                            ( Standard_Integer )INVALID_HANDLE_VALUE )  ) {
+                            INVALID_HANDLE_VALUE )  ) {
 
   case FLAG_FILE:
 
@@ -715,7 +718,7 @@ OSD_Protection OSD_FileNode::Protection
         ) == NULL ||
         !_osd_wnt_sd_to_protection (
           pSD, retVal,
-          _get_file_type (  fName.ToCString (), ( Standard_Integer )INVALID_HANDLE_VALUE  ) ==
+          _get_file_type (  fName.ToCString (), INVALID_HANDLE_VALUE  ) ==
           FLAG_DIRECTORY
          )
  )
@@ -747,7 +750,7 @@ void OSD_FileNode::SetProtection ( const
  pSD = _osd_wnt_protection_to_sd (
         Prot,
         _get_file_type ( fName.ToCString (),
-                         ( Standard_Integer )INVALID_HANDLE_VALUE  ) ==
+                         INVALID_HANDLE_VALUE  ) ==
         FLAG_DIRECTORY,
         (char *)fName.ToCString ()
        );
@@ -881,7 +884,7 @@ Standard_Integer OSD_FileNode::UserId ()
 
   FreeFileSecurity ( pSD );
  
- return ( Standard_Integer )retVal;
+ return ( intptr_t )retVal;
 
 }  // end OSD_FileNode :: UserId
 
@@ -914,7 +917,7 @@ Standard_Integer OSD_FileNode::GroupId (
 
   _osd_wnt_set_error ( myError, OSD_WFileNode );
 
- return ( Standard_Integer )retVal;
+ return ( intptr_t )retVal;
 
 }  // end OSD_FileNode :: GroupId
 
Index: oce/src/OSD/OSD_Process.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Process.cxx
+++ oce/src/OSD/OSD_Process.cxx
@@ -41,7 +41,7 @@ const OSD_WhoAmI Iam = OSD_WProcess;
 # include <sys/param.h>
 #endif
 
-#if defined(HAVE_TIME_H) || defined(WNT)
+#if defined(HAVE_TIME_H)
 # include <time.h>
 #endif
 
@@ -235,6 +235,9 @@ Standard_Integer OSD_Process::Error()con
 
 #include <OSD_WNT_1.hxx>
 #include <lmcons.h> /// pour UNLEN  ( see MSDN about GetUserName() )
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 
 #ifdef _MSC_VER
 #pragma warning( disable : 4700 )
@@ -328,7 +331,7 @@ Standard_Integer OSD_Process :: UserId (
  if ( hProcessToken != INVALID_HANDLE_VALUE ) CloseHandle ( hProcessToken );
  if ( pTKowner      != NULL                 ) FreeTokenInformation ( pTKowner );
 
- return ( Standard_Integer )retVal;
+ return ( intptr_t )retVal;
 
 }  // end OSD_Process :: UserId
 
Index: oce/src/OSD/OSD_SharedMemory.cxx
===================================================================
--- oce.orig/src/OSD/OSD_SharedMemory.cxx
+++ oce/src/OSD/OSD_SharedMemory.cxx
@@ -185,7 +185,7 @@ void _osd_wnt_set_error ( OSD_Error&, OS
 
 OSD_SharedMemory :: OSD_SharedMemory () {
 
- myId = 0;
+ myId = INVALID_HANDLE_VALUE;
 
 }  // end constructor ( 1 )
 
@@ -227,7 +227,7 @@ void OSD_SharedMemory :: Build () {
 
   else
 
-   myId = ( Standard_Integer )hFileMapping;
+   myId = hFileMapping;
 
  }  // end else
 
@@ -264,7 +264,7 @@ void OSD_SharedMemory :: Open (
 
   else
 
-   myId = ( Standard_Integer )hFileMapping;
+   myId = hFileMapping;
 
   CloseHandle ( hFileMapping );
 
@@ -276,14 +276,14 @@ void OSD_SharedMemory :: Delete () {
 
  if (  Failed ()  ) Perror ();
 
- if ( myId == 0 )
+ if ( myId == INVALID_HANDLE_VALUE )
 
   Standard_ProgramError :: Raise (
                             "OSD_SharedMemory :: Delete : shared memory not opened/created"
                            );
 
  UnmapViewOfFile ( myAddress );
- CloseHandle (  ( HANDLE )myId  );
+ CloseHandle (  myId  );
 
 }  // end OSD_SharedMemory :: Delete
 
Index: oce/src/OSD/OSD_Thread.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Thread.cxx
+++ oce/src/OSD/OSD_Thread.cxx
@@ -132,6 +132,9 @@ void OSD_Thread::SetFunction (const OSD_
 //=============================================
 
 #ifdef WNT
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 #include <malloc.h>
 // On Windows the signature of the thread function differs from that on UNIX/Linux.
 // As we use the same definition of the thread function on all platforms (POSIX-like),
@@ -142,7 +145,7 @@ static DWORD WINAPI WNTthread_func (LPVO
   WNTthread_data *adata = (WNTthread_data*)data;
   void* ret = adata->func ( adata->data );
   free ( adata );
-  return (DWORD)ret;
+  return (intptr_t)ret;
 }
 #endif
 
Index: oce/src/OSD/OSD_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_WNT.cxx
+++ oce/src/OSD/OSD_WNT.cxx
@@ -865,12 +865,12 @@ BOOL MoveDirectory ( LPCTSTR oldDir, LPC
  BOOL                fFind;
  BOOL                retVal = FALSE;
  DIR_RESPONSE        response;
- DWORD               level;
+ LPVOID              level;
 
- if (   (  level = ( DWORD )TlsGetValue ( dwLevel )  ) == NULL   ) {
+ if (   (  level = TlsGetValue ( dwLevel )  ) == NULL   ) {
 
-  ++level;
-  TlsSetValue (  dwLevel, ( LPVOID )level  );
+  level = ( LPVOID )(  ( char* )level + 1  );
+  TlsSetValue (  dwLevel, level  );
 
   fFind = FALSE;
   driveSrc = driveDst = pathSrc = pathDst = NULL;
@@ -924,16 +924,16 @@ retry:
 
   if ( fFind ) {
     
-   --level;
-   TlsSetValue (  dwLevel, ( LPVOID )level  );
+   level = ( LPVOID )(  ( char* )level - 1  );
+   TlsSetValue (  dwLevel, level  );
    return retVal;
 
   }  // end if
  
  } else {
  
-  ++level;
-  TlsSetValue (  dwLevel, ( LPVOID )level  );
+  level = ( LPVOID )(  ( char* )level + 1  );
+  TlsSetValue (  dwLevel, level  );
  
  }  // end else
 
@@ -1079,8 +1079,8 @@ retry_2:
   
  }  /* end if */
 
- --level;
- TlsSetValue (  dwLevel, ( LPVOID )level  );
+ level = ( LPVOID )(  ( char* )level - 1  );
+ TlsSetValue (  dwLevel, level  );
 
  return retVal;
 
Index: oce/src/OSD/OSD_signal_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_signal_WNT.cxx
+++ oce/src/OSD/OSD_signal_WNT.cxx
@@ -194,6 +194,9 @@ _CRTIMP _se_translator_function __cdecl
 #include <process.h>
 #include <signal.h>
 #include <float.h>
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 
 static Standard_Boolean fMsgBox;
 static Standard_Boolean fFltExceptions;
@@ -210,7 +213,7 @@ static LONG _osd_debug   ( void );
 
 MB_DESC fatalErrorDesc[] = {
 
-                 { MBT_ICON,   ( int )IDI_HAND              },
+                 { MBT_ICON,   ( intptr_t )IDI_HAND              },
                  { MBT_BUTTON, IDYES,    TEXT( "Continue" ) },
                  { MBT_BUTTON, IDNO,     TEXT( "Debugger" ) },
                  { MBT_BUTTON, IDCANCEL, TEXT( "Stop"     ) }
Index: oce/src/OpenGl/OpenGl_Context.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Context.cxx
+++ oce/src/OpenGl/OpenGl_Context.cxx
@@ -280,7 +280,7 @@ void OpenGl_Context::SwapBuffers()
 void* OpenGl_Context::findProc (const char* theFuncName)
 {
 #if (defined(_WIN32) || defined(__WIN32__))
-  return wglGetProcAddress (theFuncName);
+  return (void*)wglGetProcAddress (theFuncName);
 #elif defined(__APPLE__) && !defined(MACOSX_USE_GLX)
   return (myGlLibHandle != NULL) ? dlsym (myGlLibHandle, theFuncName) : NULL;
 #else
Index: oce/src/Units/Units_Token.cxx
===================================================================
--- oce.orig/src/Units/Units_Token.cxx
+++ oce/src/Units/Units_Token.cxx
@@ -394,7 +394,7 @@ void Units_Token::Dump(const Standard_In
   TCollection_AsciiString mean = Mean();
 
   for(i=0; i<ashift; i++)cout<<"  ";
-  cout << "Units_Token::Dump of " << hex << (long ) this << dec << endl;
+  cout << "Units_Token::Dump of " << hex << (Standard_Address) this << dec << endl;
   for(i=0; i<ashift; i++)cout<<"  ";
   cout<<word.ToCString()<<endl;
   for(i=0; i<ashift; i++)cout<<"  ";
