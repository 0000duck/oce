From 4a1888ce5c2e87f013c185a91110a9507d4286f3 Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 8 Nov 2012 17:36:55 +0100
Subject: [PATCH 1/7] Use initptr_t under Win/mingw64
 (sizeof(long)<sizeof(void*))

---
 inc/TDF_LabelMapHasher.lxx          |    2 +-
 src/OSD/OSD_DirectoryIterator.cxx   |   12 ++++++------
 src/OSD/OSD_EnvironmentIterator.cxx |    2 +-
 src/OSD/OSD_File.cxx                |   14 +++++++-------
 src/OSD/OSD_FileIterator.cxx        |   12 ++++++------
 src/OSD/OSD_FileNode.cxx            |   18 +++++++++---------
 src/OSD/OSD_Process.cxx             |    2 +-
 src/OSD/OSD_SharedMemory.cxx        |    4 ++--
 src/OSD/OSD_Thread.cxx              |    2 +-
 src/OSD/OSD_WNT.cxx                 |    2 +-
 src/OSD/OSD_WNT_1.cxx               |    2 +-
 src/OSD/OSD_signal_WNT.cxx          |    2 +-
 src/Units/Units_Token.cxx           |    2 +-
 13 files changed, 38 insertions(+), 38 deletions(-)

From 041fc269871ccdf7e28c0926f1fe5932baa5558a Mon Sep 17 00:00:00 2001
From: tpaviot <tpaviot@gmail.com>
Date: Thu, 22 Nov 2012 12:49:16 +0100
Subject: [PATCH 2/7] Fix compilation error on Ubuntu12.10

error : 'intptr_t' was not declared in this scope.
Bug reported by @triggerfish1 after pull request #309 was merged.
---
 src/Units/Units_Token.cxx |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

From 09a16f72b5adff280b96bcb20afeb64f8cadfff5 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Thu, 22 Nov 2012 22:49:48 +0100
Subject: [PATCH 3/7] Replace labs(intptr_t) by uintptr_t

---
 inc/TDF_LabelMapHasher.lxx |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

From 890b35f31f9076458dde4177c04bbb37e4ca5cec Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Thu, 22 Nov 2012 23:03:23 +0100
Subject: [PATCH 4/7] Fix 4a1888c by using the right data type to avoid
 int<->pointer conversions

---
 inc/OSD_EnvironmentIterator.hxx     |    4 ++
 inc/OSD_FileNode.hxx                |    4 ++
 inc/OSD_SharedMemory.hxx            |    4 ++
 src/OSD/OSD_DirectoryIterator.cxx   |   18 ++++----
 src/OSD/OSD_EnvironmentIterator.cxx |    2 +-
 src/OSD/OSD_File.cxx                |   82 +++++++++++++++++------------------
 src/OSD/OSD_FileIterator.cxx        |   18 ++++----
 src/OSD/OSD_FileNode.cxx            |   16 +++----
 src/OSD/OSD_SharedMemory.cxx        |   10 ++---
 src/OSD/OSD_WNT.cxx                 |   20 ++++-----
 src/OSD/OSD_WNT_1.cxx               |    8 +---
 11 files changed, 96 insertions(+), 90 deletions(-)

From 1c637614d1bc7dc573ef53289f71651bfdef6d08 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sun, 25 Nov 2012 12:02:51 +0100
Subject: [PATCH 5/7] Fixes for WNT compilation: HANDLE should not be used in
 hxx files, since windows.h it's not included. Used
 specific data type for EnvironmentIterator LWAlign
 compilation fix

---
 inc/OSD_DirectoryIterator.hxx       |    2 +-
 inc/OSD_EnvironmentIterator.hxx     |    2 +-
 inc/OSD_FileIterator.hxx            |    2 +-
 inc/OSD_FileNode.hxx                |    2 +-
 inc/OSD_SharedMemory.hxx            |    2 +-
 src/OSD/OSD_EnvironmentIterator.cxx |    2 +-
 src/OSD/OSD_File.cxx                |    2 +-
 src/OSD/OSD_WNT_1.cxx               |   12 ++++++------
 8 files changed, 13 insertions(+), 13 deletions(-)

From 5a1bef14de1485a4208c3140ece88149c71c167a Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Fri, 30 Nov 2012 20:16:25 +0100
Subject: [PATCH 6/7] Fix for mingw on windows , proposed by Max
 (http://osdir.com/ml/oce-development/2012-11/msg00019.html)

---
 src/OpenGl/OpenGl_Context.cxx |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

From a8913b172927c547b7e005e15d289e0ca7914134 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Sat, 1 Dec 2012 18:25:06 +0100
Subject: [PATCH 7/7] Slightly amend 1c63761: use Standard_CString instead of
 Standard_Character* to drop casts

---
 inc/OSD_EnvironmentIterator.hxx     |    2 +-
 src/OSD/OSD_EnvironmentIterator.cxx |    8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

From 7d4cb3f5a62dff4ea9d70c8b9a4b05e3d5e6a8d0 Mon Sep 17 00:00:00 2001
From: Fotios Sioutis <sfotis@gmail.com>
Date: Thu, 6 Dec 2012 11:25:17 +0200
Subject: [PATCH] Missing headers and minor preprocessor fixes

Added stdint.h header for intptr_t declarations and fixed minor
preprocessor issue (wnt case under unix block & borland case).
---
 src/OSD/OSD_File.cxx       |    3 ++-
 src/OSD/OSD_FileNode.cxx   |    1 +
 src/OSD/OSD_Process.cxx    |    3 ++-
 src/OSD/OSD_Thread.cxx     |    1 +
 src/OSD/OSD_WNT_1.cxx      |    1 +
 src/OSD/OSD_signal_WNT.cxx |    1 +
 6 files changed, 8 insertions(+), 2 deletions(-)

From 5d6acda147986cb74ea6d92587b35c7eb3539420 Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sun, 3 Mar 2013 15:13:14 +0100
Subject: [PATCH] Check compiler before including stdint.h

---
 src/OSD/OSD_File.cxx       |    2 ++
 src/OSD/OSD_FileNode.cxx   |    2 ++
 src/OSD/OSD_Process.cxx    |    2 ++
 src/OSD/OSD_Thread.cxx     |    2 ++
 src/OSD/OSD_WNT_1.cxx      |    2 ++
 src/OSD/OSD_signal_WNT.cxx |    2 ++
 6 files changed, 12 insertions(+)

Index: oce/inc/OSD_EnvironmentIterator.hxx
===================================================================
--- oce.orig/inc/OSD_EnvironmentIterator.hxx
+++ oce/inc/OSD_EnvironmentIterator.hxx
@@ -79,7 +79,11 @@ private:
 
 
 Standard_Address myEnv;
+#ifdef WNT
+Standard_CString myCount;
+#else
 Standard_Integer myCount;
+#endif
 OSD_Error myError;
 
 
Index: oce/inc/OSD_SharedMemory.hxx
===================================================================
--- oce.orig/inc/OSD_SharedMemory.hxx
+++ oce/inc/OSD_SharedMemory.hxx
@@ -101,7 +101,11 @@ private:
 
 
 
+#ifdef WNT
+Standard_Address myId;
+#else
 Standard_Integer myId;
+#endif
 Standard_Address myAddress;
 TCollection_AsciiString myName;
 Standard_Integer mySize;
Index: oce/src/OSD/OSD_EnvironmentIterator.cxx
===================================================================
--- oce.orig/src/OSD/OSD_EnvironmentIterator.cxx
+++ oce/src/OSD/OSD_EnvironmentIterator.cxx
@@ -97,7 +97,7 @@ Standard_Integer OSD_EnvironmentIterator
 OSD_EnvironmentIterator :: OSD_EnvironmentIterator () {
 
  myEnv   = GetEnvironmentStrings ();
- myCount = ( Standard_Integer )myEnv;
+ myCount = reinterpret_cast<Standard_CString>(myEnv);
 
 }  // end constructor
 
@@ -109,7 +109,7 @@ void OSD_EnvironmentIterator :: Destroy
 
 Standard_Boolean OSD_EnvironmentIterator :: More () {
 
- return *(  ( Standard_CString )myCount  ) ? Standard_True : Standard_False;
+ return *myCount ? Standard_True : Standard_False;
 
 }  // end OSD_EnvironmentIterator :: More
 
@@ -117,7 +117,7 @@ void OSD_EnvironmentIterator :: Next ()
 
  if (  More ()  ) {
  
-  while (   *( Standard_CString )myCount  ) ++myCount;
+  while (   *myCount  ) ++myCount;
 
   ++myCount;
  
@@ -129,7 +129,7 @@ OSD_Environment OSD_EnvironmentIterator
 
  TCollection_AsciiString env, name, value;
 
- env = ( Standard_CString )myCount;
+ env = myCount;
 
  name  = env.Token (  TEXT( "=" ), 1  );
  value = env.Token (  TEXT( "=" ), 2  );
Index: oce/src/OSD/OSD_File.cxx
===================================================================
--- oce.orig/src/OSD/OSD_File.cxx
+++ oce/src/OSD/OSD_File.cxx
@@ -843,13 +843,16 @@ Standard_Boolean OSD_File::IsExecutable(
 
 #include <stdio.h>
 #include <io.h>
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 #include <Standard_PCharacter.hxx>
 
 #ifndef _INC_TCHAR
 # include <tchar.h>
 #endif  // _INC_TCHAR
 
-#if defined(__CYGWIN32__) || defined(__MINGW32__)
+#if defined(__CYGWIN32__) || defined(__MINGW32__) || defined(__BORLANDC__)
 #define VAC
 #define _int64 int64_t
 #endif
Index: oce/src/OSD/OSD_FileNode.cxx
===================================================================
--- oce.orig/src/OSD/OSD_FileNode.cxx
+++ oce/src/OSD/OSD_FileNode.cxx
@@ -446,6 +446,9 @@ Standard_Integer OSD_FileNode::Error()co
 #endif  // _INC_TCHAR
 
 #include <stdio.h>
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 
 #define TEST_RAISE( arg ) _test_raise (  fName, ( arg )  )
 #define RAISE( arg ) Standard_ProgramError :: Raise (  ( arg )  )
@@ -857,7 +860,7 @@ Standard_Integer OSD_FileNode::UserId ()
 
   FreeFileSecurity ( pSD );
  
- return ( Standard_Integer )retVal;
+ return ( intptr_t )retVal;
 
 }  // end OSD_FileNode :: UserId
 
@@ -890,7 +893,7 @@ Standard_Integer OSD_FileNode::GroupId (
 
   _osd_wnt_set_error ( myError, OSD_WFileNode );
 
- return ( Standard_Integer )retVal;
+ return ( intptr_t )retVal;
 
 }  // end OSD_FileNode :: GroupId
 
Index: oce/src/OSD/OSD_Process.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Process.cxx
+++ oce/src/OSD/OSD_Process.cxx
@@ -36,7 +36,7 @@ const OSD_WhoAmI Iam = OSD_WProcess;
 # include <sys/param.h>
 #endif
 
-#if defined(HAVE_TIME_H) || defined(WNT)
+#if defined(HAVE_TIME_H)
 # include <time.h>
 #endif
 
@@ -231,6 +231,9 @@ Standard_Integer OSD_Process::Error()con
 
 #include <OSD_WNT_1.hxx>
 #include <lmcons.h> /// pour UNLEN  ( see MSDN about GetUserName() )
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 
 #ifdef _MSC_VER
 #pragma warning( disable : 4700 )
@@ -324,7 +327,7 @@ Standard_Integer OSD_Process :: UserId (
  if ( hProcessToken != INVALID_HANDLE_VALUE ) CloseHandle ( hProcessToken );
  if ( pTKowner      != NULL                 ) FreeTokenInformation ( pTKowner );
 
- return ( Standard_Integer )retVal;
+ return ( intptr_t )retVal;
 
 }  // end OSD_Process :: UserId
 
Index: oce/src/OSD/OSD_SharedMemory.cxx
===================================================================
--- oce.orig/src/OSD/OSD_SharedMemory.cxx
+++ oce/src/OSD/OSD_SharedMemory.cxx
@@ -180,7 +180,7 @@ void _osd_wnt_set_error ( OSD_Error&, OS
 
 OSD_SharedMemory :: OSD_SharedMemory () {
 
- myId = 0;
+ myId = INVALID_HANDLE_VALUE;
 
 }  // end constructor ( 1 )
 
@@ -222,7 +222,7 @@ void OSD_SharedMemory :: Build () {
 
   else
 
-   myId = ( Standard_Integer )hFileMapping;
+   myId = hFileMapping;
 
  }  // end else
 
@@ -259,7 +259,7 @@ void OSD_SharedMemory :: Open (
 
   else
 
-   myId = ( Standard_Integer )hFileMapping;
+   myId = hFileMapping;
 
   CloseHandle ( hFileMapping );
 
@@ -271,14 +271,14 @@ void OSD_SharedMemory :: Delete () {
 
  if (  Failed ()  ) Perror ();
 
- if ( myId == 0 )
+ if ( myId == INVALID_HANDLE_VALUE )
 
   Standard_ProgramError :: Raise (
                             "OSD_SharedMemory :: Delete : shared memory not opened/created"
                            );
 
  UnmapViewOfFile ( myAddress );
- CloseHandle (  ( HANDLE )myId  );
+ CloseHandle (  myId  );
 
 }  // end OSD_SharedMemory :: Delete
 
Index: oce/src/OSD/OSD_Thread.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Thread.cxx
+++ oce/src/OSD/OSD_Thread.cxx
@@ -127,6 +127,9 @@ void OSD_Thread::SetFunction (const OSD_
 //=============================================
 
 #ifdef WNT
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 #include <malloc.h>
 // On Windows the signature of the thread function differs from that on UNIX/Linux.
 // As we use the same definition of the thread function on all platforms (POSIX-like),
@@ -137,7 +140,7 @@ static DWORD WINAPI WNTthread_func (LPVO
   WNTthread_data *adata = (WNTthread_data*)data;
   void* ret = adata->func ( adata->data );
   free ( adata );
-  return (DWORD)ret;
+  return (intptr_t)ret;
 }
 #endif
 
Index: oce/src/OSD/OSD_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_WNT.cxx
+++ oce/src/OSD/OSD_WNT.cxx
@@ -861,12 +861,12 @@ BOOL MoveDirectory ( LPCTSTR oldDir, LPC
  BOOL                fFind;
  BOOL                retVal = FALSE;
  DIR_RESPONSE        response;
- DWORD               level;
+ LPVOID              level;
 
- if (   (  level = ( DWORD )TlsGetValue ( dwLevel )  ) == NULL   ) {
+ if (   (  level = TlsGetValue ( dwLevel )  ) == NULL   ) {
 
-  ++level;
-  TlsSetValue (  dwLevel, ( LPVOID )level  );
+  level = ( LPVOID )(  ( char* )level + 1  );
+  TlsSetValue (  dwLevel, level  );
 
   fFind = FALSE;
   driveSrc = driveDst = pathSrc = pathDst = NULL;
@@ -920,16 +920,16 @@ retry:
 
   if ( fFind ) {
     
-   --level;
-   TlsSetValue (  dwLevel, ( LPVOID )level  );
+   level = ( LPVOID )(  ( char* )level - 1  );
+   TlsSetValue (  dwLevel, level  );
    return retVal;
 
   }  // end if
  
  } else {
  
-  ++level;
-  TlsSetValue (  dwLevel, ( LPVOID )level  );
+  level = ( LPVOID )(  ( char* )level + 1  );
+  TlsSetValue (  dwLevel, level  );
  
  }  // end else
 
@@ -1073,8 +1073,8 @@ retry_2:
   
  }  /* end if */
 
- --level;
- TlsSetValue (  dwLevel, ( LPVOID )level  );
+ level = ( LPVOID )(  ( char* )level - 1  );
+ TlsSetValue (  dwLevel, level  );
 
  return retVal;
 
Index: oce/src/OSD/OSD_signal_WNT.cxx
===================================================================
--- oce.orig/src/OSD/OSD_signal_WNT.cxx
+++ oce/src/OSD/OSD_signal_WNT.cxx
@@ -189,6 +189,9 @@ _CRTIMP _se_translator_function __cdecl
 #include <process.h>
 #include <signal.h>
 #include <float.h>
+#if !defined (_MSC_VER) || (_MSC_VER >= 1600)
+#include <stdint.h>
+#endif
 
 static Standard_Boolean fMsgBox;
 static Standard_Boolean fFltExceptions;
@@ -205,7 +208,7 @@ static LONG _osd_debug   ( void );
 
 MB_DESC fatalErrorDesc[] = {
 
-                 { MBT_ICON,   ( int )IDI_HAND              },
+                 { MBT_ICON,   ( intptr_t )IDI_HAND              },
                  { MBT_BUTTON, IDYES,    TEXT( "Continue" ) },
                  { MBT_BUTTON, IDNO,     TEXT( "Debugger" ) },
                  { MBT_BUTTON, IDCANCEL, TEXT( "Stop"     ) }
Index: oce/src/OpenGl/OpenGl_Context.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Context.cxx
+++ oce/src/OpenGl/OpenGl_Context.cxx
@@ -321,7 +321,7 @@ void OpenGl_Context::SwapBuffers()
 void* OpenGl_Context::findProc (const char* theFuncName)
 {
 #if defined(_WIN32)
-  return wglGetProcAddress (theFuncName);
+  return (void*)wglGetProcAddress (theFuncName);
 #elif defined(__APPLE__) && !defined(MACOSX_USE_GLX)
   return (myGlLibHandle != NULL) ? dlsym (myGlLibHandle, theFuncName) : NULL;
 #else
Index: oce/src/TDF/TDF_LabelMapHasher.lxx
===================================================================
--- oce.orig/src/TDF/TDF_LabelMapHasher.lxx
+++ oce/src/TDF/TDF_LabelMapHasher.lxx
@@ -19,6 +19,11 @@
 //Version	Date		Purpose
 //		0.0	Feb 13 1997	Creation
 
+#ifdef _MSC_VER
+#include <stddef.h>
+#else
+#include <stdint.h>
+#endif
 
 //=======================================================================
 //function : HashCode
@@ -31,7 +36,7 @@
 inline         Standard_Integer TDF_LabelMapHasher::HashCode
 //#endif
 (const TDF_Label& aLab, const Standard_Integer Upper) 
-{ return 1 + ( (int) (labs((long int) aLab.myLabelNode) % Upper) ); }
+{ return 1 + ( (Standard_Integer) (uintptr_t(aLab.myLabelNode) % Upper) ); }
 
  
 //=======================================================================
Index: oce/src/Units/Units_Token.cxx
===================================================================
--- oce.orig/src/Units/Units_Token.cxx
+++ oce/src/Units/Units_Token.cxx
@@ -390,7 +390,7 @@ void Units_Token::Dump(const Standard_In
   TCollection_AsciiString mean = Mean();
 
   for(i=0; i<ashift; i++)cout<<"  ";
-  cout << "Units_Token::Dump of " << hex << (long ) this << dec << endl;
+  cout << "Units_Token::Dump of " << hex << (Standard_Address) this << dec << endl;
   for(i=0; i<ashift; i++)cout<<"  ";
   cout<<word.ToCString()<<endl;
   for(i=0; i<ashift; i++)cout<<"  ";
