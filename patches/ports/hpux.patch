Index: oce/src/AdvApp2Var/AdvApp2Var_SysBase.hxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_SysBase.hxx
+++ oce/src/AdvApp2Var/AdvApp2Var_SysBase.hxx
@@ -20,8 +20,12 @@
 #if _MSC_VER
 #include <stddef.h>
 #else
+#if defined(__hpux) && !defined(__GNUC__)
+#include <inttypes.h>
+#else
 #include <stdint.h>
 #endif
+#endif
 
 class AdvApp2Var_SysBase {
  public:
Index: oce/src/BOPCol/BOPCol_Array1.hxx
===================================================================
--- oce.orig/src/BOPCol/BOPCol_Array1.hxx
+++ oce/src/BOPCol/BOPCol_Array1.hxx
@@ -177,7 +177,7 @@ template <class Type> class BOPCol_Array
     while(pBlock) {
       pNext=pBlock->Next();
       //
-#if defined(__BORLANDC__)
+#if defined(__BORLANDC__) || defined(__hpux)
       pBlock->~BOPCol_MemBlock<Type>();
 #else
       pBlock->~BOPCol_XMemBlock();
Index: oce/src/BRepMesh/BRepMesh_DiscretFactory.cxx
===================================================================
--- oce.orig/src/BRepMesh/BRepMesh_DiscretFactory.cxx
+++ oce/src/BRepMesh/BRepMesh_DiscretFactory.cxx
@@ -39,7 +39,7 @@ namespace
     theLibName += ".dll";
   #elif __APPLE__
     theLibName += ".dylib";
-  #elif defined (HPUX) || defined(_hpux)
+  #elif defined (HPUX) || defined(__hpux)
     theLibName += ".sl";
   #else
     theLibName += ".so";
Index: oce/src/Draw/Draw.cxx
===================================================================
--- oce.orig/src/Draw/Draw.cxx
+++ oce/src/Draw/Draw.cxx
@@ -533,7 +533,7 @@ void Draw::Load(Draw_Interpretor& theDI,
     aPluginLibrary += ".dll";
 #elif __APPLE__
     aPluginLibrary += ".dylib";
-#elif defined (HPUX) || defined(_hpux)
+#elif defined (HPUX) || defined(__hpux)
     aPluginLibrary += ".sl";
 #else
     aPluginLibrary += ".so";
Index: oce/src/Draw/Draw_BasicCommands.cxx
===================================================================
--- oce.orig/src/Draw/Draw_BasicCommands.cxx
+++ oce/src/Draw/Draw_BasicCommands.cxx
@@ -73,7 +73,9 @@ static clock_t CPU_CURRENT; // cpu time
 #endif
 
 #if defined (__hpux) || defined ( HPUX )
+#ifndef RLIM_INFINITY
 #define RLIM_INFINITY   0x7fffffff
+#endif
 #define	RLIMIT_CPU	0
 #endif
 
Index: oce/src/Draw/Draw_GraphicCommands.cxx
===================================================================
--- oce.orig/src/Draw/Draw_GraphicCommands.cxx
+++ oce/src/Draw/Draw_GraphicCommands.cxx
@@ -888,7 +888,7 @@ static Standard_Integer grid (Draw_Inter
       return 1 ;
   }
 
-#ifdef HPUX
+#if defined(HPUX) || defined(__hpux)
   const char *temp = "grid";
 #else
   char temp1[] = "grid";
Index: oce/src/Draw/Draw_Window.cxx
===================================================================
--- oce.orig/src/Draw/Draw_Window.cxx
+++ oce/src/Draw/Draw_Window.cxx
@@ -1066,7 +1066,7 @@ void Run_Appli(Standard_Boolean (*interp
       FD_ZERO(&readset);
       FD_SET(0,&readset);
       FD_SET(count,&readset);
-#ifdef HPUX
+#if defined(HPUX) || defined(__hpux)
       numfd = select(count+1,(Integer*)&readset,NULL,NULL,NULL);
 #else
       numfd = select(count+1,&readset,NULL,NULL,NULL);
Index: oce/src/FSD/FSD_FileHeader.hxx
===================================================================
--- oce.orig/src/FSD/FSD_FileHeader.hxx
+++ oce/src/FSD/FSD_FileHeader.hxx
@@ -33,7 +33,7 @@ struct FSD_FileHeader {
 };
 
 #ifndef DO_INVERSE
-#if defined ( SOLARIS ) || defined ( IRIX )
+#if defined ( SOLARIS ) || defined ( IRIX ) || defined(__hpux)
 #define DO_INVERSE 1
 #else
 #define DO_INVERSE 0
Index: oce/src/IGESData/IGESData.cxx
===================================================================
--- oce.orig/src/IGESData/IGESData.cxx
+++ oce/src/IGESData/IGESData.cxx
@@ -154,7 +154,7 @@ static Handle(IGESData_DefaultSpecific)
     (XSTEP_VERSION);
   gsys->AssignCat(" on ");
   gsys->AssignCat
-#ifdef HPUX
+#if defined(HPUX) || defined(__hpux)
     ("HP-UX");
   cout<<"--  OSD_Path::SystemVersion, does not work well on HP-UX"<<endl;
 #endif
Index: oce/src/NCollection/NCollection_Array2.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_Array2.hxx
+++ oce/src/NCollection/NCollection_Array2.hxx
@@ -60,7 +60,7 @@ template <class TheItemType> class NColl
     { 
       myCurrent = 0;
       mySize    = theArray.Length();
-      myArray   = (NCollection_Array2 *) &theArray; 
+      myArray   = (NCollection_Array2<TheItemType> *) &theArray; 
     }
     //! Check end
     virtual Standard_Boolean More (void) const
Index: oce/src/NCollection/NCollection_DefaultHasher.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_DefaultHasher.hxx
+++ oce/src/NCollection/NCollection_DefaultHasher.hxx
@@ -52,12 +52,20 @@ public:
   //
   static Standard_Integer HashCode(const TheKeyType& theKey, 
                                    const Standard_Integer Upper) {
+#ifdef __hpux
+    return HashCode_Proxy<TheKeyType>(theKey, Upper);
+#else
     return HashCode_Proxy(theKey, Upper);
+#endif
   }
   //
   static Standard_Boolean IsEqual(const TheKeyType& theKey1, 
                                   const TheKeyType& theKey2) {
+#ifdef __hpux
+    return IsEqual_Proxy<TheKeyType>(theKey1, theKey2);
+#else
     return IsEqual_Proxy(theKey1, theKey2);
+#endif
   }
 };
 
Index: oce/src/NCollection/NCollection_IndexedDataMap.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_IndexedDataMap.hxx
+++ oce/src/NCollection/NCollection_IndexedDataMap.hxx
@@ -105,7 +105,7 @@ template < class TheKeyType,
       myIndex(0) {}
     //! Constructor
     Iterator (const NCollection_IndexedDataMap& theMap)
-#ifdef __BORLANDC__
+#if defined(__BORLANDC__) || defined(__hpux)
     : myMap((NCollection_IndexedDataMap <TheKeyType, TheItemType, Hasher> *) &theMap),
 #else
     : myMap  ((NCollection_IndexedDataMap* )&theMap),
Index: oce/src/NCollection/NCollection_IndexedMap.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_IndexedMap.hxx
+++ oce/src/NCollection/NCollection_IndexedMap.hxx
@@ -95,7 +95,7 @@ template < class TheKeyType,
       myIndex(0) {}
     //! Constructor
     Iterator (const NCollection_IndexedMap& theMap) :
-#ifdef __BORLANDC__
+#if defined(__BORLANDC__) || defined(__hpux)
       myMap((NCollection_IndexedMap <TheKeyType, Hasher> *) &theMap),
 #else
       myMap((NCollection_IndexedMap *) &theMap),
Index: oce/src/OSD/OSD_Chronometer.cxx
===================================================================
--- oce.orig/src/OSD/OSD_Chronometer.cxx
+++ oce/src/OSD/OSD_Chronometer.cxx
@@ -113,7 +113,11 @@ void OSD_Chronometer::GetThreadCPU (Stan
 #elif defined(_POSIX_TIMERS) && defined(_POSIX_THREAD_CPUTIME)
   // on Linux, only user times are available for threads via clock_gettime()
   struct timespec t;
+#if defined(__hpux) && !defined(CLOCK_THREAD_CPUTIME_ID)
+  if (!clock_gettime (CLOCK_VIRTUAL, &t))
+#else
   if (!clock_gettime (CLOCK_THREAD_CPUTIME_ID, &t))
+#endif
   {
     theUserSeconds = t.tv_sec + 0.000000001 * t.tv_nsec;
   }
Index: oce/src/OSD/OSD_MAllocHook.cxx
===================================================================
--- oce.orig/src/OSD/OSD_MAllocHook.cxx
+++ oce/src/OSD/OSD_MAllocHook.cxx
@@ -19,8 +19,12 @@
 #if !defined __STDC_LIMIT_MACROS
 #define __STDC_LIMIT_MACROS
 #endif
+#if defined(__hpux) && !defined(__GNUC__)
+#include <inttypes.h>
+#else
 #include <stdint.h>
 #endif
+#endif
 
 #include <set>
 #include <map>
Index: oce/src/OSD/OSD_signal.cxx
===================================================================
--- oce.orig/src/OSD/OSD_signal.cxx
+++ oce/src/OSD/OSD_signal.cxx
@@ -407,37 +407,6 @@ static void SegvHandler(const int theSig
   exit(SIGSEGV);
 }
 
-#elif defined (_hpux) || defined(HPUX)
-// Not ACTIVE ? SA_SIGINFO is defined on SUN, OSF, SGI and HP (and Linux) !
-// pour version 09.07
-
-static void SegvHandler(const int theSignal,
-                        siginfo_t *ip,
-                        const Standard_Address theContext)
-{
-  unsigned long Space  ;
-  unsigned long Offset ;
-  char Msg[100] ;
-
-  if ( theContext != NULL ) {
-    Space = ((struct sigcontext *)theContext)->sc_sl.sl_ss.ss_cr20 ;
-    Offset = ((struct sigcontext *)theContext)->sc_sl.sl_ss.ss_cr21 ;
-//    cout << "Wrong address = " << hex(Offset) << endl ;
-    {
-      sprintf(Msg,"SIGSEGV 'segmentation violation' detected. Address %lx",Offset) ;
-      OSD_SIGSEGV::Jump(Msg);
-//    scp->sc_pcoq_head = scp->sc_pcoq_tail ;       Permettrait de continuer a
-//    scp->sc_pcoq_tail = scp->sc_pcoq_tail + 0x4 ; l'intruction suivant le segv.
-    }
-  }
-#ifdef OCCT_DEBUG
-  else {
-    cout << "Wrong undefined address." << endl ;
-  }
-#endif
-  exit(SIGSEGV);
-}
-
 #endif
 
 //============================================================================
Index: oce/src/OpenGl/OpenGl_AspectFace.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_AspectFace.cxx
+++ oce/src/OpenGl/OpenGl_AspectFace.cxx
@@ -446,7 +446,11 @@ void OpenGl_AspectFace::Resources::Build
 
   if (!theTexture.IsNull())
   {
+#ifdef __hpux
+    if (TextureId.IsEmpty() || !theCtx->GetResource(TextureId, Texture))
+#else
     if (TextureId.IsEmpty() || !theCtx->GetResource<Handle(OpenGl_Texture)> (TextureId, Texture))
+#endif
     {
       Texture = new OpenGl_Texture (theTexture->GetParams());
       Handle(Image_PixMap) anImage = theTexture->GetImage();
Index: oce/src/Plugin/Plugin.cxx
===================================================================
--- oce.orig/src/Plugin/Plugin.cxx
+++ oce/src/Plugin/Plugin.cxx
@@ -68,7 +68,7 @@ Handle(Standard_Transient) Plugin::Load(
 #endif /* OCE_DEBUG_POSTFIX */
 #elif defined(__APPLE__)
     thePluginLibrary += ".dylib";
-#elif defined (HPUX) || defined(_hpux)
+#elif defined (HPUX) || defined(__hpux)
     thePluginLibrary += ".sl";
 #else
     thePluginLibrary += ".so";
Index: oce/src/Standard/Standard_Atomic.hxx
===================================================================
--- oce.orig/src/Standard/Standard_Atomic.hxx
+++ oce/src/Standard/Standard_Atomic.hxx
@@ -131,7 +131,7 @@ int Standard_Atomic_Decrement (volatile
 #else
 
 #ifndef IGNORE_NO_ATOMICS
-  #error "Atomic operation isn't implemented for current platform!"
+  #warning "Atomic operation isn't implemented for current platform!"
 #endif
 int Standard_Atomic_Increment (volatile int* theValue)
 {
Index: oce/src/Standard/Standard_MMgrOpt.cxx
===================================================================
--- oce.orig/src/Standard/Standard_MMgrOpt.cxx
+++ oce/src/Standard/Standard_MMgrOpt.cxx
@@ -161,7 +161,7 @@ extern "C" int getpagesize() ;
    So, BLOCK_SHIFT is formed as macro for support on other possible platforms.
 */
 
-#if defined(IRIX) || defined(SOLARIS)
+#if defined(IRIX) || defined(SOLARIS) || defined(__hpux)
 #define BLOCK_SHIFT 2
 #else
 #define BLOCK_SHIFT 1
@@ -287,7 +287,7 @@ void Standard_MMgrOpt::Initialize()
       perror("ERR_MEMRY_FAIL");
 #endif
     
-#if defined(IRIX) || defined(__sgi) || defined(SOLARIS) || defined(__sun) || defined(LIN) || defined(linux) || defined(__FreeBSD__) || defined(__ANDROID__)
+#if defined(IRIX) || defined(__sgi) || defined(SOLARIS) || defined(__sun) || defined(LIN) || defined(linux) || defined(__FreeBSD__) || defined(__ANDROID__) || defined(__hpux)
     if ((myMMap = open ("/dev/zero", O_RDWR)) < 0) {
       if ((myMMap = open ("/dev/null", O_RDWR)) < 0){
         myMMap = 0;
Index: oce/src/Standard/Standard_TypeDef.hxx
===================================================================
--- oce.orig/src/Standard/Standard_TypeDef.hxx
+++ oce/src/Standard/Standard_TypeDef.hxx
@@ -23,8 +23,12 @@
   typedef unsigned __int16  uint16_t;
   typedef unsigned __int32  uint32_t;
 #else
+#if defined(__hpux) && !defined(__GNUC__)
+  #include <inttypes.h>
+#else
   #include <stdint.h>
 #endif
+#endif
 
 #if(defined(_MSC_VER) && (_MSC_VER < 1800))
   // only Visual Studio 2013 (vc12) provides <cinttypes> header
Index: oce/src/TDF/TDF_LabelMapHasher.lxx
===================================================================
--- oce.orig/src/TDF/TDF_LabelMapHasher.lxx
+++ oce/src/TDF/TDF_LabelMapHasher.lxx
@@ -22,8 +22,12 @@
 #ifdef _MSC_VER
 #include <stddef.h>
 #else
+#if defined(__hpux) && !defined(__GNUC__)
+#include <inttypes.h>
+#else
 #include <stdint.h>
 #endif
+#endif
 
 //=======================================================================
 //function : HashCode
