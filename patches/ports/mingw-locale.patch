Index: oce/src/Standard/Standard_CLocaleSentry.cxx
===================================================================
--- oce.orig/src/Standard/Standard_CLocaleSentry.cxx
+++ oce/src/Standard/Standard_CLocaleSentry.cxx
@@ -42,7 +42,7 @@ namespace
     CLocalePtr()
     #ifdef HAVE_XLOCALE_H
     : myLocale (newlocale (LC_ALL_MASK, "C", NULL))
-    #elif defined(_WIN32) && !defined(__BORLANDC__)
+    #elif defined(_WIN32) && !defined(__BORLANDC__) && !defined(__MINGW32__)
     : myLocale (_create_locale (LC_ALL, "C"))
     #else
     : myLocale (NULL)
@@ -53,7 +53,7 @@ namespace
     {
     #ifdef HAVE_XLOCALE_H
       freelocale (myLocale);
-    #elif defined(_WIN32) && !defined(__BORLANDC__)
+    #elif defined(_WIN32) && !defined(__BORLANDC__) && !defined(__MINGW32__)
       _free_locale (myLocale);
     #endif
     }
Index: oce/src/Standard/Standard_CLocaleSentry.hxx
===================================================================
--- oce.orig/src/Standard/Standard_CLocaleSentry.hxx
+++ oce/src/Standard/Standard_CLocaleSentry.hxx
@@ -60,7 +60,7 @@ public:
 
 #ifdef HAVE_XLOCALE_H
   typedef  locale_t clocale_t;
-#elif defined(_WIN32) && !defined(__BORLANDC__)
+#elif defined(_WIN32) && !defined(__BORLANDC__) && !defined(__MINGW32__)
   typedef _locale_t clocale_t;
 #else
   typedef void*     clocale_t;
@@ -73,7 +73,7 @@ public:
 private:
 
   void* myPrevLocale;       //!< previous locale, platform-dependent pointer!
-#if defined(_WIN32) && !defined(__BORLANDC__)
+#if defined(_WIN32) && !defined(__BORLANDC__) && !defined(__MINGW32__)
   int   myPrevTLocaleState; //!< previous thread-locale state, MSVCRT-specific
 #endif
 
Index: oce/src/Standard/Standard_CString.cxx
===================================================================
--- oce.orig/src/Standard/Standard_CString.cxx
+++ oce/src/Standard/Standard_CString.cxx
@@ -260,7 +260,7 @@ Standard_Boolean ISSIMILAR(const Standar
 #ifdef __APPLE__
   // There are a lot of *_l functions availalbe on Mac OS X - we use them
   #define SAVE_TL()
-#elif defined(_WIN32) && !defined(__BORLANDC__)
+#elif defined(_WIN32) && !defined(__BORLANDC__) && !defined(__MINGW32__)
   // MSVCRT has equivalents with slightly different syntax
   #define SAVE_TL()
   #define strtod_l(thePtr, theNextPtr, theLocale)                _strtod_l(thePtr, theNextPtr, theLocale)
