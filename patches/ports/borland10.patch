From 372ed506e93f7135afad6af75ab5e381cfae8c40 Mon Sep 17 00:00:00 2001
From: Fotios Sioutis <sfotis@gmail.com>
Date: Thu, 10 Nov 2011 11:52:36 +0200
Subject: [PATCH] Fixed Handle()& issue under latest bcc32

The compiler did not allow a pointer object (created with new) to be
assigned to a reference Handle object (occ smart pointer) for some
reason.This fix bypasses this issue.
---
 src/AIS/AIS_ParallelRelation.cxx        |    4 ++--
 src/DDataStd/DDataStd_BasicCommands.cxx |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

From 05476b256be8aab0fec689c70ed83dd48dc3fdd6 Mon Sep 17 00:00:00 2001
From: Fotios Sioutis <sfotis@gmail.com>
Date: Thu, 10 Nov 2011 12:01:51 +0200
Subject: [PATCH] Disambiguate using type casts under latest bcc32

Under the latest embarcadero compiler there exist some cases where
the compiler cannot decide which operators to use.Using type casts
we overcome this issue and the compilation proceeds without any
further issues.
---
 inc/Select3D_Pnt.hxx                               |    2 +-
 inc/Select3D_Pnt2d.hxx                             |    2 +-
 inc/Select3D_SensitiveSegment.lxx                  |    8 ++++----
 .../STEPConstruct_ValidationProps.cxx              |    4 ++--
 src/Select3D/Select3D_SensitiveCircle.cxx          |    4 ++--
 src/Select3D/Select3D_SensitivePoint.cxx           |    2 +-
 src/TNaming/TNaming_UsedShapes.cxx                 |    4 ++--
 src/UnitsAPI/UnitsAPI.cxx                          |    2 +-
 8 files changed, 14 insertions(+), 14 deletions(-)

From e165ab061b3fac26abb96b26bcb77025a2b33347 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Sat, 19 Nov 2011 18:53:18 +0100
Subject: [PATCH] Partially revert "Disambiguate using type casts under latest
 bcc32"

This partially reverts commit 05476b256be8aab0fec689c70ed83dd48dc3fdd6.
This commit introduced build failures with non-bcc32 platforms.
---
 inc/Select3D_Pnt.hxx                      |    2 +-
 inc/Select3D_Pnt2d.hxx                    |    2 +-
 inc/Select3D_SensitiveSegment.lxx         |    8 ++++----
 src/Select3D/Select3D_SensitiveCircle.cxx |    4 ++--
 src/Select3D/Select3D_SensitivePoint.cxx  |    2 +-
 5 files changed, 9 insertions(+), 9 deletions(-)

Index: oce/src/AIS/AIS_ParallelRelation.cxx
===================================================================
--- oce.orig/src/AIS/AIS_ParallelRelation.cxx
+++ oce/src/AIS/AIS_ParallelRelation.cxx
@@ -291,8 +291,8 @@ void AIS_ParallelRelation::ComputeTwoEdg
     }
   else return;
 
-  const Handle(Geom_Line)& geom_lin1 = new Geom_Line(l1);
-  const Handle(Geom_Line)& geom_lin2 = new Geom_Line(l2);
+  const Handle(Geom_Line) geom_lin1 = new Geom_Line(l1);
+  const Handle(Geom_Line) geom_lin2 = new Geom_Line(l2);
 
   myDirAttach = l1.Direction();
   // size
Index: oce/src/DDataStd/DDataStd_BasicCommands.cxx
===================================================================
--- oce.orig/src/DDataStd/DDataStd_BasicCommands.cxx
+++ oce/src/DDataStd/DDataStd_BasicCommands.cxx
@@ -1547,7 +1547,7 @@ static Standard_Integer DDataStd_SetIntP
       aMap.Add (Draw::Atoi(arg[j]));
       j++;
     }
-    const Handle(TColStd_HPackedMapOfInteger)& aHMap = new TColStd_HPackedMapOfInteger(aMap);
+    const Handle(TColStd_HPackedMapOfInteger) aHMap = new TColStd_HPackedMapOfInteger(aMap);
     anAtt->ChangeMap(aHMap);
     cout << "Map extent = " << anAtt->Extent()<<endl;
     return 0; 
@@ -1745,7 +1745,7 @@ static Standard_Integer DDataStd_SetIntP
     for(Standard_Integer i = 1; i<=aNum; i++) {
       aMap.Add (i);
     }
-    const Handle(TColStd_HPackedMapOfInteger)& aHMap = new TColStd_HPackedMapOfInteger(aMap);
+    const Handle(TColStd_HPackedMapOfInteger) aHMap = new TColStd_HPackedMapOfInteger(aMap);
     anAtt->ChangeMap(aHMap);
     cout << "Map extent = " << anAtt->Extent()<<endl;
     return 0; 
Index: oce/src/STEPConstruct/STEPConstruct_ValidationProps.cxx
===================================================================
--- oce.orig/src/STEPConstruct/STEPConstruct_ValidationProps.cxx
+++ oce/src/STEPConstruct/STEPConstruct_ValidationProps.cxx
@@ -674,7 +674,7 @@ Standard_Boolean STEPConstruct_Validatio
   else if ( Name == "VOLUME_MEASURE" ) isArea = Standard_False; 
   else {
 #ifdef OCCT_DEBUG
-    cout << "Warning: Measure " << Model()->StringLabel ( M ) << " is neither area not volume" << endl;
+    cout << "Warning: Measure " << (const void*) Model()->StringLabel ( M ) << " is neither area not volume" << endl;
 #endif
     return Standard_False;
   }
@@ -697,7 +697,7 @@ Standard_Boolean STEPConstruct_Validatio
   Handle(StepGeom_CartesianPoint) P = Handle(StepGeom_CartesianPoint)::DownCast ( item );
   if ( P.IsNull() || P->NbCoordinates() != 3 ) {
 #ifdef OCCT_DEBUG
-    cout << "Warning: Point " << Model()->StringLabel ( P ) << " is not valid for centroid" << endl;
+    cout << "Warning: Point " << (const void*) Model()->StringLabel ( P ) << " is not valid for centroid" << endl;
 #endif
     return Standard_False;;
   }
Index: oce/src/TNaming/TNaming_UsedShapes.cxx
===================================================================
--- oce.orig/src/TNaming/TNaming_UsedShapes.cxx
+++ oce/src/TNaming/TNaming_UsedShapes.cxx
@@ -165,8 +165,8 @@ Standard_OStream& TNaming_UsedShapes::Du
     TopAbs::Print(itr.Key().ShapeType(),anOS);
     anOS<<"  ";
     itr.Value()->Label().EntryDump(anOS);
-    anOS << " Key_TShape   = " <<itr.Key().TShape()->This();
-    anOS << " Value_TShape = " <<itr.Value()->Shape().TShape()->This();    
+    anOS << " Key_TShape   = " <<(const void*)itr.Key().TShape()->This();
+    anOS << " Value_TShape = " <<(const void*)itr.Value()->Shape().TShape()->This();
     anOS<<endl;
   }
 #endif
Index: oce/src/UnitsAPI/UnitsAPI.cxx
===================================================================
--- oce.orig/src/UnitsAPI/UnitsAPI.cxx
+++ oce/src/UnitsAPI/UnitsAPI.cxx
@@ -346,7 +346,7 @@ Standard_Real UnitsAPI::AnyToLS(const St
   }
 #ifdef OCCT_DEBUG
   else
-    cout<<"Warning: BAD Quantity returns in UnitsAPI::AnyToLS(" << aData << "," << aUnit << "," << aDim << ")" << endl;
+    cout<<"Warning: BAD Quantity returns in UnitsAPI::AnyToLS(" << aData << "," << aUnit << "," << (const void*)aDim << ")" << endl;
 #endif
   return aValue;
 }
