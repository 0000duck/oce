From: QbProg <tholag@gmail.com>
Date: Sun, 26 Jun 2011 15:02:43 +0200
Subject: [PATCH 09/82] Added Precompiled Headers support in the build system

---
 CMakeLists.txt              |    6 ++++
 adm/cmake/OccBuildKit.cmake |   58 ++++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 63 insertions(+), 1 deletions(-)

From: QbProg <tholag@gmail.com>
Date: Sun, 26 Jun 2011 15:07:52 +0200
Subject: [PATCH 11/82] Changed the Win32 defined for each module. Each file
 in a DLL must have all the other "__[Module]__DLL"
 defined, since they reside in the same DLL. Else the
 variable/function is both exported and imported
 inside the DLL (this triggers just a warning but it
 is not 100% correct)

---
 adm/cmake/OccBuildKit.cmake |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

From 7d9fbf50e90423ee0e9c38e9c23b9769b4c8985d Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Fri, 5 Aug 2011 08:42:08 +0200
Subject: [PATCH] Use tabulations to indent CMake files, and remove trailing
 spaces

---
 CMakeLists.txt                     |  548 ++++++++++++++++++------------------
 ProjectConfigVersion.cmake.in      |   10 +-
 adm/cmake/DRAWEXE/CMakeLists.txt   |    6 +-
 adm/cmake/OccBuildKit.cmake        |   98 +++----
 adm/cmake/TKOpenGl/CMakeLists.txt  |    6 +-
 adm/cmake/TKService/CMakeLists.txt |    6 +-
 6 files changed, 333 insertions(+), 341 deletions(-)

Index: oce/CMakeLists.txt
===================================================================
--- oce.orig/CMakeLists.txt
+++ oce/CMakeLists.txt
@@ -77,6 +77,12 @@
 	OPTION_WITH_DEFAULT( ${PROJECT_NAME}_USE_BUNDLE "Use OCE Windows Bundle" OFF )
 ENDIF(MSVC)
 
+IF (MSVC AND NOT NMAKE)
+	SET(${PROJECT_NAME}_COMPILER_SUPPORTS_PCH TRUE)
+	OPTION_WITH_DEFAULT( ${PROJECT_NAME}_USE_PCH "Use Precompiled Headers" ON )
+	MARK_AS_ADVANCED(${PROJECT_NAME}_USE_PCH)
+ENDIF(MSVC AND NOT NMAKE)
+
 OPTION_WITH_DEFAULT( ${PROJECT_NAME}_BUILD_SHARED_LIB "Build shared ${PROJECT_NAME} libs" ON )
 OPTION_WITH_DEFAULT( ${PROJECT_NAME}_MODEL "Build model components" ON )
 OPTION_WITH_DEFAULT( ${PROJECT_NAME}_OCAF "Build application framework" ON )
Index: oce/adm/cmake/BuildToolkit.cmake
===================================================================
--- oce.orig/adm/cmake/OccBuildToolkit.cmake
+++ oce/adm/cmake/BuildToolkit.cmake
@@ -1,4 +1,46 @@
 
+# Instructs the MSVC toolset to use the precompiled header PRECOMPILED_HEADER
+# for each source file given in the collection named by SOURCE_VARIABLE_NAME.
+FUNCTION(ENABLE_PRECOMPILED_HEADERS PRECOMPILED_HEADER SOURCE_VARIABLE_NAME)
+	IF(MSVC)
+		set(files ${${SOURCE_VARIABLE_NAME}})
+
+		# Generate precompiled header translation unit
+		get_filename_component(pch_basename ${PRECOMPILED_HEADER} NAME_WE)
+		set(pch_abs ${CMAKE_CURRENT_SOURCE_DIR}/${PRECOMPILED_HEADER})
+		set(pch_unity ${CMAKE_CURRENT_SOURCE_DIR}/Precompiled.cpp)
+		#set_source_files_properties(${pch_unity} PROPERTIES COMPILE_FLAGS "/Yc\"${pch_abs}\"") #this may be useful for nmake
+		set_source_files_properties(${pch_unity} PROPERTIES COMPILE_FLAGS "/Yc\"${PRECOMPILED_HEADER}\"")
+
+		# A list of exclusions patterns. For the moment is global to the entire project
+		SET (excludes "OSD*" "WNT*" "AlienImage_BMPAlienData.cxx"
+		              "Image_PixMap.cxx" "PlotMgt.cxx" "Visual3d_View.cxx" "V3d_View_Print.cxx" "OpenGl*"
+		              "Viewer2dTest_ViewerCommands.cxx" "ViewerTest_*" )
+
+		# Update properties of source files to use the precompiled header.
+		# Additionally, force the inclusion of the precompiled header at beginning of each source file.
+		foreach(source_file ${files} )
+			# Find if the file is on the exclusion list
+			SET(IsExclude FALSE)
+			foreach (exc ${excludes})
+				IF(${source_file} MATCHES ${exc})
+					SET(IsExclude TRUE)
+				ENDIF()
+			endforeach ()
+			IF (NOT IsExclude)
+				GET_FILENAME_COMPONENT(thisext ${source_file} EXT)
+				IF (${thisext} MATCHES ".cxx")
+					set_source_files_properties( ${source_file} PROPERTIES COMPILE_FLAGS "/Yu\"${PRECOMPILED_HEADER}\" /FI\"${PRECOMPILED_HEADER}\""     )
+				ENDIF()
+			ENDIF()
+		endforeach(source_file)
+
+		# Finally, update the source file collection to contain the precompiled header translation unit
+		set(${SOURCE_VARIABLE_NAME} ${pch_unity} ${PRECOMPILED_HEADER} ${${SOURCE_VARIABLE_NAME}} PARENT_SCOPE)
+
+	ENDIF(MSVC)
+ENDFUNCTION(ENABLE_PRECOMPILED_HEADERS)
+
 MESSAGE(STATUS "Processing ToolKit: ${TOOLKIT} (${TOOLKIT_MODULES})")
 SET(TOOLKIT_SOURCE_FILES)
 IF(DEFINED TOOLKIT_INCLUDE_DIRECTORIES)
@@ -15,7 +57,7 @@
 
 	IF (WIN32)
 		# For compilers under Windows a define must be set per file to correctly set the export macro
-		SET_SOURCE_FILES_PROPERTIES(${source_files} PROPERTIES COMPILE_FLAGS "-D__${MODULE}_DLL")
+		ADD_DEFINITIONS("-D__${MODULE}_DLL")
 	ENDIF(WIN32)
 
 	SOURCE_GROUP (${MODULE} FILES ${source_files})
@@ -31,6 +73,16 @@
 	SET(TOOLKIT_RESOURCES ${CMAKE_BINARY_DIR}/Version.rc)
 ENDIF(MSVC)
 
+# Precompiled Headers
+IF(${PROJECT_NAME}_COMPILER_SUPPORTS_PCH AND ${PROJECT_NAME}_USE_PCH)
+
+	IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/Precompiled.h)
+		#MESSAGE("Using Precompiled.h")
+		ENABLE_PRECOMPILED_HEADERS (Precompiled.h TOOLKIT_SOURCE_FILES)
+		SOURCE_GROUP (Precompiled FILES Precompiled.h Precompiled.cpp)
+	ENDIF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/Precompiled.h)
+ENDIF(${PROJECT_NAME}_COMPILER_SUPPORTS_PCH AND ${PROJECT_NAME}_USE_PCH)
+
 ADD_LIBRARY(${TOOLKIT} ${${PROJECT_NAME}_LIBRARY_TYPE} ${TOOLKIT_SOURCE_FILES} ${TOOLKIT_RESOURCES} )
 
 # TODO Add current toolkit header files into a source group?
