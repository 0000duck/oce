From 1438143b50f3d4bcf123f0b47552f3a78077edfd Mon Sep 17 00:00:00 2001
From: Massimo Del Fedele <max@veneto.com>
Date: Sat, 24 Sep 2011 17:33:05 +0200
Subject: [PATCH 1/3] Make TKOpenGL work when building static libraries

(taken from OCC forum: http://www.opencascade.org/org/forum/thread_21868/)
---
 oce_build_config.h.cmake                     |    2 ++
 src/Graphic3d/Graphic3d_GraphicDevice.cxx    |   13 +++++++++++++
 src/Graphic3d/Graphic3d_WNTGraphicDevice.cxx |   13 +++++++++++++
 3 files changed, 28 insertions(+), 0 deletions(-)

From 8ec74388f72389ce08c0abcf5f28313264711b5f Mon Sep 17 00:00:00 2001
From: QbProg <tholag@gmail.com>
Date: Sat, 24 Sep 2011 17:34:33 +0200
Subject: [PATCH 2/3] Fix Win32 TKOpenGL build error when using static
 libraries

---
 inc/OpenGl_Extension.hxx |    9 ++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

From 6790b027a930fd44e2b9ba629d8134087dad3de7 Mon Sep 17 00:00:00 2001
From: Fotios Sioutis <sfotis@gmail.com>
Date: Mon, 14 Nov 2011 10:17:08 +0200
Subject: [PATCH 1/2] Default build (no macros) should be shared lib.

In order to compile succesfully under non cmake platforms the
default build (that has no macros defined) should point to
shared libraries creation.Solves wok compilation without applying
patches to it.WARNING : Modifications needed to CMakeLists.txt
---
 src/Graphic3d/Graphic3d_GraphicDevice.cxx    |    2 +-
 src/Graphic3d/Graphic3d_WNTGraphicDevice.cxx |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

From 1a79ab595e983a98a66eeeef663497ecbe54f661 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Wed, 16 Nov 2011 21:04:47 +0100
Subject: [PATCH 2/2] Apply changes to CMake files to define OCE_BUILD_STATIC_LIB
 macro

---
 CMakeLists.txt           |    2 ++
 Version.rc.cmake         |    8 ++++----
 oce_build_config.h.cmake |    4 ++--
 3 files changed, 8 insertions(+), 6 deletions(-)

Index: oce/inc/OpenGl_Extension.hxx
===================================================================
--- oce.orig/inc/OpenGl_Extension.hxx
+++ oce/inc/OpenGl_Extension.hxx
@@ -42,14 +42,17 @@
 # else
 #  define EXPORT
 # endif  /* DLL */
+#else
+# define EXPORT
+#endif  /* WNT */
+
+#if defined(WNT)
 # ifdef STRICT
 #  undef STRICT
 # endif
 # define STRICT
 # include <windows.h>
-#else
-# define EXPORT
-#endif  /* WNT */
+#endif
 
 #include <GL/gl.h>
 #include <GL/glu.h>
Index: oce/oce_build_config.h.cmake
===================================================================
--- oce.orig/oce_build_config.h.cmake
+++ oce/oce_build_config.h.cmake
@@ -270,3 +270,5 @@
 #cmakedefine OCE_DEFAULT_CSF_GraphicShr "@OCE_DEFAULT_CSF_GraphicShr@"
 #endif
 
+/* Whether OCE is build as static lib */
+#cmakedefine OCE_BUILD_STATIC_LIB
Index: oce/src/Graphic3d/Graphic3d_GraphicDevice.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_GraphicDevice.cxx
+++ oce/src/Graphic3d/Graphic3d_GraphicDevice.cxx
@@ -126,6 +126,7 @@ Handle(Aspect_GraphicDriver) Graphic3d_G
 
 }
 
+#if !defined(OCE_BUILD_STATIC_LIB) && !defined(HAVE_NO_DLL)
 void Graphic3d_GraphicDevice::SetGraphicDriver () {
 
 Standard_CString TheShr;
@@ -182,6 +183,18 @@ OSD_Function new_GLGraphicDriver =
 	}
 
 }
+#else
+
+extern "C"
+{
+     Handle(Graphic3d_GraphicDriver) MetaGraphicDriverFactory(const Standard_CString AShrName);
+}
+
+void Graphic3d_GraphicDevice::SetGraphicDriver ()
+{
+     MyGraphicDriver = MetaGraphicDriverFactory("");
+}
+#endif
 
 #define BAD(x) (((x) == NULL) || (strlen((x)) <= 0))
 
Index: oce/src/Graphic3d/Graphic3d_WNTGraphicDevice.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_WNTGraphicDevice.cxx
+++ oce/src/Graphic3d/Graphic3d_WNTGraphicDevice.cxx
@@ -44,6 +44,7 @@ Handle(Aspect_GraphicDriver) Graphic3d_W
 
 }
 
+#if !defined(OCE_BUILD_STATIC_LIB) && !defined(HAVE_NO_DLL)
 void Graphic3d_WNTGraphicDevice::SetGraphicDriver () 
 {
 
@@ -94,5 +95,17 @@ void Graphic3d_WNTGraphicDevice::SetGrap
   }
 
 }
+#else
+
+extern "C"
+{
+     Handle(Graphic3d_GraphicDriver) MetaGraphicDriverFactory(const Standard_CString AShrName);
+}
+
+void Graphic3d_WNTGraphicDevice::SetGraphicDriver ()
+{
+     MyGraphicDriver = MetaGraphicDriverFactory("");
+}
+#endif
 
 #endif  // WNT
