Index: oce/src/BRepAlgo/BRepAlgo_Tool.cxx
===================================================================
--- oce.orig/src/BRepAlgo/BRepAlgo_Tool.cxx
+++ oce/src/BRepAlgo/BRepAlgo_Tool.cxx
@@ -68,7 +68,7 @@ TopoDS_Shape BRepAlgo_Tool::Deboucle3D(c
       // iterate on sub-shapes and add non-empty.
       TopoDS_Iterator it(S);
       TopoDS_Shape SubShape;
-      Standard_Boolean NbSub = 0;
+      Standard_Boolean NbSub = Standard_False;
       BRep_Builder B;
       if (S.ShapeType() == TopAbs_COMPOUND) {
 	B.MakeCompound(TopoDS::Compound(SS));
@@ -81,10 +81,10 @@ TopoDS_Shape BRepAlgo_Tool::Deboucle3D(c
 	SubShape = Deboucle3D(CurS,Boundary);
 	if ( !SubShape.IsNull()) {
 	  B.Add(SS, SubShape);
-	  NbSub++;
+	  NbSub = Standard_True;
 	}
       }
-      if (NbSub == 0)
+      if (!NbSub)
         {
 #ifdef OCCT_DEBUG
         cout << "No subhape in shape!" << endl;
Index: oce/src/Draw/Draw.cxx
===================================================================
--- oce.orig/src/Draw/Draw.cxx
+++ oce/src/Draw/Draw.cxx
@@ -381,7 +381,7 @@ void Draw_Appli(Standard_Integer argc, c
         cin.get(cmd[++i]);
       } while ((cmd[i] != '\n') && (!cin.fail()));
       cmd[i] = '\0';
-    } while (Draw_Interprete(cmd) != (unsigned int ) -2);
+    } while (Draw_Interprete(cmd));
   }
 #ifdef WNT
   // Destruction de l'application
Index: oce/src/DrawResources/TestCommands.tcl
===================================================================
--- oce.orig/src/DrawResources/TestCommands.tcl
+++ oce/src/DrawResources/TestCommands.tcl
@@ -371,7 +371,10 @@ proc testgrid {args} {
         # commant to run DRAW with a command file;
         # note that empty string is passed as standard input to avoid possible 
         # hang-ups due to waiting for stdin of the launching process
-	set command "exec <<{} DRAWEXE -f $logdir/$group/$grid/${casename}.tcl"
+	if { [catch {set nameofexecutable [info nameofexecutable]}] } {
+		set nameofexecutable "DRAWEXE"
+	}
+	set command "exec <<{} $nameofexecutable -f $logdir/$group/$grid/${casename}.tcl"
 
 	# alternative method to run without temporary file; disabled as it needs too many backslashes
 #	else {
@@ -744,6 +747,13 @@ proc testfile {filelist} {
 proc locate_data_file {filename} {
     global env groupname gridname casename
 
+    if [info exists env(OCE_SKIP_TESTS_DATA)] {
+        # raise error
+        error [join [list "File $filename could not be found" \
+                          "(should be in paths indicated by CSF_TestDataPath environment variable, " \
+                          "or in subfolder data in the script directory)"] "\n"]
+    }
+
     # check if the file is located in the subdirectory data of the script dir
     set scriptfile [info script]
     if { $scriptfile != "" } {
Index: oce/src/FSD/FSD_CmpFile.cdl
===================================================================
--- oce.orig/src/FSD/FSD_CmpFile.cdl
+++ oce/src/FSD/FSD_CmpFile.cdl
@@ -319,7 +319,6 @@ is
 
     MagicNumber(myclass)
     	returns CString from Standard is private;
-    ---C++: return const
     
     RaiseError(me: in out ; theFailure: Type from Standard) is private;
         
Index: oce/src/NCollection/NCollection_Mat4.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_Mat4.hxx
+++ oce/src/NCollection/NCollection_Mat4.hxx
@@ -203,8 +203,6 @@ public:
   //! Raw access to the data (for OpenGL exchange).
   const Element_t* GetData()    const { return myMat; }
   Element_t*       ChangeData()       { return myMat; }
-  operator const   Element_t*() const { return myMat; }
-  operator         Element_t*()       { return myMat; }
 
   //! Multiply by the vector (M * V).
   //! @param theVec [in] the vector to multiply.
@@ -228,10 +226,10 @@ public:
     size_t aInputElem;
     for (size_t aResElem = 0; aResElem < 16; ++aResElem)
     {
-      aMatRes[aResElem] = (Element_t )0;
+      aMatRes.myMat[aResElem] = (Element_t )0;
       for (aInputElem = 0; aInputElem < 4; ++aInputElem)
       {
-        aMatRes[aResElem] += theMatA.GetValue(aResElem % 4, aInputElem)
+        aMatRes.myMat[aResElem] += theMatA.GetValue(aResElem % 4, aInputElem)
                            * theMatB.GetValue(aInputElem, aResElem / 4);
       }
     }
Index: oce/src/NCollection/NCollection_Vec3.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_Vec3.hxx
+++ oce/src/NCollection/NCollection_Vec3.hxx
@@ -161,14 +161,14 @@ public:
   friend NCollection_Vec3 operator+ (const NCollection_Vec3& theLeft,
                                      const NCollection_Vec3& theRight)
   {
-    NCollection_Vec3 aSumm = NCollection_Vec3 (theLeft);
+    NCollection_Vec3 aSumm = NCollection_Vec3<Element_t> (theLeft);
     return aSumm += theRight;
   }
 
   //! Unary -.
   NCollection_Vec3 operator-() const
   {
-    return NCollection_Vec3 (-x(), -y(), -z());
+    return NCollection_Vec3<Element_t> (-x(), -y(), -z());
   }
 
   //! Compute per-component subtraction.
@@ -327,19 +327,19 @@ public:
   //! Constuct DX unit vector.
   static NCollection_Vec3 DX()
   {
-    return NCollection_Vec3 (Element_t(1), Element_t(0), Element_t(0));
+    return NCollection_Vec3<Element_t> (Element_t(1), Element_t(0), Element_t(0));
   }
 
   //! Constuct DY unit vector.
   static NCollection_Vec3 DY()
   {
-    return NCollection_Vec3 (Element_t(0), Element_t(1), Element_t(0));
+    return NCollection_Vec3<Element_t> (Element_t(0), Element_t(1), Element_t(0));
   }
 
   //! Constuct DZ unit vector.
   static NCollection_Vec3 DZ()
   {
-    return NCollection_Vec3 (Element_t(0), Element_t(0), Element_t(1));
+    return NCollection_Vec3<Element_t> (Element_t(0), Element_t(0), Element_t(1));
   }
 
 private:
Index: oce/src/NCollection/NCollection_Vec4.hxx
===================================================================
--- oce.orig/src/NCollection/NCollection_Vec4.hxx
+++ oce/src/NCollection/NCollection_Vec4.hxx
@@ -215,7 +215,7 @@ public:
   //! Unary -.
   NCollection_Vec4 operator-() const
   {
-    return NCollection_Vec4 (-x(), -y(), -z(), -w());
+    return NCollection_Vec4<Element_t> (-x(), -y(), -z(), -w());
   }
 
   //! Compute per-component subtraction.
@@ -232,7 +232,7 @@ public:
   friend NCollection_Vec4 operator- (const NCollection_Vec4& theLeft,
                                      const NCollection_Vec4& theRight)
   {
-    NCollection_Vec4 aSumm = NCollection_Vec4 (theLeft);
+    NCollection_Vec4 aSumm = NCollection_Vec4<Element_t> (theLeft);
     return aSumm -= theRight;
   }
 
Index: oce/src/OSD/OSD_FileNode.cxx
===================================================================
--- oce.orig/src/OSD/OSD_FileNode.cxx
+++ oce/src/OSD/OSD_FileNode.cxx
@@ -934,16 +934,13 @@ void _osd_wnt_set_error ( OSD_Error& err
 
  DWORD              errCode;
  Standard_Character buffer[ 2048 ];
- va_list            arg_ptr;
-
- va_start ( arg_ptr, err );
 
  errCode = GetLastError ();
 
  if (  !FormatMessage (
-         FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_ARGUMENT_ARRAY,
+         FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,
          0, errCode, MAKELANGID( LANG_NEUTRAL, SUBLANG_NEUTRAL ),
-         buffer, 2048, &arg_ptr
+         buffer, 2048, NULL
         )
  ) {
  
@@ -954,8 +951,6 @@ void _osd_wnt_set_error ( OSD_Error& err
 
  err.SetValue ( errCode, who, buffer );
 
- va_end ( arg_ptr );
-
 }  // end _set_error
 
 
Index: oce/src/OpenGl/OpenGl_Context.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Context.cxx
+++ oce/src/OpenGl/OpenGl_Context.cxx
@@ -79,7 +79,6 @@ OpenGl_Context::OpenGl_Context (const Ha
   core43back (NULL),
   core44     (NULL),
   core44back (NULL),
-  caps   (!theCaps.IsNull() ? theCaps : new OpenGl_Caps()),
 #if defined(GL_ES_VERSION_2_0)
   hasHighp   (Standard_False),
   hasTexRGBA8(Standard_False),
@@ -123,6 +122,11 @@ OpenGl_Context::OpenGl_Context (const Ha
 #endif
   myDrawBuffer (0)
 {
+  if (!theCaps.IsNull())
+    caps = theCaps;
+  else
+    caps = new OpenGl_Caps();
+
 #if defined(__APPLE__) && !defined(MACOSX_USE_GLX)
   // Vendors can not extend functionality on this system
   // and developers are limited to OpenGL support provided by Mac OS X SDK.
@@ -798,7 +802,7 @@ static void APIENTRY debugCallbackWrap(u
                                        unsigned int theSeverity,
                                        int          /*theLength*/,
                                        const char*  theMessage,
-                                       void*  theUserParam)
+                                       const void*  theUserParam)
 {
   OpenGl_Context* aCtx = (OpenGl_Context* )theUserParam;
   aCtx->PushMessage (theSource, theType, theId, theSeverity, theMessage);
@@ -2224,7 +2228,7 @@ void OpenGl_Context::ApplyModelWorldMatr
   if (core11 != NULL)
   {
     core11->glMatrixMode (GL_MODELVIEW);
-    core11->glLoadMatrixf (ModelWorldState.Current());
+    core11->glLoadMatrixf (ModelWorldState.Current().GetData());
   }
 #endif
 
@@ -2244,7 +2248,7 @@ void OpenGl_Context::ApplyWorldViewMatri
   if (core11 != NULL)
   {
     core11->glMatrixMode (GL_MODELVIEW);
-    core11->glLoadMatrixf (WorldViewState.Current());
+    core11->glLoadMatrixf (WorldViewState.Current().GetData());
   }
 #endif
 
Index: oce/src/OpenGl/OpenGl_ShaderManager.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_ShaderManager.cxx
+++ oce/src/OpenGl/OpenGl_ShaderManager.cxx
@@ -847,7 +847,7 @@ static void PushAspectFace (const Handle
 {
   theProgram->SetUniform (theCtx,
                           theProgram->GetStateLocation (OpenGl_OCCT_TEXTURE_ENABLE),
-                          theAspect->DoTextureMap());
+                          (GLint)theAspect->DoTextureMap());
   theProgram->SetUniform (theCtx,
                           theProgram->GetStateLocation (OpenGl_OCCT_ACTIVE_SAMPLER),
                           0 /* GL_TEXTURE0 */);
Index: oce/src/QABugs/QABugs_3.cxx
===================================================================
--- oce.orig/src/QABugs/QABugs_3.cxx
+++ oce/src/QABugs/QABugs_3.cxx
@@ -1010,7 +1010,10 @@ static Standard_Integer coordload (Draw_
   }
 
   BRepBuilderAPI_MakeFace aMakeFace (aMakeWire.Wire());
-  DBRep::Set (theArgVec[1], aMakeFace.IsDone() ? aMakeFace.Face() : TopoDS_Face());
+  TopoDS_Face aFace;
+  if (aMakeFace.IsDone())
+    aFace = aMakeFace.Face();
+  DBRep::Set (theArgVec[1], aFace);
   return 0;
 }
 
Index: oce/src/Standard/Standard_Atomic.hxx
===================================================================
--- oce.orig/src/Standard/Standard_Atomic.hxx
+++ oce/src/Standard/Standard_Atomic.hxx
@@ -27,6 +27,8 @@
 #ifndef _Standard_Atomic_HeaderFile
 #define _Standard_Atomic_HeaderFile
 
+#include <Standard_Macro.hxx>
+
 //! Increments atomically integer variable pointed by theValue
 //! and returns resulting incremented value.
 inline int Standard_Atomic_Increment (volatile int* theValue);
Index: oce/src/Standard/Standard_TypeDef.hxx
===================================================================
--- oce.orig/src/Standard/Standard_TypeDef.hxx
+++ oce/src/Standard/Standard_TypeDef.hxx
@@ -18,21 +18,18 @@
 #include <cstddef>
 #include <ctime>
 
-#if(defined(_MSC_VER) && (_MSC_VER < 1600))
+#if(defined(_MSC_VER) && (_MSC_VER < 1800)) || defined(__BORLANDC__)
+
+  #if defined(_MSC_VER) && (_MSC_VER < 1600)
   // old MSVC - hasn't stdint header
   typedef unsigned __int8   uint8_t;
   typedef unsigned __int16  uint16_t;
   typedef unsigned __int32  uint32_t;
   typedef unsigned __int64  uint64_t;
-#else
-#if defined(__hpux) && !defined(__GNUC__)
-  #include <inttypes.h>
-#else
+  #else
   #include <stdint.h>
-#endif
-#endif
+  #endif
 
-#if(defined(_MSC_VER) && (_MSC_VER < 1800))
   // only Visual Studio 2013 (vc12) provides <cinttypes> header
   // we do not defined all macros here - only used by OCCT framework
   #ifdef _WIN64
Index: oce/src/TObj/TObj_Model.cxx
===================================================================
--- oce.orig/src/TObj/TObj_Model.cxx
+++ oce/src/TObj/TObj_Model.cxx
@@ -233,7 +233,7 @@ Handle(TCollection_HAsciiString) TObj_Mo
   TCollection_AsciiString aPath (aDoc->GetPath());
   return !aPath.IsEmpty()
        ? new TCollection_HAsciiString (aPath)
-       : Handle(TCollection_HAsciiString)();
+       : new TCollection_HAsciiString ();
 }
 
 //=======================================================================
Index: oce/src/ViewerTest/ViewerTest_CMPLRS.edl
===================================================================
--- oce.orig/src/ViewerTest/ViewerTest_CMPLRS.edl
+++ oce/src/ViewerTest/ViewerTest_CMPLRS.edl
@@ -17,6 +17,6 @@
 
   @uses "CSF.edl" ;
 
-  @string %CMPLRS_CXX_Options += " " %CSF_TCL_INCLUDE;
+  @string %CMPLRS_CXX_Options += " " %CSF_TCL_INCLUDE " " %CSF_FREETYPE_INCLUDES " ";
 
 @endif;
Index: oce/inc/BOPDS_Curve.hxx
===================================================================
--- oce.orig/inc/BOPDS_Curve.hxx
+++ oce/inc/BOPDS_Curve.hxx
@@ -17,6 +17,7 @@
 #include <Bnd_Box.hxx>
 #include <Handle_BOPDS_PaveBlock.hxx>
 #include <Standard_Boolean.hxx>
+#include <BOPDS_PaveBlock.hxx>
 class IntTools_Curve;
 class Bnd_Box;
 class BOPDS_PaveBlock;
Index: oce/inc/IntPatch_PrmPrmIntersection.hxx
===================================================================
--- oce.orig/inc/IntPatch_PrmPrmIntersection.hxx
+++ oce/inc/IntPatch_PrmPrmIntersection.hxx
@@ -18,6 +18,7 @@
 #include <Standard_Integer.hxx>
 #include <Handle_IntPatch_Line.hxx>
 #include <Handle_IntSurf_LineOn2S.hxx>
+#include <IntPatch_Polyhedron.hxx>
 class Standard_OutOfRange;
 class StdFail_NotDone;
 class Adaptor3d_HSurface;
Index: oce/src/StdPrs/StdPrs_HLRShape.hxx
===================================================================
--- oce.orig/src/StdPrs/StdPrs_HLRShape.hxx
+++ oce/src/StdPrs/StdPrs_HLRShape.hxx
@@ -18,6 +18,7 @@
 #include <Prs3d_Presentation.hxx>
 #include <Prs3d_Drawer.hxx>
 #include <Prs3d_Projector.hxx>
+#include <TopoDS_Shape.hxx>
 
 // Computes the presentation of objects with
 // removal of their hidden lines for a specific
Index: oce/inc/config.h
===================================================================
--- oce.orig/inc/config.h
+++ oce/inc/config.h
@@ -938,9 +938,6 @@
 /* Define to 1 if you have the <X11/extensions/transovl.h> header file. */
 /* #undef HAVE_X11_EXTENSIONS_TRANSOVL_H */
 
-/* Define to 1 if you have the <Xmu/Editres.h> header file. */
-/* #undef HAVE_XMU_EDITRES_H */
-
 /* Define to 1 if your C compiler doesn't accept -c and -o together. */
 /* #undef NO_MINUS_C_MINUS_O */
 
@@ -1286,9 +1283,6 @@
 /* Define to 1 if you have the <X11/extensions/transovl.h> header file. */
 /* #undef HAVE_X11_EXTENSIONS_TRANSOVL_H */
 
-/* Define to 1 if you have the <Xmu/Editres.h> header file. */
-/* #undef HAVE_XMU_EDITRES_H */
-
 /* Define to 1 if your C compiler doesn't accept -c and -o together. */
 /* #undef NO_MINUS_C_MINUS_O */
 
@@ -1785,9 +1779,6 @@
 /* Define to 1 if you have the <X11/extensions/transovl.h> header file. */
 /* #undef HAVE_X11_EXTENSIONS_TRANSOVL_H */
 
-/* Define to 1 if you have the <Xmu/Editres.h> header file. */
-#define HAVE_XMU_EDITRES_H 1
-
 /* Define to 1 if your C compiler doesn't accept -c and -o together. */
 /* #undef NO_MINUS_C_MINUS_O */
 
Index: oce/src/FSD/FSD_FileHeader.hxx
===================================================================
--- oce.orig/src/FSD/FSD_FileHeader.hxx
+++ oce/src/FSD/FSD_FileHeader.hxx
@@ -33,12 +33,21 @@ struct FSD_FileHeader {
 };
 
 #ifndef DO_INVERSE
+# ifdef HAVE_CONFIG_H
+#  include <oce-config.h>
+#  ifdef WORDS_BIGENDIAN
+#   define DO_INVERSE 1
+#  else
+#   define DO_INVERSE 0
+#  endif
+# else
 #if defined ( SOLARIS ) || defined ( IRIX ) || defined(__hpux)
 #define DO_INVERSE 1
 #else
 #define DO_INVERSE 0
 #endif
 #endif
+#endif
 
 //=======================================================================
 //function : InverseInt
Index: oce/src/IntPatch/IntPatch_InterferencePolyhedron.cxx
===================================================================
--- oce.orig/src/IntPatch/IntPatch_InterferencePolyhedron.cxx
+++ oce/src/IntPatch/IntPatch_InterferencePolyhedron.cxx
@@ -901,7 +901,7 @@ Standard_Boolean IntPatch_InterferencePo
 	if (nob<0) break;
       }
       if (nob>=0) {
-	while (nob<nbNoInserted) {
+	while ((nob<nbNoInserted) && (nob + 1 < static_cast<Standard_Integer>(sizeof(piToInsert)))) {
 	  piToInsert[nob]=piToInsert[nob+1];
 	  nob++;
 	}
Index: oce/src/LDOM/LDOMBasicString.cxx
===================================================================
--- oce.orig/src/LDOM/LDOMBasicString.cxx
+++ oce/src/LDOM/LDOMBasicString.cxx
@@ -137,8 +137,10 @@ LDOMBasicString& LDOMBasicString::operat
 
 LDOMBasicString& LDOMBasicString::operator = (const LDOMBasicString& anOther)
 {
-  if (myType == LDOM_AsciiFree && myVal.ptr)
+  if (myType == LDOM_AsciiFree && myVal.ptr) {
+    if (myVal.ptr == anOther.myVal.ptr && myType == anOther.Type()) return * this;
     delete [] (char *) myVal.ptr;
+  }
   myType    = anOther.Type();
   switch (myType) {
   case LDOM_AsciiFree:
Index: oce/test/gp_test/gp_test.cpp
===================================================================
--- oce.orig/test/gp_test/gp_test.cpp
+++ oce/test/gp_test/gp_test.cpp
@@ -31,8 +31,7 @@ TEST(gpTestSuite, testGCC42gp_Trsf)
     T.SetValues(
         1.0, 0.0, 0.0, 0.0,
         0.0, 1.0, 0.0, 0.0,
-        0.0, 0.0, 1.0, 0.0,
-        1.e-6, 1.e-6);
+        0.0, 0.0, 1.0, 0.0);
     ASSERT_EQ(1.0,T.Value(1,1));
     ASSERT_EQ(1.0,T.Value(2,2));
     ASSERT_EQ(1.0,T.Value(3,3));
Index: oce/inc/Select3D_SensitiveTriangulation.lxx
===================================================================
--- oce.orig/inc/Select3D_SensitiveTriangulation.lxx
+++ /dev/null
@@ -1,5 +0,0 @@
-
-inline Standard_Integer Select3D_SensitiveTriangulation::DetectedTriangle() const
-{
-  return myDetectedTr;
-}
Index: oce/src/BndLib/BndLib_Add2dCurve.cxx
===================================================================
--- oce.orig/src/BndLib/BndLib_Add2dCurve.cxx
+++ oce/src/BndLib/BndLib_Add2dCurve.cxx
@@ -530,14 +530,13 @@ Standard_Boolean BndLib_Box2dCurve::IsTy
 void BndLib_Box2dCurve::PerformLineConic()
 {
   Standard_Integer i, iInf[2];
-  Standard_Real  aTb[2], aTinf;
+  Standard_Real  aTb[2];
   gp_Pnt2d aP2D;
   //
   myErrorStatus=0;
   //
   Bnd_Box2d& aBox2D=myBox;
   //
-  aTinf=Precision::Infinite();
   iInf[0]=0;
   iInf[1]=0;
   aTb[0]=myT1;
Index: oce/src/OSD/OSD.cxx
===================================================================
--- oce.orig/src/OSD/OSD.cxx
+++ oce/src/OSD/OSD.cxx
@@ -16,7 +16,9 @@
 #include <Standard_Stream.hxx>
 #include <stdio.h>
 #include <math.h>
-#if defined(isfinite)
+#ifdef WNT
+# define finite _finite
+#elif defined(isfinite)
 # define finite isfinite
 #endif
 
@@ -74,7 +76,6 @@ Standard_Boolean OSD::CStringToReal(cons
 # define _DEXPLEN	             11
 # define _IEEE		              1
 # define DMAXEXP	             ((1 << _DEXPLEN - 1) - 1 + _IEEE)
-# define finite                      _finite
 # define SLEEP(NSEC)                 Sleep(1000*(NSEC))
 #else
 # define SLEEP(NSEC)                 sleep(NSEC)
Index: oce/src/OpenGl/OpenGl_Workspace.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Workspace.cxx
+++ oce/src/OpenGl/OpenGl_Workspace.cxx
@@ -375,7 +375,7 @@ void OpenGl_Workspace::setTextureParams
   OpenGl_Utils::Scale     (aTextureMat,  aScale.x(),  aScale.y(), 1.0f);
   OpenGl_Utils::Translate (aTextureMat, -aTrans.x(), -aTrans.y(), 0.0f);
   OpenGl_Utils::Rotate    (aTextureMat, -aParams->Rotation(), 0.0f, 0.0f, 1.0f);
-  glLoadMatrixf (aTextureMat);
+  glLoadMatrixf (aTextureMat.GetData());
 
   // setup generation of texture coordinates
   switch (aParams->GenMode())
Index: oce/src/OpenGl/OpenGl_ShaderProgram.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_ShaderProgram.cxx
+++ oce/src/OpenGl/OpenGl_ShaderProgram.cxx
@@ -26,7 +26,7 @@
 #include <OpenGl_ShaderManager.hxx>
 #include <OpenGl_ArbTexBindless.hxx>
 
-#ifdef __BORLANDC__
+#if defined(__BORLANDC__) || defined(__MINGW32__)
 #include <malloc.h>
 #endif
 
@@ -1075,7 +1075,7 @@ Standard_Boolean OpenGl_ShaderProgram::S
     return Standard_False;
   }
 
-  theCtx->core20->glUniformMatrix4fv (theLocation, 1, GL_FALSE, theTranspose ? theValue.Transposed() : theValue);
+  theCtx->core20->glUniformMatrix4fv (theLocation, 1, GL_FALSE, theTranspose ? theValue.Transposed().GetData() : theValue.GetData());
   return Standard_True;
 }
 
Index: oce/src/OpenGl/OpenGl_Text.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Text.cxx
+++ oce/src/OpenGl/OpenGl_Text.cxx
@@ -474,7 +474,7 @@ void OpenGl_Text::setupMatrix (const Han
                                             std::floor (myWinY + theDVec.y()),
                                             myWinZ + theDVec.z(),
                                             OpenGl_Mat4d::Map (THE_IDENTITY_MATRIX),
-                                            OpenGl_Mat4d::Map (myProjMatrix),
+                                            OpenGl_Mat4d::Map (myProjMatrix.GetData()),
                                             myViewport,
                                             anObjX,
                                             anObjY,
Index: oce/src/OpenGl/OpenGl_ShaderObject.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_ShaderObject.cxx
+++ oce/src/OpenGl/OpenGl_ShaderObject.cxx
@@ -20,7 +20,7 @@
 #include <Standard_Assert.hxx>
 #include <TCollection_AsciiString.hxx>
 
-#ifdef __BORLANDC__
+#if defined(__BORLANDC__) || defined(__MINGW32__)
 #include <malloc.h>
 #endif
 
Index: oce/src/Standard/Standard_Version.hxx
===================================================================
--- oce.orig/src/Standard/Standard_Version.hxx
+++ oce/src/Standard/Standard_Version.hxx
@@ -13,6 +13,8 @@
 // Alternatively, this file may be used under the terms of Open CASCADE
 // commercial license or contractual agreement.
 
+#include "oce-config.h"
+
 /*======================================================================
 // 
 // Purpose:   Defines macros identifying current version of Open CASCADE
