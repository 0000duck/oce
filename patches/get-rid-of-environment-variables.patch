commit 3859df6bc2d947d017175ac755c9e9a00cc1b3b2
Author: Denis Barbier <bouzim@gmail.com>
Date:   Thu Apr 21 21:40:42 2011 +0200

    Get rid of all environment variables
    
    If environment variables are not set, provide default values
    which are set according to installation paths.
    
    This works only for CMake-based builds.

From 22648a6fbdb9d2257a2a3d018d9a0b253838e4a3 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Mon, 29 Aug 2011 08:15:36 +0200
Subject: [PATCH] Modify tcl scripts to not require $env(CASROOT)

"info script" returns the path of the file being executed, and points to
DrawResources directory.  Sibling directories are computed from this value.

DrawDefault does no more have to be generated by CMake.
---
 CMakeLists.txt                         |    8 +------
 DrawDefault.cmake                      |   37 --------------------------------
 src/DrawResources/DataExchangeDemo.tcl |    6 +++-
 src/DrawResources/DrawDefault          |    6 +----
 src/DrawResources/OCAFDemo.tcl         |    2 +-
 src/DrawResources/TKTopTest.tcl        |    4 +-
 6 files changed, 9 insertions(+), 54 deletions(-)
 delete mode 100644 DrawDefault.cmake

Index: oce/CMakeLists.txt
===================================================================
--- oce.orig/CMakeLists.txt
+++ oce/CMakeLists.txt
@@ -408,6 +408,7 @@ IF(${PROJECT_NAME}_DRAW)
 		${DRAWRESOURCES_TCL_FILES}
 		src/DrawResources/DRAW.doc
 		src/DrawResources/DRAW.info
+		src/DrawResources/DrawDefault
 		src/DrawResources/DrawPlugin
 		src/DrawResources/demo
 		src/DrawResources/demo.bat
@@ -831,13 +832,6 @@ CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_D
 INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/install_inc/oce-config.h
 		DESTINATION ${${PROJECT_NAME}_INSTALL_INCLUDE_DIR} COMPONENT Development )
 
-IF(${PROJECT_NAME}_DRAW)
-	CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/DrawDefault.cmake
-		${CMAKE_CURRENT_BINARY_DIR}/DrawDefault @ONLY )
-	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/DrawDefault
-		DESTINATION ${${PROJECT_NAME}_INSTALL_DATA_DIR}/src/DrawResources)
-ENDIF(${PROJECT_NAME}_DRAW)
-
 # Version information
 IF(NOT ${PROJECT_NAME}_NO_LIBRARY_VERSION)
 CONFIGURE_FILE (${CMAKE_CURRENT_SOURCE_DIR}/Version.rc.cmake
Index: oce/DrawDefault.cmake
===================================================================
--- oce.orig/DrawDefault.cmake
+++ /dev/null
@@ -1,37 +0,0 @@
-set tcl_interactive 1
-set tcl_precision 17
-
-if [info exists library] {
-  source [file join $library init.tcl]
-}
-set dir ""
-if { [info exists env(DRAWHOME) ] } { 
-  set dir $env(DRAWHOME)  
-} else {
-    if { [info exists env(CASROOT) ] } {
-  set dir [file join $env(CASROOT) src DrawResources]
-    } else {
-  set dir [file join "@OCE_ABSPATH_DATA_DIR@" src DrawResources]
-    }
-}
-
-# san - 02/08/2002 - In Tcl8.3 it is no longer necessary to load Tix explicitly on WNT
-#if { [info exists env(STATION)] } {
-#  if { $env(STATION) == "wnt" } {
-#    load tix8183.dll Tix
-#  }
-#}
-
-if { [file exist  $dir] } { 
-   source [file join $dir StandardCommands.tcl]
-   source [file join $dir StandardViews.tcl]
-   source [file join $dir Geometry.tcl]
-   if [info exists tk_version] {source [file join $dir DrawTK.tcl]}
-   if [file readable DrawAppliInit] {
-  source DrawAppliInit
-   }
-   set stationname $tcl_platform(platform)
-   if { ${stationname} == "windows" } {
-      wm iconbitmap . -default [file join $dir lamp.ico]
-   }
-} 
Index: oce/src/Aspect/Aspect_Driver.cxx
===================================================================
--- oce.orig/src/Aspect/Aspect_Driver.cxx
+++ oce/src/Aspect/Aspect_Driver.cxx
@@ -53,6 +53,11 @@ Aspect_Driver::Aspect_Driver () {
   fontdir =  getenv("CSF_MDTVFontDirectory" );
   if ( !fontdir) {
     casroot  = getenv("CASROOT");
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( !casroot ) {
+      casroot = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( casroot ) {
       TCollection_AsciiString CasRootString (casroot);
       CasRootString += "/src/FontMFT" ; 
Index: oce/src/DPrsStd/DPrsStd.cxx
===================================================================
--- oce.orig/src/DPrsStd/DPrsStd.cxx
+++ oce/src/DPrsStd/DPrsStd.cxx
@@ -76,6 +76,11 @@ static Standard_Boolean FoundCAFPlugin (
   Standard_Boolean hasPlugin = Standard_False; 
   TCollection_AsciiString PluginName ;
   if ( !plugin ) { 
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( !casroot ) {
+      casroot = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( casroot ) {
       PluginName = TCollection_AsciiString (casroot);
       PluginName+="/src/StdResource" ;
Index: oce/src/Draw/Draw.cxx
===================================================================
--- oce.orig/src/Draw/Draw.cxx
+++ oce/src/Draw/Draw.cxx
@@ -288,6 +288,8 @@ void Draw_Appli(Standard_Integer argc, c
     {
 #ifdef WNT
       ReadInitFile ("ddefault");
+#elif defined(OCE_INSTALL_DATA_DIR)
+	  ReadInitFile(OCE_INSTALL_DATA_DIR "/src/DrawResources/DrawDefault");
 #else
       cout << " the CASROOT variable is mandatory to Run OpenCascade "<< endl;
       cout << "No default file" << endl;
Index: oce/src/Draw/Draw_PloadCommands.cxx
===================================================================
--- oce.orig/src/Draw/Draw_PloadCommands.cxx
+++ oce/src/Draw/Draw_PloadCommands.cxx
@@ -69,6 +69,11 @@ static Standard_Boolean FindPluginFile (
     // now try by CASROOT
     aPluginDir = getenv("CASROOT");
 
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( aPluginDir.IsEmpty() ) {
+      aPluginDir = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( !aPluginDir.IsEmpty() ) {
       aPluginDir +="/src/DrawResources" ;
       aToSetCSFVariable = Standard_True; //CSF variable to be set later
Index: oce/src/DrawResources/DataExchangeDemo.tcl
===================================================================
--- oce.orig/src/DrawResources/DataExchangeDemo.tcl
+++ oce/src/DrawResources/DataExchangeDemo.tcl
@@ -53,9 +53,11 @@ if { [winfo exists .h ] } {
     destroy .h
 }
 
-if { [info exists env(CASROOT)] } {
-    set thedir [file join $env(CASROOT) src DEResource]
+set thedir [file join [file dirname [file dirname [info script]] DEResource]
+if { [file isdirectory ${thedir}] } {
     cd ${thedir}
+} else {
+    cd [file dirname [info script]]
 }
 
 datadir .
Index: oce/src/DrawResources/DrawDefault
===================================================================
--- oce.orig/src/DrawResources/DrawDefault
+++ oce/src/DrawResources/DrawDefault
@@ -8,11 +8,7 @@ set dir ""
 if { [info exists env(DRAWHOME) ] } { 
   set dir $env(DRAWHOME)  
 } else {
-  if { [info exists env(CASROOT) ] } {
-    set dir [file join $env(CASROOT) src DrawResources]
-  } else {
-    puts " CASROOT is Mandatory to Run OpenCascade"
-  }
+  set dir [file dirname [info script]]
 }
 
 # san - 02/08/2002 - In Tcl8.3 it is no longer necessary to load Tix explicitly on WNT
Index: oce/src/DrawResources/OCAFDemo.tcl
===================================================================
--- oce.orig/src/DrawResources/OCAFDemo.tcl
+++ oce/src/DrawResources/OCAFDemo.tcl
@@ -17,7 +17,7 @@
 
 # first , Opening Document write on Unix 
 puts "First , Opening Document write on Unix "
-set Data [file join $env(CASROOT) src TCAF]
+set Data [file join [file dirname [file dirname [info script]] TCAF]
 
 set DocName [file join ${Data} FileUnix.std]
 if [ file exists ${DocName}  ] {
Index: oce/src/DrawResources/TKTopTest.tcl
===================================================================
--- oce.orig/src/DrawResources/TKTopTest.tcl
+++ oce/src/DrawResources/TKTopTest.tcl
@@ -16,5 +16,5 @@
 # and conditions governing the rights and limitations under the License.
 
 set Draw_GEOMETRY 1
-source $env(CASROOT)/src/DrawResources/CURVES.tcl
-source $env(CASROOT)/src/DrawResources/SURFACES.tcl
+source [file dirname [info script]]/CURVES.tcl
+source [file dirname [info script]]/SURFACES.tcl
Index: oce/src/Graphic3d/Graphic3d_GraphicDevice.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_GraphicDevice.cxx
+++ oce/src/Graphic3d/Graphic3d_GraphicDevice.cxx
@@ -192,6 +192,9 @@ TCollection_AsciiString Graphic3d_Graphi
     return aEnvShr.Value();
   }
 
+#ifdef OCE_DEFAULT_CSF_GraphicShr
+    return TCollection_AsciiString (OCE_DEFAULT_CSF_GraphicShr);
+#else
   // load TKOpenGl using default searching mechanisms in system
 #if defined(__hpux) || defined(HPUX)
   return TCollection_AsciiString ("libTKOpenGl.sl");
@@ -200,6 +203,7 @@ TCollection_AsciiString Graphic3d_Graphi
 #else
   return TCollection_AsciiString ("libTKOpenGl.so");
 #endif
+#endif
 }
 
 #endif // !WNT
Index: oce/src/Graphic3d/Graphic3d_Texture1D.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_Texture1D.cxx
+++ oce/src/Graphic3d/Graphic3d_Texture1D.cxx
@@ -48,6 +48,11 @@ static TCollection_AsciiString GetEnvir
     Standard_Boolean HasDefinition = Standard_False ;
     if ( !envir ) { 
       casroot  = getenv("CASROOT");
+#ifdef OCE_INSTALL_DATA_DIR
+      if ( !casroot ) {
+	casroot  = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if ( casroot ) {
 	VarName = TCollection_AsciiString  (casroot);
 	VarName += "/src/Textures" ;
Index: oce/src/Graphic3d/Graphic3d_Texture2D.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_Texture2D.cxx
+++ oce/src/Graphic3d/Graphic3d_Texture2D.cxx
@@ -44,6 +44,11 @@ static TCollection_AsciiString GetEnvir
     Standard_Boolean HasDefinition = Standard_False ;
     if ( !envir ) { 
       casroot  = getenv("CASROOT");
+#ifdef OCE_INSTALL_DATA_DIR
+      if ( !casroot ) {
+	casroot  = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if ( casroot ) {
 	VarName = TCollection_AsciiString  (casroot);
 	VarName += "/src/Textures" ;
Index: oce/src/Graphic3d/Graphic3d_TextureEnv.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_TextureEnv.cxx
+++ oce/src/Graphic3d/Graphic3d_TextureEnv.cxx
@@ -45,6 +45,11 @@ static TCollection_AsciiString GetEnvir
     Standard_Boolean HasDefinition = Standard_False ;
     if ( !envir ) { 
       casroot  = getenv("CASROOT");
+#ifdef OCE_INSTALL_DATA_DIR
+      if ( !casroot ) {
+	casroot  = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if ( casroot ) {
 	VarName = TCollection_AsciiString  (casroot);
 	VarName += "/src/Textures" ;
Index: oce/src/Resource/Resource_Manager.cxx
===================================================================
--- oce.orig/src/Resource/Resource_Manager.cxx
+++ oce/src/Resource/Resource_Manager.cxx
@@ -75,6 +75,8 @@ Resource_Manager::Resource_Manager(const
   Debug = (getenv("ResourceDebug") != NULL) ;
 
   TCollection_AsciiString EnvVar, CSF_ = "CSF_" ;
+  TCollection_AsciiString DefaultVar;
+  TCollection_AsciiString Name = aName ;
   TCollection_AsciiString Directory ;
   Standard_CString dir ;
 
@@ -87,9 +89,19 @@ Resource_Manager::Resource_Manager(const
     Load(Directory,myName,myRefMap);
   }
   else
+  {
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( Name.IsEqual("STEP") || Name.IsEqual("IGES"))
+      DefaultVar = OCE_INSTALL_DATA_DIR "/src/XSTEPResource";
+    else
+      DefaultVar = OCE_INSTALL_DATA_DIR "/src/StdResource";
+    Load(DefaultVar,myName,myRefMap);
+#else
     if (myVerbose)
       cout << "Resource Manager Warning: Environment variable \"" << EnvVar
 	   << "\" not set." << endl;
+#endif
+  }
 
   EnvVar = CSF_ + aName + "UserDefaults" ;
   if ((dir = getenv (EnvVar.ToCString())) != NULL) {
Index: oce/src/UnitsAPI/UnitsAPI.cxx
===================================================================
--- oce.orig/src/UnitsAPI/UnitsAPI.cxx
+++ oce/src/UnitsAPI/UnitsAPI.cxx
@@ -53,6 +53,11 @@ void UnitsAPI::CheckLoading (const Units
     else {
       OSD_Environment CasRootEnv("CASROOT");
       TCollection_AsciiString CasRootString(CasRootEnv.Value());
+#ifdef OCE_INSTALL_DATA_DIR
+      if (CasRootString.Length() == 0 )  {
+        CasRootString = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if (CasRootString.Length() > 0 )  {
 	CasRootString += "/src/UnitsAPI/Lexi_Expr.dat" ;
 	Units::LexiconFile(CasRootString.ToCString());
@@ -67,6 +72,11 @@ void UnitsAPI::CheckLoading (const Units
     else {
       OSD_Environment CasRootEnv("CASROOT");
       TCollection_AsciiString CasRootString(CasRootEnv.Value());
+#ifdef OCE_INSTALL_DATA_DIR
+      if (CasRootString.Length() == 0 )  {
+        CasRootString = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if (CasRootString.Length() > 0 ) {
 	CasRootString += "/src/UnitsAPI/Units.dat";
 	Units::UnitsFile(CasRootString.ToCString());
Index: oce/src/ViewerTest/ViewerTest.cxx
===================================================================
--- oce.orig/src/ViewerTest/ViewerTest.cxx
+++ oce/src/ViewerTest/ViewerTest.cxx
@@ -1692,6 +1692,11 @@ static TCollection_AsciiString GetEnvir
     Standard_Boolean HasDefinition = Standard_False ;
     if ( !envir ) {
       casroot  = getenv("CASROOT");
+#ifdef OCE_INSTALL_DATA_DIR
+      if ( !casroot )  {
+        casroot = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if ( casroot ) {
 	VarName = TCollection_AsciiString  (casroot);
 	VarName += "/src/Textures" ;
Index: oce/src/XmlLDrivers/XmlLDrivers_DocumentStorageDriver.cxx
===================================================================
--- oce.orig/src/XmlLDrivers/XmlLDrivers_DocumentStorageDriver.cxx
+++ oce/src/XmlLDrivers/XmlLDrivers_DocumentStorageDriver.cxx
@@ -196,6 +196,11 @@ Standard_Boolean XmlLDrivers_DocumentSto
   if (aResourceDir.IsEmpty()) {
     // now try by CASROOT
     aResourceDir = getenv (aCSFVariable[1]);
+#ifdef OCE_INSTALL_DATA_DIR
+    if (aResourceDir.IsEmpty()) {
+      aResourceDir = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( !aResourceDir.IsEmpty() ) {
       aResourceDir += "/src/XmlOcafResource" ;
       aToSetCSFVariable = Standard_True; //CSF variable to be set later
