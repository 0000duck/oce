commit 3859df6bc2d947d017175ac755c9e9a00cc1b3b2
Author: Denis Barbier <bouzim@gmail.com>
Date:   Thu Apr 21 21:40:42 2011 +0200

    Get rid of all environment variables
    
    If environment variables are not set, provide default values
    which are set according to installation paths.
    
    This works only for CMake-based builds.

From 22648a6fbdb9d2257a2a3d018d9a0b253838e4a3 Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Mon, 29 Aug 2011 08:15:36 +0200
Subject: [PATCH] Modify tcl scripts to not require $env(CASROOT)

"info script" returns the path of the file being executed, and points to
DrawResources directory.  Sibling directories are computed from this value.

DrawDefault does no more have to be generated by CMake.
---
 CMakeLists.txt                         |    8 +------
 DrawDefault.cmake                      |   37 --------------------------------
 src/DrawResources/DataExchangeDemo.tcl |    6 +++-
 src/DrawResources/DrawDefault          |    6 +----
 src/DrawResources/OCAFDemo.tcl         |    2 +-
 src/DrawResources/TKTopTest.tcl        |    4 +-
 6 files changed, 9 insertions(+), 54 deletions(-)
 delete mode 100644 DrawDefault.cmake

Index: oce/DrawDefault.cmake
===================================================================
--- oce.orig/DrawDefault.cmake
+++ /dev/null
@@ -1,37 +0,0 @@
-set tcl_interactive 1
-set tcl_precision 17
-
-if [info exists library] {
-  source [file join $library init.tcl]
-}
-set dir ""
-if { [info exists env(DRAWHOME) ] } { 
-  set dir $env(DRAWHOME)  
-} else {
-    if { [info exists env(CASROOT) ] } {
-  set dir [file join $env(CASROOT) src DrawResources]
-    } else {
-  set dir [file join "@OCE_ABSPATH_DATA_DIR@" src DrawResources]
-    }
-}
-
-# san - 02/08/2002 - In Tcl8.3 it is no longer necessary to load Tix explicitly on WNT
-#if { [info exists env(STATION)] } {
-#  if { $env(STATION) == "wnt" } {
-#    load tix8183.dll Tix
-#  }
-#}
-
-if { [file exist  $dir] } { 
-   source [file join $dir StandardCommands.tcl]
-   source [file join $dir StandardViews.tcl]
-   source [file join $dir Geometry.tcl]
-   if [info exists tk_version] {source [file join $dir DrawTK.tcl]}
-   if [file readable DrawAppliInit] {
-  source DrawAppliInit
-   }
-   set stationname $tcl_platform(platform)
-   if { ${stationname} == "windows" } {
-      wm iconbitmap . -default [file join $dir lamp.ico]
-   }
-} 
Index: oce/src/DPrsStd/DPrsStd.cxx
===================================================================
--- oce.orig/src/DPrsStd/DPrsStd.cxx
+++ oce/src/DPrsStd/DPrsStd.cxx
@@ -70,6 +70,11 @@ static Standard_Boolean FoundCAFPlugin (
   Standard_Boolean hasPlugin = Standard_False; 
   TCollection_AsciiString PluginName ;
   if ( !plugin ) { 
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( !casroot ) {
+      casroot = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( casroot ) {
       PluginName = TCollection_AsciiString (casroot);
       PluginName+="/src/StdResource" ;
Index: oce/src/Draw/Draw.cxx
===================================================================
--- oce.orig/src/Draw/Draw.cxx
+++ oce/src/Draw/Draw.cxx
@@ -340,6 +340,8 @@ void Draw_Appli(Standard_Integer argc, c
     {
 #ifdef WNT
       ReadInitFile ("ddefault");
+#elif defined(OCE_INSTALL_DATA_DIR)
+	  ReadInitFile(OCE_INSTALL_DATA_DIR "/src/DrawResources/DrawDefault");
 #else
       cout << " the CASROOT variable is mandatory to Run OpenCascade "<< endl;
       cout << "No default file" << endl;
Index: oce/src/Draw/Draw_PloadCommands.cxx
===================================================================
--- oce.orig/src/Draw/Draw_PloadCommands.cxx
+++ oce/src/Draw/Draw_PloadCommands.cxx
@@ -64,6 +64,11 @@ static Standard_Boolean FindPluginFile (
     // now try by CASROOT
     aPluginDir = getenv("CASROOT");
 
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( aPluginDir.IsEmpty() ) {
+      aPluginDir = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( !aPluginDir.IsEmpty() ) {
       aPluginDir +="/src/DrawResources" ;
       aToSetCSFVariable = Standard_True; //CSF variable to be set later
Index: oce/src/DrawResources/DrawDefault
===================================================================
--- oce.orig/src/DrawResources/DrawDefault
+++ oce/src/DrawResources/DrawDefault
@@ -13,12 +13,7 @@ set dir ""
 if { [info exists env(DRAWHOME) ] } { 
   set dir $env(DRAWHOME)  
 } else {
-  if { [info exists env(CASROOT) ] } {
-    set dir [file join $env(CASROOT) src DrawResources]
-  } else {
-    puts "Warning: CASROOT is not defined, some features may not load correctly"
-    set dir [file dirname [info script]]
-  }
+  set dir [file dirname [info script]]
 }
 
 # load standard DRAW scripts
Index: oce/src/DrawResources/TKTopTest.tcl
===================================================================
--- oce.orig/src/DrawResources/TKTopTest.tcl
+++ oce/src/DrawResources/TKTopTest.tcl
@@ -12,5 +12,5 @@
 # commercial license or contractual agreement.
 
 set Draw_GEOMETRY 1
-source $env(CASROOT)/src/DrawResources/CURVES.tcl
-source $env(CASROOT)/src/DrawResources/SURFACES.tcl
+source [file dirname [info script]]/CURVES.tcl
+source [file dirname [info script]]/SURFACES.tcl
Index: oce/src/Resource/Resource_Manager.cxx
===================================================================
--- oce.orig/src/Resource/Resource_Manager.cxx
+++ oce/src/Resource/Resource_Manager.cxx
@@ -71,6 +71,8 @@ Resource_Manager::Resource_Manager(const
   Debug = (getenv("ResourceDebug") != NULL) ;
 
   TCollection_AsciiString EnvVar, CSF_ = "CSF_" ;
+  TCollection_AsciiString DefaultVar;
+  TCollection_AsciiString Name = aName ;
   TCollection_AsciiString Directory ;
   Standard_CString dir ;
 
@@ -83,9 +85,19 @@ Resource_Manager::Resource_Manager(const
     Load(Directory,myName,myRefMap);
   }
   else
+  {
+#ifdef OCE_INSTALL_DATA_DIR
+    if ( Name.IsEqual("STEP") || Name.IsEqual("IGES"))
+      DefaultVar = OCE_INSTALL_DATA_DIR "/src/XSTEPResource";
+    else
+      DefaultVar = OCE_INSTALL_DATA_DIR "/src/StdResource";
+    Load(DefaultVar,myName,myRefMap);
+#else
     if (myVerbose)
       cout << "Resource Manager Warning: Environment variable \"" << EnvVar
 	   << "\" not set." << endl;
+#endif
+  }
 
   EnvVar = CSF_ + aName + "UserDefaults" ;
   if ((dir = getenv (EnvVar.ToCString())) != NULL) {
Index: oce/src/UnitsAPI/UnitsAPI.cxx
===================================================================
--- oce.orig/src/UnitsAPI/UnitsAPI.cxx
+++ oce/src/UnitsAPI/UnitsAPI.cxx
@@ -49,6 +49,11 @@ void UnitsAPI::CheckLoading (const Units
     else {
       OSD_Environment CasRootEnv("CASROOT");
       TCollection_AsciiString CasRootString(CasRootEnv.Value());
+#ifdef OCE_INSTALL_DATA_DIR
+      if (CasRootString.IsEmpty())  {
+        CasRootString = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if (CasRootString.Length() > 0 )  {
 	CasRootString += "/src/UnitsAPI/Lexi_Expr.dat" ;
 	Units::LexiconFile(CasRootString.ToCString());
@@ -63,6 +68,11 @@ void UnitsAPI::CheckLoading (const Units
     else {
       OSD_Environment CasRootEnv("CASROOT");
       TCollection_AsciiString CasRootString(CasRootEnv.Value());
+#ifdef OCE_INSTALL_DATA_DIR
+      if (CasRootString.IsEmpty())  {
+        CasRootString = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if (CasRootString.Length() > 0 ) {
 	CasRootString += "/src/UnitsAPI/Units.dat";
 	Units::UnitsFile(CasRootString.ToCString());
Index: oce/src/XmlLDrivers/XmlLDrivers_DocumentStorageDriver.cxx
===================================================================
--- oce.orig/src/XmlLDrivers/XmlLDrivers_DocumentStorageDriver.cxx
+++ oce/src/XmlLDrivers/XmlLDrivers_DocumentStorageDriver.cxx
@@ -186,6 +186,11 @@ Standard_Boolean XmlLDrivers_DocumentSto
   if (aResourceDir.IsEmpty()) {
     // now try by CASROOT
     aResourceDir = getenv (aCSFVariable[1]);
+#ifdef OCE_INSTALL_DATA_DIR
+    if (aResourceDir.IsEmpty()) {
+      aResourceDir = OCE_INSTALL_DATA_DIR;
+    }
+#endif
     if ( !aResourceDir.IsEmpty() ) {
       aResourceDir += "/src/XmlOcafResource" ;
       aToSetCSFVariable = Standard_True; //CSF variable to be set later
Index: oce/src/Graphic3d/Graphic3d_ShaderProgram.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_ShaderProgram.cxx
+++ oce/src/Graphic3d/Graphic3d_ShaderProgram.cxx
@@ -24,6 +24,10 @@
 #include <OSD_File.hxx>
 #include <OSD_Path.hxx>
 
+#ifdef HAVE_OCE_PATHS_H
+# include "oce-paths.h"
+#endif
+
 namespace
 {
   static volatile Standard_Integer THE_PROGRAM_OBJECT_COUNTER = 0;
@@ -49,6 +53,11 @@ const TCollection_AsciiString& Graphic3d
     {
       OSD_Environment aCasRootEnv ("CASROOT");
       THE_SHADERS_FOLDER = aCasRootEnv.Value();
+#ifdef OCE_INSTALL_DATA_DIR
+      if (THE_SHADERS_FOLDER.IsEmpty())  {
+        THE_SHADERS_FOLDER = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if (!THE_SHADERS_FOLDER.IsEmpty())
       {
         THE_SHADERS_FOLDER += "/src/Shaders";
Index: oce/src/Graphic3d/Graphic3d_TextureRoot.cxx
===================================================================
--- oce.orig/src/Graphic3d/Graphic3d_TextureRoot.cxx
+++ oce/src/Graphic3d/Graphic3d_TextureRoot.cxx
@@ -26,6 +26,10 @@
 #include <OSD_File.hxx>
 #include <Standard_Atomic.hxx>
 
+#ifdef HAVE_OCE_PATHS_H
+# include "oce-paths.h"
+#endif
+
 namespace
 {
   static volatile Standard_Integer THE_TEXTURE_COUNTER = 0;
@@ -48,6 +52,11 @@ TCollection_AsciiString Graphic3d_Textur
     {
       OSD_Environment aCasRootEnv ("CASROOT");
       VarName = aCasRootEnv.Value();
+#ifdef OCE_INSTALL_DATA_DIR
+      if (VarName.IsEmpty())  {
+        VarName = OCE_INSTALL_DATA_DIR;
+      }
+#endif
       if (!VarName.IsEmpty())
       {
         VarName += "/src/Textures";
