Index: oce/src/GCPnts/GCPnts_UniformAbscissa.gxx
===================================================================
--- oce.orig/src/GCPnts/GCPnts_UniformAbscissa.gxx
+++ oce/src/GCPnts/GCPnts_UniformAbscissa.gxx
@@ -174,7 +174,7 @@ PerformLengthParametrized( Handle(TColSt
 {
   Standard_Boolean NotDone = Standard_True;
 //  Standard_Boolean LocalDone = Standard_True;
-  Standard_Boolean Forward = Standard_True  ;
+//  Standard_Boolean Forward = Standard_True  ;
   Standard_Real UU1 = Min(U1, U2);
 //  Standard_Real UCurrent;
   Standard_Real Delta, Ui;
Index: oce/src/IntCurveSurface/IntCurveSurface_Inter.gxx
===================================================================
--- oce.orig/src/IntCurveSurface/IntCurveSurface_Inter.gxx
+++ oce/src/IntCurveSurface/IntCurveSurface_Inter.gxx
@@ -419,7 +419,6 @@ void IntCurveSurface_Inter::Perform(cons
   done = Standard_True;
   Standard_Integer NbUOnS = TheSurfaceTool::NbUIntervals(surface,GeomAbs_C2);
   Standard_Integer NbVOnS = TheSurfaceTool::NbVIntervals(surface,GeomAbs_C2);
-  Standard_Integer NbOnC  = TheCurveTool::NbIntervals(curve,GeomAbs_C2);
   Standard_Real U0,U1,V0,V1; 
   
   if(NbUOnS > 1) { 
Index: oce/src/IntWalk/IntWalk_PWalking_1.gxx
===================================================================
--- oce.orig/src/IntWalk/IntWalk_PWalking_1.gxx
+++ oce/src/IntWalk/IntWalk_PWalking_1.gxx
@@ -418,7 +418,6 @@ void IntWalk_PWalking::Perform(const TCo
   //xf
   Standard_Integer i, NbPasOKConseq;
   Standard_Real UFirst1, VFirst1, ULast1, VLast1, UFirst2, VFirst2, ULast2, VLast2;
-  Standard_Real pasMaxSV[4], aTmp;
   TColStd_Array1OfReal Param(1,4);
   IntImp_ConstIsoparametric ChoixIso;
   //xt
Index: oce/src/Intf/Intf_InterferencePolygonPolyhedron.gxx
===================================================================
--- oce.orig/src/Intf/Intf_InterferencePolygonPolyhedron.gxx
+++ oce/src/Intf/Intf_InterferencePolygonPolyhedron.gxx
@@ -1059,7 +1059,6 @@ void Intf_InterferencePolygonPolyhedron:
 //   Standard_Real dEndTri=(triNor*EndO.XYZ())-triDp; // Distance <EndO> plan
 
   Standard_Boolean NoIntersectionWithTriangle = Standard_False;
-  Standard_Boolean PolygonCutsPlane           = Standard_True;
 
   Standard_Real param;
   t = dBegTri-dEndTri;
Index: oce/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
@@ -1330,7 +1330,7 @@ int mma1jak_(integer *ndimen,
 {
   /* System generated locals */
   integer somtab_dim1, somtab_offset, diftab_dim1, diftab_offset, 
-  crvjac_dim1, crvjac_offset, cgauss_dim1;
+  crvjac_dim1, crvjac_offset;
 
   /* Local variables */
   static integer ibb;
Index: oce/src/BRepOffset/BRepOffset_Inter2d.cxx
===================================================================
--- oce.orig/src/BRepOffset/BRepOffset_Inter2d.cxx
+++ oce/src/BRepOffset/BRepOffset_Inter2d.cxx
@@ -297,10 +297,11 @@ static void EdgeInter(const TopoDS_Face&
     return;
 
   Standard_Real f[3],l[3];
-  Standard_Real MilTol2 = 1000*Tol*Tol;
   Standard_Real TolDub = 1.e-7;
   Standard_Integer i;
-
+#ifdef DEB
+  Standard_Real MilTol2 = 1000*Tol*Tol;
+#endif
   BRep_Tool::Range(E1, f[1], l[1]);
   BRep_Tool::Range(E2, f[2], l[2]);
 
@@ -569,10 +570,11 @@ static void RefEdgeInter(const TopoDS_Fa
     return;
 
   Standard_Real f[3],l[3];
-  Standard_Real MilTol2 = 1000*Tol*Tol;
   Standard_Real TolDub = 1.e-7;
   Standard_Integer i;
-
+#ifdef DEB
+  Standard_Real MilTol2 = 1000*Tol*Tol;
+#endif
   //BRep_Tool::Range(E1, f[1], l[1]);
   //BRep_Tool::Range(E2, f[2], l[2]);
 
Index: oce/src/BiTgte/BiTgte_Blend.cxx
===================================================================
--- oce.orig/src/BiTgte/BiTgte_Blend.cxx
+++ oce/src/BiTgte/BiTgte_Blend.cxx
@@ -237,8 +237,6 @@ static void KPartCurve3d(TopoDS_Edge
   TopLoc_Location Loc;
   Standard_Real Tol = Precision::Confusion();
 
-  Standard_Boolean IsComputed = Standard_False;
-
   // Seach only isos on analytical surfaces.
   Geom2dAdaptor_Curve C(Curve);
   GeomAdaptor_Surface S(Surf);
Index: oce/src/Extrema/Extrema_FuncExtPS.cxx
===================================================================
--- oce.orig/src/Extrema/Extrema_FuncExtPS.cxx
+++ oce/src/Extrema/Extrema_FuncExtPS.cxx
@@ -41,7 +41,6 @@ Extrema_FuncExtPS::Extrema_FuncExtPS (co
 {
   myP = P;
   myS = (Adaptor3d_SurfacePtr)&S;
-  GeomAbs_SurfaceType aSType = S.GetType();
   myPinit = Standard_True;
   mySinit = Standard_True;
 }
@@ -50,7 +49,6 @@ Extrema_FuncExtPS::Extrema_FuncExtPS (co
 void Extrema_FuncExtPS::Initialize(const Adaptor3d_Surface& S)
 {
   myS = (Adaptor3d_SurfacePtr)&S;
-  GeomAbs_SurfaceType aSType = S.GetType();
   mySinit = Standard_True;
   myPoint.Clear();
   mySqDist.Clear();
Index: oce/src/GccAna/GccAna_Circ2d3Tan_8.cxx
===================================================================
--- oce.orig/src/GccAna/GccAna_Circ2d3Tan_8.cxx
+++ oce/src/GccAna/GccAna_Circ2d3Tan_8.cxx
@@ -114,8 +114,6 @@ GccAna_Circ2d3Tan::
 	   Standard_Real dist2 = Center.Distance(Point2);
 
 	   Standard_Real Radius=0;
-	   Standard_Integer nbsol1 = 0;
-//	   Standard_Integer nbsol2 = 0;
 	   Standard_Integer nbsol3 = 0;
 	   Standard_Boolean ok = Standard_False;
 	   if (Qualified1.IsEnclosed()) {
@@ -122,7 +122,6 @@ GccAna_Circ2d3Tan::
          (Qualified1.IsUnqualified()))
      {
        ok = Standard_True;
-       nbsol1 = 1;
        Radius = dist1;
      }
 	   if (ok) {
Index: oce/src/GeometryTest/GeometryTest_CurveCommands.cxx
===================================================================
--- oce.orig/src/GeometryTest/GeometryTest_CurveCommands.cxx
+++ oce/src/GeometryTest/GeometryTest_CurveCommands.cxx
@@ -845,8 +845,7 @@ static void ComputeDeviation(const Handl
   theUfMax = 0.;
   theUlMax = 0.;
   theImax = 0;
-  Standard_Real ufmax = 0., ulmax = 0.;
-
+  
   //take knots
   Standard_Integer nbp = thePnts->NbKnots();
   TColStd_Array1OfReal aKnots(1, nbp);
Index: oce/src/IntPatch/IntPatch_ImpPrmIntersection.cxx
===================================================================
--- oce.orig/src/IntPatch/IntPatch_ImpPrmIntersection.cxx
+++ oce/src/IntPatch/IntPatch_ImpPrmIntersection.cxx
@@ -2351,7 +2351,7 @@ void DecomposeResult(Handle(IntPatch_Lin
   Standard_Real BAPEX = M_PI/16.;  // delta U crossing apex
   
   Standard_Integer k = 0;
-  Standard_Real U1 = 0., U2 = 0., V1 = 0., V2 = 0., AnU1 = 0., AnV1 = 0., DU1 = 0., DV1 = 0.;
+  Standard_Real U1 = 0., U2 = 0., V1 = 0., V2 = 0., AnU1 = 0.;
   Standard_Integer Findex = 1, Lindex = NbPnts, Bindex = 0;
 
   gp_Pnt aPnt, aSPnt;
Index: oce/src/IntTools/IntTools_BeanFaceIntersector.cxx
===================================================================
--- oce.orig/src/IntTools/IntTools_BeanFaceIntersector.cxx
+++ oce/src/IntTools/IntTools_BeanFaceIntersector.cxx
@@ -894,7 +894,7 @@ Standard_Boolean IntTools_BeanFaceInters
       aTolang2=1.e-16;
       aLin=myCurve.Line();
       const gp_Dir& aDirL=aLin.Direction();
-      const gp_Pnt& aLocL=aLin.Location();
+      
       //
       aCos=aDirC.Dot(aDirL);
       if(aCos >= 0.) {
Index: oce/src/OpenGl/OpenGl_LayerList.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_LayerList.cxx
+++ oce/src/OpenGl/OpenGl_LayerList.cxx
@@ -222,7 +222,7 @@ void OpenGl_LayerList::ChangeLayer (cons
     OpenGl_SequenceOfLayers::Iterator anIts;
     for (anIts.Init (myLayers); anIts.More (); anIts.Next (), aSeqId++)
     {
-      OpenGl_PriorityList& aScanList = anIts.ChangeValue ();
+      /* OpenGl_PriorityList& aScanList = */ anIts.ChangeValue ();
       if (aSeqPos == aSeqId)
         continue;
   
Index: oce/src/OpenGl/OpenGl_Trihedron.cxx
===================================================================
--- oce.orig/src/OpenGl/OpenGl_Trihedron.cxx
+++ oce/src/OpenGl/OpenGl_Trihedron.cxx
@@ -161,7 +161,7 @@ void OpenGl_Trihedron::Redraw (const Han
   /* 
   * Creation du triedre 
   */
-  const OpenGl_AspectLine *AspectLine = theWorkspace->AspectLine( Standard_True );
+  /* const OpenGl_AspectLine *AspectLine = */ theWorkspace->AspectLine( Standard_True );
 
   /* Fotis Sioutis 2007-11-14 15:06 
   I have also seen in previous posts that the view trihedron in V3d_WIREFRAME mode 
Index: oce/src/StlTransfer/StlTransfer.cxx
===================================================================
--- oce.orig/src/StlTransfer/StlTransfer.cxx
+++ oce/src/StlTransfer/StlTransfer.cxx
@@ -121,7 +121,6 @@ void StlTransfer::BuildIncrementalMesh (
     Standard_ConstructionError::Raise ("StlTransfer::BuildIncrementalMesh");
     }
   
-  Standard_Integer NbVertices, NbTriangles;
   BRepMesh_IncrementalMesh aMesher(Shape, Deflection, Standard_False, 0.5, InParallel);
   for (TopExp_Explorer itf(Shape,TopAbs_FACE); itf.More(); itf.Next()) {
     TopoDS_Face face = TopoDS::Face(itf.Current());
Index: oce/src/TopOpeBRepTool/TopOpeBRepTool_tol.cxx
===================================================================
--- oce.orig/src/TopOpeBRepTool/TopOpeBRepTool_tol.cxx
+++ oce/src/TopOpeBRepTool/TopOpeBRepTool_tol.cxx
@@ -110,11 +110,6 @@ Standard_EXPORT void FTOL_FaceTolerances
   }
   Standard_Real tolef= tolef1;
   if (tolef2>tolef) tolef=tolef2;
- //jmb le 30 juillet 99. on ne multiplie pas la tolerance par la dimension de la piece
- // Standard_Real tolbox = tolef*dx;
-  Standard_Real tolbox = tolef;
-
-  Standard_Real tolmin = Precision::Confusion();
 
   Deflection=0.01;
   MaxUV=0.01;
Index: oce/src/XSDRAWSTEP/XSDRAWSTEP.cxx
===================================================================
--- oce.orig/src/XSDRAWSTEP/XSDRAWSTEP.cxx
+++ oce/src/XSDRAWSTEP/XSDRAWSTEP.cxx
@@ -574,7 +574,7 @@ static Standard_Integer stepfileunits (D
   TColStd_SequenceOfAsciiString anUnitSolidAngleNames;
   aStepReader.FileUnits( anUnitLengthNames,anUnitAngleNames,anUnitSolidAngleNames);
                                    
-  Standard_Integer i =1, nb = anUnitLengthNames.Length();
+  Standard_Integer i =1;
   di<<"=====================================================\n";
   di<<"LENTH Unit"<<"\n";
   for( ; i <= anUnitLengthNames.Length() ; i++)
