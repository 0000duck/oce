Index: oce/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
===================================================================
--- oce.orig/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
+++ oce/src/AdvApp2Var/AdvApp2Var_ApproxF2var.cxx
@@ -1326,7 +1326,7 @@ int mma1jak_(integer *ndimen,
 {
   /* System generated locals */
   integer somtab_dim1, somtab_offset, diftab_dim1, diftab_offset, 
-  crvjac_dim1, crvjac_offset, cgauss_dim1;
+  crvjac_dim1, crvjac_offset;
 
   /* Local variables */
   integer ibb;
Index: oce/src/BiTgte/BiTgte_Blend.cxx
===================================================================
--- oce.orig/src/BiTgte/BiTgte_Blend.cxx
+++ oce/src/BiTgte/BiTgte_Blend.cxx
@@ -229,8 +229,6 @@ static void KPartCurve3d(TopoDS_Edge
   TopLoc_Location Loc;
   Standard_Real Tol = Precision::Confusion();
 
-  Standard_Boolean IsComputed = Standard_False;
-
   // Seach only isos on analytical surfaces.
   Geom2dAdaptor_Curve C(Curve);
   GeomAdaptor_Surface S(Surf);
Index: oce/src/GCPnts/GCPnts_UniformAbscissa.gxx
===================================================================
--- oce.orig/src/GCPnts/GCPnts_UniformAbscissa.gxx
+++ oce/src/GCPnts/GCPnts_UniformAbscissa.gxx
@@ -170,7 +170,7 @@ PerformLengthParametrized( Handle(TColSt
 {
   Standard_Boolean NotDone = Standard_True;
 //  Standard_Boolean LocalDone = Standard_True;
-  Standard_Boolean Forward = Standard_True  ;
+//  Standard_Boolean Forward = Standard_True  ;
   Standard_Real UU1 = Min(U1, U2);
 //  Standard_Real UCurrent;
   Standard_Real Delta, Ui;
Index: oce/src/GccAna/GccAna_Circ2d3Tan_8.cxx
===================================================================
--- oce.orig/src/GccAna/GccAna_Circ2d3Tan_8.cxx
+++ oce/src/GccAna/GccAna_Circ2d3Tan_8.cxx
@@ -108,8 +108,6 @@ GccAna_Circ2d3Tan::
 	   Standard_Real dist2 = Center.Distance(Point2);
 
 	   Standard_Real Radius=0;
-	   Standard_Integer nbsol1 = 0;
-//	   Standard_Integer nbsol2 = 0;
 	   Standard_Integer nbsol3 = 0;
 	   Standard_Boolean ok = Standard_False;
      Standard_Real  difference = (((origin1.X()-Center.X())*(-dir1.Y())) + ((origin1.Y()-Center.Y())*(dir1.X())));
@@ -118,7 +116,6 @@ GccAna_Circ2d3Tan::
          (Qualified1.IsUnqualified()))
      {
        ok = Standard_True;
-       nbsol1 = 1;
        Radius = dist1;
      }
 	   if (ok) {
Index: oce/src/IntPatch/IntPatch_ImpPrmIntersection.cxx
===================================================================
--- oce.orig/src/IntPatch/IntPatch_ImpPrmIntersection.cxx
+++ oce/src/IntPatch/IntPatch_ImpPrmIntersection.cxx
@@ -2324,7 +2324,7 @@ void DecomposeResult(Handle(IntPatch_Lin
   Standard_Real BAPEX = M_PI/16.;  // delta U crossing apex
   
   Standard_Integer k = 0;
-  Standard_Real U1 = 0., U2 = 0., V1 = 0., V2 = 0., AnU1 = 0., AnV1 = 0., DU1 = 0., DV1 = 0.;
+  Standard_Real U1 = 0., U2 = 0., V1 = 0., V2 = 0., AnU1 = 0.;
   Standard_Integer Findex = 1, Lindex = NbPnts, Bindex = 0;
 
   gp_Pnt aPnt, aSPnt;
Index: oce/src/Intf/Intf_InterferencePolygonPolyhedron.gxx
===================================================================
--- oce.orig/src/Intf/Intf_InterferencePolygonPolyhedron.gxx
+++ oce/src/Intf/Intf_InterferencePolygonPolyhedron.gxx
@@ -1059,7 +1059,6 @@ void Intf_InterferencePolygonPolyhedron:
 //   Standard_Real dEndTri=(triNor*EndO.XYZ())-triDp; // Distance <EndO> plan
 
   Standard_Boolean NoIntersectionWithTriangle = Standard_False;
-  Standard_Boolean PolygonCutsPlane           = Standard_True;
 
   Standard_Real param;
   t = dBegTri-dEndTri;
Index: oce/src/StlTransfer/StlTransfer.cxx
===================================================================
--- oce.orig/src/StlTransfer/StlTransfer.cxx
+++ oce/src/StlTransfer/StlTransfer.cxx
@@ -117,7 +117,6 @@ void StlTransfer::BuildIncrementalMesh (
     Standard_ConstructionError::Raise ("StlTransfer::BuildIncrementalMesh");
     }
   
-  Standard_Integer NbVertices, NbTriangles;
   BRepMesh_IncrementalMesh aMesher(Shape, Deflection, Standard_False, 0.5, InParallel);
   for (TopExp_Explorer itf(Shape,TopAbs_FACE); itf.More(); itf.Next()) {
     TopoDS_Face face = TopoDS::Face(itf.Current());
