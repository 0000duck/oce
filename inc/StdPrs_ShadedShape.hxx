// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StdPrs_ShadedShape_HeaderFile
#define _StdPrs_ShadedShape_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineAlloc_HeaderFile
#include <Standard_DefineAlloc.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Prs3d_Root_HeaderFile
#include <Prs3d_Root.hxx>
#endif
#ifndef _Handle_Prs3d_Presentation_HeaderFile
#include <Handle_Prs3d_Presentation.hxx>
#endif
#ifndef _Handle_Prs3d_Drawer_HeaderFile
#include <Handle_Prs3d_Drawer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Prs3d_Presentation;
class TopoDS_Shape;
class Prs3d_Drawer;
class gp_Pnt2d;


//! Auxiliary procedures to prepare Shaded presentation of specified shape. <br>
class StdPrs_ShadedShape  : public Prs3d_Root {
public:

  DEFINE_STANDARD_ALLOC

  //! Shades <theShape>. <br>
//! @param theToExploreSolids when set to true, explodes compound into two groups - with closed Solids and open Shells <br>
  Standard_EXPORT   static  void Add(const Handle(Prs3d_Presentation)& thePresentation,const TopoDS_Shape& theShape,const Handle(Prs3d_Drawer)& theDrawer,const Standard_Boolean theToExploreSolids = Standard_True) ;
  //! Shades <theShape> with texture coordinates. <br>
//! @param theToExploreSolids when set to true, explodes compound into two groups - with closed Solids and open Shells <br>
  Standard_EXPORT   static  void Add(const Handle(Prs3d_Presentation)& thePresentation,const TopoDS_Shape& theShape,const Handle(Prs3d_Drawer)& theDrawer,const Standard_Boolean theHasTexels,const gp_Pnt2d& theUVOrigin,const gp_Pnt2d& theUVRepeat,const gp_Pnt2d& theUVScale,const Standard_Boolean theToExploreSolids = Standard_True) ;
  //! Validates triangulation within the shape and performs tessellation if necessary. <br>
  Standard_EXPORT   static  void Tessellate(const TopoDS_Shape& theShape,const Handle(Prs3d_Drawer)& theDrawer) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
